{"platform":{"name":"centos","release":"7.8.2003"},"profiles":[{"name":"Database_Generic_SRG","version":"0.1.0","sha256":"14e21524104b060966318b0c0237c0b37359c5dce8005003497f30cafe3ec994","title":"Database Security Requirements Guide","maintainer":"The Authors","summary":"The Database Security Requirements Guide (SRG) is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the NIST 800-53 and related documents. Comments or proposed revisions to this document should be sent via e-mail to the following address: disa.stig_spt@mail.mil.","license":"Apache-2.0","copyright":"The Authors","copyright_email":"you@example.com","supports":[],"attributes":[{"name":"cb_service_user","options":{"value":"couchbase"}},{"name":"cb_service_group","options":{"value":"couchbase"}},{"name":"cb_full_admin","options":{"value":"admin"}},{"name":"cb_full_admin_password","options":{"value":"@dminP@asswd2020"}},{"name":"cb_admin_users","options":{"value":["cbadmin"]}},{"name":"cb_users","options":{"value":["cbuser"]}},{"name":"cb_roles","options":{"value":["admin","bucket_admin"]}},{"name":"cb_use_saslauthd","options":{"value":"true"}},{"name":"cb_use_ldap","options":{"value":"false"}},{"name":"cb_use_pki","options":{"value":"true"}},{"name":"cb_auth_domain","options":{"value":"local"}},{"name":"cb_private_key_path","options":{"value":"/etc/ssl/ca.key"}},{"name":"cb_ca_file_path","options":{"value":"/etc/ssl/ca.pem"}},{"name":"cb_home_dir","options":{"value":"/opt/couchbase"}},{"name":"cb_bin_dir","options":{"value":"/opt/couchbase/bin"}},{"name":"cb_config_dir","options":{"value":"opt/couchbase/etc/couchbase"}},{"name":"cb_static_conf","options":{"value":"opt/couchbase/etc/couchbase/static_config"}},{"name":"cb_data_dir","options":{"value":"/opt/couchbase/var/lib/couchbase/data"}},{"name":"cb_log_dir","options":{"value":"/opt/couchbase/var/lib/couchbase/logs"}},{"name":"cb_audit_log","options":{"value":"/opt/couchbase/var/lib/couchbase/logs/audit.log"}},{"name":"cb_samples_dir","options":{"value":"/opt/couchbase/samples"}},{"name":"sample_buckets","options":{"value":["travel-sample","gamesim-sample","beer-sample"]}},{"name":"cb_required_audit_events","options":{"value":["Service configuration change","authentication succeeded","session terminated"]}},{"name":"cb_required_audit_event_ids","options":{"value":["36865","20485","20493","20489"]}},{"name":"cb_cluster_host","options":{"value":"localhost"}},{"name":"cb_cluster_port","options":{"value":"8091"}},{"name":"cb_query_port","options":{"value":"8093"}},{"name":"is_docker","options":{"value":"true"}},{"name":"cb_redhat_approved_packages","options":{"value":["couchbase-release","couchbase-server"]}},{"name":"cb_debian_approved_packages","options":{"value":["couchbase-server"]}},{"name":"approved_ssl_protocol","options":{"value":"tlsv1.2"}},{"name":"approved_ciphers","options":{"value":["TLS_RSA_WITH_AES_128_CBC_SHA","TLS_RSA_WITH_AES_256_CBC_SHA"]}}],"groups":[{"id":"controls/V-58079.rb","controls":["V-58079"]},{"id":"controls/V-58129.rb","controls":["V-58129"]},{"id":"controls/V-58069.rb","controls":["V-58069"]},{"id":"controls/V-32391.rb","controls":["V-32391"]},{"id":"controls/V-32362.rb","controls":["V-32362"]},{"id":"controls/V-58109.rb","controls":["V-58109"]},{"id":"controls/V-58049.rb","controls":["V-58049"]},{"id":"controls/V-32469.rb","controls":["V-32469"]},{"id":"controls/V-32529.rb","controls":["V-32529"]},{"id":"controls/V-32479.rb","controls":["V-32479"]},{"id":"controls/V-32428.rb","controls":["V-32428"]},{"id":"controls/V-58059.rb","controls":["V-58059"]},{"id":"controls/V-58119.rb","controls":["V-58119"]},{"id":"controls/V-32395.rb","controls":["V-32395"]},{"id":"controls/V-32203.rb","controls":["V-32203"]},{"id":"controls/V-32192.rb","controls":["V-32192"]},{"id":"controls/V-58159.rb","controls":["V-58159"]},{"id":"controls/V-58019.rb","controls":["V-58019"]},{"id":"controls/V-32468.rb","controls":["V-32468"]},{"id":"controls/V-32528.rb","controls":["V-32528"]},{"id":"controls/V-32478.rb","controls":["V-32478"]},{"id":"controls/V-58149.rb","controls":["V-58149"]},{"id":"controls/V-32394.rb","controls":["V-32394"]},{"id":"controls/V-32347.rb","controls":["V-32347"]},{"id":"controls/V-32373.rb","controls":["V-32373"]},{"id":"controls/V-58169.rb","controls":["V-58169"]},{"id":"controls/V-58179.rb","controls":["V-58179"]},{"id":"controls/V-58039.rb","controls":["V-58039"]},{"id":"controls/V-32363.rb","controls":["V-32363"]},{"id":"controls/V-58107.rb","controls":["V-58107"]},{"id":"controls/V-58073.rb","controls":["V-58073"]},{"id":"controls/V-58133.rb","controls":["V-58133"]},{"id":"controls/V-32368.rb","controls":["V-32368"]},{"id":"controls/V-58123.rb","controls":["V-58123"]},{"id":"controls/V-58063.rb","controls":["V-58063"]},{"id":"controls/V-32412.rb","controls":["V-32412"]},{"id":"controls/V-58181.rb","controls":["V-58181"]},{"id":"controls/V-58057.rb","controls":["V-58057"]},{"id":"controls/V-58117.rb","controls":["V-58117"]},{"id":"controls/V-32426.rb","controls":["V-32426"]},{"id":"controls/V-58077.rb","controls":["V-58077"]},{"id":"controls/V-58137.rb","controls":["V-58137"]},{"id":"controls/V-32523.rb","controls":["V-32523"]},{"id":"controls/V-58103.rb","controls":["V-58103"]},{"id":"controls/V-58053.rb","controls":["V-58053"]},{"id":"controls/V-32480.rb","controls":["V-32480"]},{"id":"controls/V-58113.rb","controls":["V-58113"]},{"id":"controls/V-58127.rb","controls":["V-58127"]},{"id":"controls/V-58067.rb","controls":["V-58067"]},{"id":"controls/V-58085.rb","controls":["V-58085"]},{"id":"controls/V-32547.rb","controls":["V-32547"]},{"id":"controls/V-58167.rb","controls":["V-58167"]},{"id":"controls/V-58153.rb","controls":["V-58153"]},{"id":"controls/V-32481.rb","controls":["V-32481"]},{"id":"controls/V-32423.rb","controls":["V-32423"]},{"id":"controls/V-58177.rb","controls":["V-58177"]},{"id":"controls/V-58037.rb","controls":["V-58037"]},{"id":"controls/V-58095.rb","controls":["V-58095"]},{"id":"controls/V-32526.rb","controls":["V-32526"]},{"id":"controls/V-58157.rb","controls":["V-58157"]},{"id":"controls/V-58081.rb","controls":["V-58081"]},{"id":"controls/V-58023.rb","controls":["V-58023"]},{"id":"controls/V-58163.rb","controls":["V-58163"]},{"id":"controls/V-32369.rb","controls":["V-32369"]},{"id":"controls/V-58173.rb","controls":["V-58173"]},{"id":"controls/V-32442.rb","controls":["V-32442"]},{"id":"controls/V-58091.rb","controls":["V-58091"]},{"id":"controls/V-32413.rb","controls":["V-32413"]},{"id":"controls/V-58147.rb","controls":["V-58147"]},{"id":"controls/V-32427.rb","controls":["V-32427"]},{"id":"controls/V-32536.rb","controls":["V-32536"]},{"id":"controls/V-32476.rb","controls":["V-32476"]},{"id":"controls/V-58075.rb","controls":["V-58075"]},{"id":"controls/V-58135.rb","controls":["V-58135"]},{"id":"controls/V-58101.rb","controls":["V-58101"]},{"id":"controls/V-58041.rb","controls":["V-58041"]},{"id":"controls/V-32570.rb","controls":["V-32570"]},{"id":"controls/V-58051.rb","controls":["V-58051"]},{"id":"controls/V-58111.rb","controls":["V-58111"]},{"id":"controls/V-32414.rb","controls":["V-32414"]},{"id":"controls/V-58125.rb","controls":["V-58125"]},{"id":"controls/V-58065.rb","controls":["V-58065"]},{"id":"controls/V-58105.rb","controls":["V-58105"]},{"id":"controls/V-58071.rb","controls":["V-58071"]},{"id":"controls/V-58131.rb","controls":["V-58131"]},{"id":"controls/V-32399.rb","controls":["V-32399"]},{"id":"controls/V-58183.rb","controls":["V-58183"]},{"id":"controls/V-58121.rb","controls":["V-58121"]},{"id":"controls/V-58061.rb","controls":["V-58061"]},{"id":"controls/V-32475.rb","controls":["V-32475"]},{"id":"controls/V-32424.rb","controls":["V-32424"]},{"id":"controls/V-58055.rb","controls":["V-58055"]},{"id":"controls/V-58115.rb","controls":["V-58115"]},{"id":"controls/V-58155.rb","controls":["V-58155"]},{"id":"controls/V-58021.rb","controls":["V-58021"]},{"id":"controls/V-58161.rb","controls":["V-58161"]},{"id":"controls/V-58083.rb","controls":["V-58083"]},{"id":"controls/V-32398.rb","controls":["V-32398"]},{"id":"controls/V-58093.rb","controls":["V-58093"]},{"id":"controls/V-58171.rb","controls":["V-58171"]},{"id":"controls/V-32534.rb","controls":["V-32534"]},{"id":"controls/V-58025.rb","controls":["V-58025"]},{"id":"controls/V-58165.rb","controls":["V-58165"]},{"id":"controls/V-32514.rb","controls":["V-32514"]},{"id":"controls/V-58087.rb","controls":["V-58087"]},{"id":"controls/V-58151.rb","controls":["V-58151"]},{"id":"controls/V-32571.rb","controls":["V-32571"]},{"id":"controls/V-58097.rb","controls":["V-58097"]},{"id":"controls/V-32415.rb","controls":["V-32415"]},{"id":"controls/V-32555.rb","controls":["V-32555"]},{"id":"controls/V-58175.rb","controls":["V-58175"]},{"id":"controls/V-58035.rb","controls":["V-58035"]},{"id":"controls/V-32374.rb","controls":["V-32374"]},{"id":"controls/V-32364.rb","controls":["V-32364"]},{"id":"controls/V-32397.rb","controls":["V-32397"]},{"id":"controls/V-32383.rb","controls":["V-32383"]},{"id":"controls/V-32370.rb","controls":["V-32370"]},{"id":"controls/V-61407.rb","controls":["V-61407"]},{"id":"controls/V-32393.rb","controls":["V-32393"]},{"id":"controls/V-32371.rb","controls":["V-32371"]},{"id":"controls/V-58089.rb","controls":["V-58089"]},{"id":"controls/V-58099.rb","controls":["V-58099"]},{"id":"controls/V-32157.rb","controls":["V-32157"]},{"id":"controls/V-32375.rb","controls":["V-32375"]},{"id":"controls/V-32365.rb","controls":["V-32365"]}],"controls":[{"id":"V-58079","title":"Couchbase must generate audit records when privileges/permissions are\n  deleted.","desc":"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, deleting permissions is typically done via the\n  REVOKE or DENY command.","descriptions":[{"label":"default","data":"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, deleting permissions is typically done via the\n  REVOKE or DENY command."},{"label":"check","data":"Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n  As the Full Admin, create a user account and grant roles by running the\n  following command:\n    $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n    -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n    --rbac-name \"John Doe\" --roles replication_admin,cluster_admin \\\n    --auth-domain local\n  As the Full Admin, revoke the \"cluster_admin\" role from John Doe:\n    $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n    --script=\"REVOKE cluster_admin FROM jdoe\"\n  Verify the events were logged with the following command:\n    $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n    Output:\n    {\"description\":\"A N1QL REVOKE ROLE statement was\n    executed\",\"id\":28686,\"isAdHoc\":true,\"metrics\":{\"elapsedTime\":\"104.68184ms\",\n    \"executionTime\":\"104.610836ms\",\"resultCount\":0,\"resultSize\":0,\"warningCount\":1},\n    \"name\":\"REVOKE ROLE statement\",\"node\":\"127.0.0.1:8091\",\"real_use\"rid\"\":{\"domain\":\n    \"local\",\"user\":\"admin\"},\"remote\":{\"ip\":\"127.0.0.1\",\"port\":36832},\"requestId\":\n    \"392e653c-644b-4907-8fbb-5bcb1be8298f\",\"statement\":\"REVOKE cluster_admin FROM\n    jdoe;\",\"status\":\"success\",\"timestamp\":\"2020-08-21T15:54:42.820Z\",\"userAgent\":\n    \"Go-http-client/1.1 (CBQ/2.0)\"}\n  If the above steps cannot verify that audit records are produced when privileges/permissions/role \n  memberships are revoked, this is a finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are deleted.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Enable the required set of auditable events by doing the following:\n    As the Full Admin, log into the cluster and use  the following\n    documentation to enable all on the \"Query and Index Services Event:\n    - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000499-DB-000330","gid":"V-58079","rid":"SV-72509r2_rule","stig_id":"SRG-APP-000499-DB-000330","fix_id":"F-63287r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58079\" do\n  title \"Couchbase must generate audit records when privileges/permissions are\n  deleted.\"\n  desc  \"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, deleting permissions is typically done via the\n  REVOKE or DENY command.\"\n\n  desc  \"check\", \"\n  Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n    As the Full Admin, create a user account and grant roles by running the\n    following command:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n      -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n      --rbac-name \\\"John Doe\\\" --roles replication_admin,cluster_admin \\\\\n      --auth-domain local\n    As the Full Admin, revoke the \\\"cluster_admin\\\" role from John Doe:\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n      --script=\\\"REVOKE cluster_admin FROM jdoe\\\"\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:\n      {\\\"description\\\":\\\"A N1QL REVOKE ROLE statement was\n      executed\\\",\\\"id\\\":28686,\\\"isAdHoc\\\":true,\\\"metrics\\\":{\\\"elapsedTime\\\":\\\"104.68184ms\\\",\n      \\\"executionTime\\\":\\\"104.610836ms\\\",\\\"resultCount\\\":0,\\\"resultSize\\\":0,\\\"warningCount\\\":1},\n      \\\"name\\\":\\\"REVOKE ROLE statement\\\",\\\"node\\\":\\\"127.0.0.1:8091\\\",\\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\n      \\\"local\\\",\\\"user\\\":\\\"admin\\\"},\\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":36832},\\\"requestId\\\":\n      \\\"392e653c-644b-4907-8fbb-5bcb1be8298f\\\",\\\"statement\\\":\\\"REVOKE cluster_admin FROM\n      jdoe;\\\",\\\"status\\\":\\\"success\\\",\\\"timestamp\\\":\\\"2020-08-21T15:54:42.820Z\\\",\\\"userAgent\\\":\n      \\\"Go-http-client/1.1 (CBQ/2.0)\\\"}\n    If the above steps cannot verify that audit records are produced when privileges/permissions/role \n    memberships are revoked, this is a finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when privileges/permissions are deleted.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable the required set of auditable events by doing the following:\n      As the Full Admin, log into the cluster and use  the following\n      documentation to enable all on the \\\"Query and Index Services Event:\n      - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\"\n\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000499-DB-000330\"\n  tag \"gid\": \"V-58079\"\n  tag \"rid\": \"SV-72509r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000499-DB-000330\"\n  tag \"fix_id\": \"F-63287r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Add the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"revoke permissions from jdoe. The\" do \n    subject { command(\"cbq -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} --engine=http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}\\\n    --script='REVOKE replication_admin FROM jdoe'\")}\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'A N1QL REVOKE ROLE' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"success\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58079.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Add the jdoe user. The exit_status is expected to eq 0","run_time":0.118706,"start_time":"2020-09-28T22:09:06-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"passed","code_desc":"revoke permissions from jdoe. The exit_status is expected to eq 0","run_time":0.024644,"start_time":"2020-09-28T22:09:06-04:00"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"success\"/","run_time":0.025695,"start_time":"2020-09-28T22:09:06-04:00","message":"expected \"\" to match /\"success\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"success\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.13078,"start_time":"2020-09-28T22:09:06-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58129","title":"The role(s)/group(s) used to modify database structure (including but\nnot necessarily limited to tables, indexes, storage, etc.) and logic modules\n(stored procedures, functions, triggers, links to software external to\nCouchbase, etc.) must be restricted to authorized users.","desc":"If Couchbase were to allow any user to make changes to database\nstructure or logic, then those changes might be implemented without undergoing\nthe appropriate testing and approvals that are part of a robust change\nmanagement process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.","descriptions":[{"label":"default","data":"If Couchbase were to allow any user to make changes to database\nstructure or logic, then those changes might be implemented without undergoing\nthe appropriate testing and approvals that are part of a robust change\nmanagement process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations."},{"label":"check","data":"Identify the group(s)/role(s) established for Couchbase modification.\n    Obtain the list of users in those group(s)/roles:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    Identify the individuals authorized to modify Couchbase.\n    If unauthorized access to the group(s)/role(s) has been granted, this is a\nfinding."},{"label":"fix","data":"Revoke unauthorized memberships in Couchbase modification group(s)/role(s):\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n--script=\"REVOKE <role> FROM <username>\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000362","gid":"V-58129","rid":"SV-72559r1_rule","stig_id":"SRG-APP-000133-DB-000362","fix_id":"F-63337r1_fix","cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-58129\" do\n  title \"The role(s)/group(s) used to modify database structure (including but\nnot necessarily limited to tables, indexes, storage, etc.) and logic modules\n(stored procedures, functions, triggers, links to software external to\nCouchbase, etc.) must be restricted to authorized users.\"\n  desc  \"If Couchbase were to allow any user to make changes to database\nstructure or logic, then those changes might be implemented without undergoing\nthe appropriate testing and approvals that are part of a robust change\nmanagement process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.\n  \"\n  desc  \"check\", \"\n    Identify the group(s)/role(s) established for Couchbase modification.\n    Obtain the list of users in those group(s)/roles:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    Identify the individuals authorized to modify Couchbase.\n    If unauthorized access to the group(s)/role(s) has been granted, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Revoke unauthorized memberships in Couchbase modification group(s)/role(s):\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n--script=\\\"REVOKE <role> FROM <username>\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000362\"\n  tag \"gid\": \"V-58129\"\n  tag \"rid\": \"SV-72559r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000362\"\n  tag \"fix_id\": \"F-63337r1_fix\"\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58129.rb"},"waiver_data":{},"results":[]},{"id":"V-58069","title":"Couchbase must be able to generate audit records when unsuccessful\n  attempts to retrieve privileges/permissions occur.","desc":"Under some circumstances, it may be useful to monitor who/what is\n  reading privilege/permission/role information. Therefore, it must be possible\n  to configure auditing to do this. Couchbases typically make such information\n  available through views or functions.\n\n  This requirement addresses explicit requests for privilege/permission/role\n  membership information. It does not refer to the implicit retrieval of\n  privileges/permissions/role memberships that Couchbase continually performs to\n  determine if any and every action on the database is permitted.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"Under some circumstances, it may be useful to monitor who/what is\n  reading privilege/permission/role information. Therefore, it must be possible\n  to configure auditing to do this. Couchbases typically make such information\n  available through views or functions.\n\n  This requirement addresses explicit requests for privilege/permission/role\n  membership information. It does not refer to the implicit retrieval of\n  privileges/permissions/role memberships that Couchbase continually performs to\n  determine if any and every action on the database is permitted.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"Review Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to retrieve\nprivileges/permissions/role membership.\n\nIf Couchbase is not capable of this, this is a finding.\nIf Couchbase is currently required to audit the retrieval of\nprivilege/permission/role membership information, review Couchbase/database\nsecurity and audit configurations to verify that audit records are produced\nwhen Couchbase denies retrieval of privileges/permissions/role memberships. \nIf they are not produced, this is a finding.\n    \nReview Couchbase/database security and audit configurations to verify that\naudit records are produced when other errors prevent retrieval of\nprivileges/permissions/role memberships.\nIf they are not produced, this is a finding."},{"label":"fix","data":"Deploy a Couchbase capable of producing the required audit records when it\ndenies or fails to complete access to privileges/permissions/role membership.\n\nIf currently required, configure Couchbase to produce audit records when it\ndenies access to privileges/permissions/role membership.\n\nConfigure Couchbase to produce audit records when other errors prevent\naccess to privileges/permissions/role membership."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000091-DB-000325","gid":"V-58069","rid":"SV-72499r1_rule","stig_id":"SRG-APP-000091-DB-000325","fix_id":"F-63277r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58069\" do\n  title \"Couchbase must be able to generate audit records when unsuccessful\n  attempts to retrieve privileges/permissions occur.\"\n  desc  \"Under some circumstances, it may be useful to monitor who/what is\n  reading privilege/permission/role information. Therefore, it must be possible\n  to configure auditing to do this. Couchbases typically make such information\n  available through views or functions.\n\n  This requirement addresses explicit requests for privilege/permission/role\n  membership information. It does not refer to the implicit retrieval of\n  privileges/permissions/role memberships that Couchbase continually performs to\n  determine if any and every action on the database is permitted.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\n  \"\n  desc  \"check\", \"\n  Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to retrieve\n  privileges/permissions/role membership.\n\n  If Couchbase is not capable of this, this is a finding.\n  If Couchbase is currently required to audit the retrieval of\n  privilege/permission/role membership information, review Couchbase/database\n  security and audit configurations to verify that audit records are produced\n  when Couchbase denies retrieval of privileges/permissions/role memberships. \n  If they are not produced, this is a finding.\n      \n  Review Couchbase/database security and audit configurations to verify that\n  audit records are produced when other errors prevent retrieval of\n  privileges/permissions/role memberships.\n  If they are not produced, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Deploy a Couchbase capable of producing the required audit records when it\n  denies or fails to complete access to privileges/permissions/role membership.\n\n  If currently required, configure Couchbase to produce audit records when it\n  denies access to privileges/permissions/role membership.\n  \n  Configure Couchbase to produce audit records when other errors prevent\n  access to privileges/permissions/role membership.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000091-DB-000325\"\n  tag \"gid\": \"V-58069\"\n  tag \"rid\": \"SV-72499r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000091-DB-000325\"\n  tag \"fix_id\": \"F-63277r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n  \n  describe \"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to retrieve privileges/permissions/role membership.\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n    when the system denies or fails to complete attempts to retrieve privileges/permissions/role membership.\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58069.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to retrieve privileges/permissions/role membership.","run_time":1.0e-05,"start_time":"2020-09-28T22:09:06-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n    when the system denies or fails to complete attempts to retrieve privileges/permissions/role membership."}]},{"id":"V-32391","title":"Couchbase must use system clocks to generate time stamps for use in\naudit records and application data.","desc":"Internal system clocks are typically a feature of server hardware and\nare maintained and used by the operating system. They are typically\nsynchronized with an authoritative time server at regular intervals.\n\n    Without an internal system clock used as the reference for the time stored\non each event to provide a trusted common reference for the time, forensic\nanalysis would be impeded. Determining the correct time a particular event\noccurred on a system is critical when conducting forensic analysis and\ninvestigating system events.\n\n    Time stamps generated by the internal system clock and used by Couchbase\nshall include both date and time. The time may be expressed in Coordinated\nUniversal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or\nlocal time with an offset from UTC.\n\n    If time sources other than the system time are used for audit records, the\ntimeline of events can get skewed. This makes forensic analysis of the logs\nmuch less reliable.","descriptions":[{"label":"default","data":"Internal system clocks are typically a feature of server hardware and\nare maintained and used by the operating system. They are typically\nsynchronized with an authoritative time server at regular intervals.\n\n    Without an internal system clock used as the reference for the time stored\non each event to provide a trusted common reference for the time, forensic\nanalysis would be impeded. Determining the correct time a particular event\noccurred on a system is critical when conducting forensic analysis and\ninvestigating system events.\n\n    Time stamps generated by the internal system clock and used by Couchbase\nshall include both date and time. The time may be expressed in Coordinated\nUniversal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or\nlocal time with an offset from UTC.\n\n    If time sources other than the system time are used for audit records, the\ntimeline of events can get skewed. This makes forensic analysis of the logs\nmuch less reliable."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to enable the use of\nsystem clocks to generate time stamps for audit records.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000116-DB-000057","gid":"V-32391","rid":"SV-42728r3_rule","stig_id":"SRG-APP-000116-DB-000057","fix_id":"F-36306r2_fix","cci":["CCI-000159"],"nist":["AU-8 a","Rev_4"]},"code":"control \"V-32391\" do\n  title \"Couchbase must use system clocks to generate time stamps for use in\naudit records and application data.\"\n  desc  \"Internal system clocks are typically a feature of server hardware and\nare maintained and used by the operating system. They are typically\nsynchronized with an authoritative time server at regular intervals.\n\n    Without an internal system clock used as the reference for the time stored\non each event to provide a trusted common reference for the time, forensic\nanalysis would be impeded. Determining the correct time a particular event\noccurred on a system is critical when conducting forensic analysis and\ninvestigating system events.\n\n    Time stamps generated by the internal system clock and used by Couchbase\nshall include both date and time. The time may be expressed in Coordinated\nUniversal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or\nlocal time with an offset from UTC.\n\n    If time sources other than the system time are used for audit records, the\ntimeline of events can get skewed. This makes forensic analysis of the logs\nmuch less reliable.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to enable the use of\nsystem clocks to generate time stamps for audit records.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000116-DB-000057\"\n  tag \"gid\": \"V-32391\"\n  tag \"rid\": \"SV-42728r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000116-DB-000057\"\n  tag \"fix_id\": \"F-36306r2_fix\"\n  tag \"cci\": [\"CCI-000159\"]\n  tag \"nist\": [\"AU-8 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32391.rb"},"waiver_data":{},"results":[]},{"id":"V-32362","title":"Couchbase must provide audit record generation capability for\nDoD-defined auditable events within all Couchbase/database components.","desc":"Without the capability to generate audit records, it would be\ndifficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit records can be generated from various components within Couchbase\n(e.g., process, module). Certain specific application functionalities may be\naudited as well. The list of audited events is the set of events for which\naudits are to be generated. This set of events is typically a subset of the\nlist of all events for which the system is capable of generating audit records.\n\n    DoD has defined the list of events for which Couchbase will provide an\naudit record generation capability as the following:\n\n    (I) Successful and unsuccessful attempts to access, modify, or delete\nprivileges, security objects, security levels, or categories of information\n(e.g., classification levels);\n\n    (ii) Access actions, such as successful and unsuccessful logon attempts,\nprivileged activities, or other system-level access, starting and ending time\nfor user access to the system, concurrent logons from different workstations,\nsuccessful and unsuccessful accesses to objects, all program initiations, and\nall direct access to the information system; and\n\n    (iii) All account creation, modification, disabling, and termination\nactions.\n\n    Organizations may define additional events requiring continuous or ad hoc\nauditing.","descriptions":[{"label":"default","data":"Without the capability to generate audit records, it would be\ndifficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit records can be generated from various components within Couchbase\n(e.g., process, module). Certain specific application functionalities may be\naudited as well. The list of audited events is the set of events for which\naudits are to be generated. This set of events is typically a subset of the\nlist of all events for which the system is capable of generating audit records.\n\n    DoD has defined the list of events for which Couchbase will provide an\naudit record generation capability as the following:\n\n    (I) Successful and unsuccessful attempts to access, modify, or delete\nprivileges, security objects, security levels, or categories of information\n(e.g., classification levels);\n\n    (ii) Access actions, such as successful and unsuccessful logon attempts,\nprivileged activities, or other system-level access, starting and ending time\nfor user access to the system, concurrent logons from different workstations,\nsuccessful and unsuccessful accesses to objects, all program initiations, and\nall direct access to the information system; and\n\n    (iii) All account creation, modification, disabling, and termination\nactions.\n\n    Organizations may define additional events requiring continuous or ad hoc\nauditing."},{"label":"check","data":"Check Couchbase auditing to determine whether organization-defined\nauditable events are being audited by the system.\n    To verify other events being audited do the following:\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, log into the cluster to verify which events are\ndisabled and which are enabled. Use  the following documentation:\n      -\nhttps://docs.couchbase.com/server/6.0/manage/manage-security/manage-auditing.html\n    Couchbase Server Version 6.51 and later -\n    When auditing is enabled, the following events are audited by default and\ncannot be turned off:\n      - authentication failed\n      - command access failed\n      - privilege debug configured\n      - privilege debug\n      As the Full Admin, execute the following command to verify which events\nare disabled and which are enabled:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n    If organization-defined auditable events are not being audited, this is a\nfinding."},{"label":"fix","data":"Deploy a Couchbase database that supports the DoD minimum set of auditable\nevents.\n    Enable the required set of auditable events by doing the following:\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, log into the cluster and use  the following\ndocumentation to enable required events:\n      -\nhttps://docs.couchbase.com/server/6.0/manage/manage-security/manage-auditing.html\n      -\nhttps://docs.couchbase.com/server/6.5/manage/manage-security/manage-auditing.html\n    Couchbase Server 6.5.1 and later -\n      As the Full Admin, log into the cluster and use the following\ndocumentation to enable required events:\n      -\nhttps://docs.couchbase.com/server/6.5/manage/manage-security/manage-auditing.html\n      -\nhttps://docs.couchbase.com/server/6.6/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000089-DB-000064","gid":"V-32362","rid":"SV-42699r3_rule","stig_id":"SRG-APP-000089-DB-000064","fix_id":"F-36277r2_fix","cci":["CCI-000169"],"nist":["AU-12 a","Rev_4"]},"code":"control \"V-32362\" do\n  title \"Couchbase must provide audit record generation capability for\nDoD-defined auditable events within all Couchbase/database components.\"\n  desc  \"Without the capability to generate audit records, it would be\ndifficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit records can be generated from various components within Couchbase\n(e.g., process, module). Certain specific application functionalities may be\naudited as well. The list of audited events is the set of events for which\naudits are to be generated. This set of events is typically a subset of the\nlist of all events for which the system is capable of generating audit records.\n\n    DoD has defined the list of events for which Couchbase will provide an\naudit record generation capability as the following:\n\n    (I) Successful and unsuccessful attempts to access, modify, or delete\nprivileges, security objects, security levels, or categories of information\n(e.g., classification levels);\n\n    (ii) Access actions, such as successful and unsuccessful logon attempts,\nprivileged activities, or other system-level access, starting and ending time\nfor user access to the system, concurrent logons from different workstations,\nsuccessful and unsuccessful accesses to objects, all program initiations, and\nall direct access to the information system; and\n\n    (iii) All account creation, modification, disabling, and termination\nactions.\n\n    Organizations may define additional events requiring continuous or ad hoc\nauditing.\n  \"\n  desc  \"check\", \"\n    Check Couchbase auditing to determine whether organization-defined\nauditable events are being audited by the system.\n    To verify other events being audited do the following:\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, log into the cluster to verify which events are\ndisabled and which are enabled. Use  the following documentation:\n      -\nhttps://docs.couchbase.com/server/6.0/manage/manage-security/manage-auditing.html\n    Couchbase Server Version 6.51 and later -\n    When auditing is enabled, the following events are audited by default and\ncannot be turned off:\n      - authentication failed\n      - command access failed\n      - privilege debug configured\n      - privilege debug\n      As the Full Admin, execute the following command to verify which events\nare disabled and which are enabled:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n    If organization-defined auditable events are not being audited, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Deploy a Couchbase database that supports the DoD minimum set of auditable\nevents.\n    Enable the required set of auditable events by doing the following:\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, log into the cluster and use  the following\ndocumentation to enable required events:\n      -\nhttps://docs.couchbase.com/server/6.0/manage/manage-security/manage-auditing.html\n      -\nhttps://docs.couchbase.com/server/6.5/manage/manage-security/manage-auditing.html\n    Couchbase Server 6.5.1 and later -\n      As the Full Admin, log into the cluster and use the following\ndocumentation to enable required events:\n      -\nhttps://docs.couchbase.com/server/6.5/manage/manage-security/manage-auditing.html\n      -\nhttps://docs.couchbase.com/server/6.6/manage/manage-security/manage-auditing.html\n\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000089-DB-000064\"\n  tag \"gid\": \"V-32362\"\n  tag \"rid\": \"SV-42699r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000089-DB-000064\"\n  tag \"fix_id\": \"F-36277r2_fix\"\n  tag \"cci\": [\"CCI-000169\"]\n  tag \"nist\": [\"AU-12 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32362.rb"},"waiver_data":{},"results":[]},{"id":"V-58109","title":"Couchbase must generate audit records when unsuccessful logons or\nconnection attempts occur.","desc":"For completeness of forensic analysis, it is necessary to track failed\nattempts to log on to Couchbase. While positive identification may not be\npossible in a case of failed authentication, as much information as possible\nabout the incident must be captured.","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to track failed\nattempts to log on to Couchbase. While positive identification may not be\npossible in a case of failed authentication, as much information as possible\nabout the incident must be captured."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging\nunsuccessful logins and connections by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or is not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen unsuccessful login or connections occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000503-DB-000351","gid":"V-58109","rid":"SV-72539r1_rule","stig_id":"SRG-APP-000503-DB-000351","fix_id":"F-63317r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58109\" do\n  title \"Couchbase must generate audit records when unsuccessful logons or\nconnection attempts occur.\"\n  desc  \"For completeness of forensic analysis, it is necessary to track failed\nattempts to log on to Couchbase. While positive identification may not be\npossible in a case of failed authentication, as much information as possible\nabout the incident must be captured.\"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging\nunsuccessful logins and connections by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or is not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce audit records\nwhen unsuccessful login or connections occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000503-DB-000351\"\n  tag \"gid\": \"V-58109\"\n  tag \"rid\": \"SV-72539r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000503-DB-000351\"\n  tag \"fix_id\": \"F-63317r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58109.rb"},"waiver_data":{},"results":[]},{"id":"V-58049","title":"The Couchbase must utilize centralized management of the content\n\tcaptured in audit records generated by all components of the Couchbase.","desc":"Without the ability to centrally manage the content captured in the\n\taudit records, identification, troubleshooting, and correlation of suspicious\n\tbehavior would be difficult and could lead to a delayed or incomplete analysis\n\tof an ongoing attack.\n\n\tThe content captured in audit records must be managed from a central\n\tlocation (necessitating automation). Centralized management of audit records\n\tand logs provides for efficiency in maintenance and management of records, as\n\twell as the backup and archiving of those records.\n\n\tCouchbase may write audit records to database tables, to files in the file\n\tsystem, to other kinds of local repository, or directly to a centralized log\n\tmanagement system. Whatever the method used, it must be compatible with\n\toff-loading the records to the centralized system.","descriptions":[{"label":"default","data":"Without the ability to centrally manage the content captured in the\n\taudit records, identification, troubleshooting, and correlation of suspicious\n\tbehavior would be difficult and could lead to a delayed or incomplete analysis\n\tof an ongoing attack.\n\n\tThe content captured in audit records must be managed from a central\n\tlocation (necessitating automation). Centralized management of audit records\n\tand logs provides for efficiency in maintenance and management of records, as\n\twell as the backup and archiving of those records.\n\n\tCouchbase may write audit records to database tables, to files in the file\n\tsystem, to other kinds of local repository, or directly to a centralized log\n\tmanagement system. Whatever the method used, it must be compatible with\n\toff-loading the records to the centralized system."},{"label":"check","data":"Review the system documentation for a description of how audit records are\noff-loaded and how local audit log space is managed.\nIf Couchbase audit records are not written directly to or systematically\ntransferred to a centralized log management system, this is a finding.\nCouchbase Server 6.5.0 and earlier -\nAs root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n\nReview the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\nCouchbase Server Version 6.5.1 and later -\nAs the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n$ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\nReview the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Configure and/or deploy software tools to ensure Couchbase audit records\nare written directly to or systematically transferred to a centralized log\nmanagement system.\nCouchbase Server 6.5.0 and earlier -\nAs the Full Admin, execute the following command to enable auditing:\n$ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\nCouchbase Server Version 6.5.1 and later -\nAs the Full Admin, execute the following command to enable auditing:\n$ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000356-DB-000314","gid":"V-58049","rid":"SV-72479r1_rule","stig_id":"SRG-APP-000356-DB-000314","fix_id":"F-63257r1_fix","cci":["CCI-001844"],"nist":["AU-3 (2)","Rev_4"]},"code":"\tcontrol \"V-58049\" do\n\ttitle \"The Couchbase must utilize centralized management of the content\n\tcaptured in audit records generated by all components of the Couchbase.\"\n\n\tdesc  \"Without the ability to centrally manage the content captured in the\n\taudit records, identification, troubleshooting, and correlation of suspicious\n\tbehavior would be difficult and could lead to a delayed or incomplete analysis\n\tof an ongoing attack.\n\n\tThe content captured in audit records must be managed from a central\n\tlocation (necessitating automation). Centralized management of audit records\n\tand logs provides for efficiency in maintenance and management of records, as\n\twell as the backup and archiving of those records.\n\n\tCouchbase may write audit records to database tables, to files in the file\n\tsystem, to other kinds of local repository, or directly to a centralized log\n\tmanagement system. Whatever the method used, it must be compatible with\n\toff-loading the records to the centralized system.\n\t  \"\n\tdesc  \"check\", \"\n\tReview the system documentation for a description of how audit records are\n\toff-loaded and how local audit log space is managed.\n\tIf Couchbase audit records are not written directly to or systematically\n\ttransferred to a centralized log management system, this is a finding.\n\tCouchbase Server 6.5.0 and earlier -\n\tAs root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\n\tvar/lib/couchbase/logs directory of the Couchbase application home (example:\n\t/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n\n\tReview the audit.log file. If it does not exist or not populated with\n\tdata captured, this is a finding.\n\tCouchbase Server Version 6.5.1 and later -\n\tAs the Full Admin, verify that auditing is enabled by executing the\n\tfollowing command:\n\t$ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n\t<Password> --get-settings\n\tReview the output of the command. If \\\"Audit enabled\\\" is not set to\n\t\\\"true\\\", this is finding.\"\n\n\tdesc  \"fix\", \"\n\tConfigure and/or deploy software tools to ensure Couchbase audit records\n\tare written directly to or systematically transferred to a centralized log\n\tmanagement system.\n\tCouchbase Server 6.5.0 and earlier -\n\tAs the Full Admin, execute the following command to enable auditing:\n\t$ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n\t--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n\t--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n\tCouchbase Server Version 6.5.1 and later -\n\tAs the Full Admin, execute the following command to enable auditing:\n\t$ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n\t--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n\t604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\"\n\n\timpact 0.5\n\ttag \"severity\": \"medium\"\n\ttag \"gtitle\": \"SRG-APP-000356-DB-000314\"\n\ttag \"gid\": \"V-58049\"\n\ttag \"rid\": \"SV-72479r1_rule\"\n\ttag \"stig_id\": \"SRG-APP-000356-DB-000314\"\n\ttag \"fix_id\": \"F-63257r1_fix\"\n\ttag \"cci\": [\"CCI-001844\"]\n\ttag \"nist\": [\"AU-3 (2)\", \"Rev_4\"]\n\n  describe \"Couchbase log auditing should be enabled.\" do\n    subject { json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} \\\n    http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/audit\") }\n    its('auditdEnabled') { should eq true }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58049.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Couchbase log auditing should be enabled. auditdEnabled is expected to eq true","run_time":0.032306,"start_time":"2020-09-28T22:09:06-04:00","message":"\nexpected: true\n     got: false\n\n(compared using ==)\n\nDiff:\n@@ -1,2 +1,2 @@\n-true\n+false\n"}]},{"id":"V-32469","title":"If passwords are used for authentication, the Couchbase must transmit\nonly encrypted representations of passwords.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, passwords need to be protected at all times, and encryption\nis the standard method for protecting passwords during transmission.\n\n    Couchbase passwords sent in clear text format across the network are\nvulnerable to discovery by unauthorized users. Disclosure of passwords may\neasily lead to unauthorized access to the database.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, passwords need to be protected at all times, and encryption\nis the standard method for protecting passwords during transmission.\n\n    Couchbase passwords sent in clear text format across the network are\nvulnerable to discovery by unauthorized users. Disclosure of passwords may\neasily lead to unauthorized access to the database."},{"label":"check","data":"Couchbase Server 6.0.x and earlier -\n    Review configuration settings for encrypting passwords in transit across\nthe network. If passwords are not encrypted, this is a finding.\n    Couchbase Server Version 6.5.x and later -\n      As the Full Admin, verify that TLS is configured with the approved\nprotocols and cipher suites with the following command:\n       $ couchbase-cli setting-security -c <host>:<port> -u <Full Admin> -p\n<Password> --get\n    Review the output of the command. If \"disableUIOverHttp\" is not set to\n\"true\", this is finding. If \"tlsMinVersion\" is not set to an approved\nversion, this is a finding. If \"cipherSuites\" is empty or not set to approved\ncipher suites, this is a finding."},{"label":"fix","data":"Ensure passwords remain encrypted from source to destination by configuring\nTLS.\n    Couchbase Server 6.0.x and earlier -\n      As the Full Admin, disable https access to the console with the following\ncommand:\n    $ couchbase-cli setting-security -c <host>:<port> -u <Full Admin> -p\n<Password> --disable-http-ui 1\n    Configure encryption for transmission of passwords across the network. If\nthe database does not provide encryption for logon events natively, employ\nencryption at the OS or network level.\n    Couchbase Server Version 6.5.x and later -\n      As the Full Admin, configure TLS with the following command:\n       $ couchbase-cli setting-security -c <host>:<port> -u <Full Admin> -p\n<Password> --set --disable-http-ui 1 --tls-min-version <TLS Version>\n--cipher-suites <Cipher Suites>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000172-DB-000075","gid":"V-32469","rid":"SV-42806r3_rule","stig_id":"SRG-APP-000172-DB-000075","fix_id":"F-36384r2_fix","cci":["CCI-000197"],"nist":["IA-5 (1) (c)","Rev_4"]},"code":"control \"V-32469\" do\n  title \"If passwords are used for authentication, the Couchbase must transmit\nonly encrypted representations of passwords.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, passwords need to be protected at all times, and encryption\nis the standard method for protecting passwords during transmission.\n\n    Couchbase passwords sent in clear text format across the network are\nvulnerable to discovery by unauthorized users. Disclosure of passwords may\neasily lead to unauthorized access to the database.\n  \"\n  desc  \"check\", \"\n    Couchbase Server 6.0.x and earlier -\n    Review configuration settings for encrypting passwords in transit across\nthe network. If passwords are not encrypted, this is a finding.\n    Couchbase Server Version 6.5.x and later -\n      As the Full Admin, verify that TLS is configured with the approved\nprotocols and cipher suites with the following command:\n       $ couchbase-cli setting-security -c <host>:<port> -u <Full Admin> -p\n<Password> --get\n    Review the output of the command. If \\\"disableUIOverHttp\\\" is not set to\n\\\"true\\\", this is finding. If \\\"tlsMinVersion\\\" is not set to an approved\nversion, this is a finding. If \\\"cipherSuites\\\" is empty or not set to approved\ncipher suites, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Ensure passwords remain encrypted from source to destination by configuring\nTLS.\n    Couchbase Server 6.0.x and earlier -\n      As the Full Admin, disable https access to the console with the following\ncommand:\n    $ couchbase-cli setting-security -c <host>:<port> -u <Full Admin> -p\n<Password> --disable-http-ui 1\n    Configure encryption for transmission of passwords across the network. If\nthe database does not provide encryption for logon events natively, employ\nencryption at the OS or network level.\n    Couchbase Server Version 6.5.x and later -\n      As the Full Admin, configure TLS with the following command:\n       $ couchbase-cli setting-security -c <host>:<port> -u <Full Admin> -p\n<Password> --set --disable-http-ui 1 --tls-min-version <TLS Version>\n--cipher-suites <Cipher Suites>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000172-DB-000075\"\n  tag \"gid\": \"V-32469\"\n  tag \"rid\": \"SV-42806r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000172-DB-000075\"\n  tag \"fix_id\": \"F-36384r2_fix\"\n  tag \"cci\": [\"CCI-000197\"]\n  tag \"nist\": [\"IA-5 (1) (c)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32469.rb"},"waiver_data":{},"results":[]},{"id":"V-32529","title":"In the event of a system failure, Couchbase must preserve any\ninformation necessary to determine cause of failure and any information\nnecessary to return to operations with least disruption to mission processes.","desc":"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Preserving information system state information helps to facilitate system\nrestart and return to the operational mode of the organization with less\ndisruption of mission/business processes.\n\n    Since it is usually not possible to test this capability in a production\nenvironment, systems should either be validated in a testing environment or\nprior to installation. This requirement is usually a function of the design of\nthe IDPS component. Compliance can be verified by acceptance/validation\nprocesses or vendor attestation.","descriptions":[{"label":"default","data":"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Preserving information system state information helps to facilitate system\nrestart and return to the operational mode of the organization with less\ndisruption of mission/business processes.\n\n    Since it is usually not possible to test this capability in a production\nenvironment, systems should either be validated in a testing environment or\nprior to installation. This requirement is usually a function of the design of\nthe IDPS component. Compliance can be verified by acceptance/validation\nprocesses or vendor attestation."},{"label":"check","data":"Check Couchbase settings to determine whether organization-defined system\nstate information is being preserved in the event of a system failure.\n    If organization-defined system state information is not being preserved,\nthis is a finding.\n    As the Full Admin, verify that failover is enabled:\n    $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/auto-failover\n    If auto failover is not enabled, this is a finding"},{"label":"fix","data":"Configure Couchbase settings to preserve any organization-defined system\nstate information in the event of a system failure.\n    Review the documentation for automatic failover to specify the settings for\norganization-defined use:\n    https://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-setting\nautofailover.html\n    Enable auto failover and add additional parameters based on organizational\ndemands:\n    couchbase-cli setting-autofailover -c <host>:<port> --u <Full Admin> --p\n<Password> --enable-auto-failover 1 <parameters>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000226-DB-000147","gid":"V-32529","rid":"SV-42866r3_rule","stig_id":"SRG-APP-000226-DB-000147","fix_id":"F-36444r2_fix","cci":["CCI-001665"],"nist":["SC-24","Rev_4"]},"code":"control \"V-32529\" do\n  title \"In the event of a system failure, Couchbase must preserve any\ninformation necessary to determine cause of failure and any information\nnecessary to return to operations with least disruption to mission processes.\"\n  desc  \"Failure to a known state can address safety or security in accordance\nwith the mission/business needs of the organization.\n\n    Failure to a known secure state helps prevent a loss of confidentiality,\nintegrity, or availability in the event of a failure of the information system\nor a component of the system.\n\n    Preserving information system state information helps to facilitate system\nrestart and return to the operational mode of the organization with less\ndisruption of mission/business processes.\n\n    Since it is usually not possible to test this capability in a production\nenvironment, systems should either be validated in a testing environment or\nprior to installation. This requirement is usually a function of the design of\nthe IDPS component. Compliance can be verified by acceptance/validation\nprocesses or vendor attestation.\n  \"\n  desc  \"check\", \"\n    Check Couchbase settings to determine whether organization-defined system\nstate information is being preserved in the event of a system failure.\n    If organization-defined system state information is not being preserved,\nthis is a finding.\n    As the Full Admin, verify that failover is enabled:\n    $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/auto-failover\n    If auto failover is not enabled, this is a finding\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase settings to preserve any organization-defined system\nstate information in the event of a system failure.\n    Review the documentation for automatic failover to specify the settings for\norganization-defined use:\n    https://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-setting\nautofailover.html\n    Enable auto failover and add additional parameters based on organizational\ndemands:\n    couchbase-cli setting-autofailover -c <host>:<port> --u <Full Admin> --p\n<Password> --enable-auto-failover 1 <parameters> \n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000226-DB-000147\"\n  tag \"gid\": \"V-32529\"\n  tag \"rid\": \"SV-42866r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000226-DB-000147\"\n  tag \"fix_id\": \"F-36444r2_fix\"\n  tag \"cci\": [\"CCI-001665\"]\n  tag \"nist\": [\"SC-24\", \"Rev_4\"]\n  \n  describe json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} \\\n  http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/autoFailover\") do\n    its('enabled') { should eq true }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32529.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"JSON from command: curl -v -X GET -u admin:@dminP@asswd2020   http://localhost:8091/settings/autoFailover enabled is expected to eq true","run_time":8.7e-05,"start_time":"2020-09-28T22:09:07-04:00"}]},{"id":"V-32479","title":"Couchbase must obscure feedback of authentication information during\nthe authentication process to protect the information from possible\nexploitation/use by unauthorized individuals.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Normally, with PKI authentication, the interaction with the user for\nauthentication will be handled by a software component separate from Couchbase,\nsuch as ActivIdentity ActivClient. However, in cases where Couchbase controls\nthe interaction, this requirement applies.\n\n    To prevent the compromise of authentication information such as passwords\nand PINs during the authentication process, the feedback from the system must\nnot provide any information that would allow an unauthorized user to compromise\nthe authentication mechanism.\n\n    Obfuscation of user-provided authentication secrets when typed into the\nsystem is a method used in addressing this risk.\n\n    Displaying asterisks when a user types in a password or a smart card PIN is\nan example of obscuring feedback of authentication secrets.\n\n    This calls for review of applications, which will require collaboration\nwith the application developers. It is recognized that in many cases, the\ndatabase administrator (DBA) is organizationally separate from the application\ndevelopers, and may have limited, if any, access to source code. Nevertheless,\nprotections of this type are so important to the secure operation of databases\nthat they must not be ignored. At a minimum, the DBA must attempt to obtain\nassurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Normally, with PKI authentication, the interaction with the user for\nauthentication will be handled by a software component separate from Couchbase,\nsuch as ActivIdentity ActivClient. However, in cases where Couchbase controls\nthe interaction, this requirement applies.\n\n    To prevent the compromise of authentication information such as passwords\nand PINs during the authentication process, the feedback from the system must\nnot provide any information that would allow an unauthorized user to compromise\nthe authentication mechanism.\n\n    Obfuscation of user-provided authentication secrets when typed into the\nsystem is a method used in addressing this risk.\n\n    Displaying asterisks when a user types in a password or a smart card PIN is\nan example of obscuring feedback of authentication secrets.\n\n    This calls for review of applications, which will require collaboration\nwith the application developers. It is recognized that in many cases, the\ndatabase administrator (DBA) is organizationally separate from the application\ndevelopers, and may have limited, if any, access to source code. Nevertheless,\nprotections of this type are so important to the secure operation of databases\nthat they must not be ignored. At a minimum, the DBA must attempt to obtain\nassurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"If all interaction with the user for purposes of authentication is handled\nby a software component separate from the Couchbase, this is not a finding.\n    As the Full Admin, verify that HTTP access is disabled with the following\ncommand:\n      $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security\n    Review the output of the command. If \"disableUIOverHttp\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Modify and configure each non-compliant application, tool, or feature\nassociated with Couchbase/database so that it does not display authentication\nsecrets.\n    As the Full Admin, disable HTTP access to the console and encrypt passwords\nwith the following command:\n     $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security -d disableUIOverHttp=true"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000178-DB-000083","gid":"V-32479","rid":"SV-42816r4_rule","stig_id":"SRG-APP-000178-DB-000083","fix_id":"F-36393r3_fix","cci":["CCI-000206"],"nist":["IA-6","Rev_4"]},"code":"control \"V-32479\" do\n  title \"Couchbase must obscure feedback of authentication information during\nthe authentication process to protect the information from possible\nexploitation/use by unauthorized individuals.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Normally, with PKI authentication, the interaction with the user for\nauthentication will be handled by a software component separate from Couchbase,\nsuch as ActivIdentity ActivClient. However, in cases where Couchbase controls\nthe interaction, this requirement applies.\n\n    To prevent the compromise of authentication information such as passwords\nand PINs during the authentication process, the feedback from the system must\nnot provide any information that would allow an unauthorized user to compromise\nthe authentication mechanism.\n\n    Obfuscation of user-provided authentication secrets when typed into the\nsystem is a method used in addressing this risk.\n\n    Displaying asterisks when a user types in a password or a smart card PIN is\nan example of obscuring feedback of authentication secrets.\n\n    This calls for review of applications, which will require collaboration\nwith the application developers. It is recognized that in many cases, the\ndatabase administrator (DBA) is organizationally separate from the application\ndevelopers, and may have limited, if any, access to source code. Nevertheless,\nprotections of this type are so important to the secure operation of databases\nthat they must not be ignored. At a minimum, the DBA must attempt to obtain\nassurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    If all interaction with the user for purposes of authentication is handled\nby a software component separate from the Couchbase, this is not a finding.\n    As the Full Admin, verify that HTTP access is disabled with the following\ncommand:\n      $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security\n    Review the output of the command. If \\\"disableUIOverHttp\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Modify and configure each non-compliant application, tool, or feature\nassociated with Couchbase/database so that it does not display authentication\nsecrets.\n    As the Full Admin, disable HTTP access to the console and encrypt passwords\nwith the following command:\n     $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security -d disableUIOverHttp=true\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000178-DB-000083\"\n  tag \"gid\": \"V-32479\"\n  tag \"rid\": \"SV-42816r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000178-DB-000083\"\n  tag \"fix_id\": \"F-36393r3_fix\"\n  tag \"cci\": [\"CCI-000206\"]\n  tag \"nist\": [\"IA-6\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32479.rb"},"waiver_data":{},"results":[]},{"id":"V-32428","title":"Couchbase must be configured to prohibit or restrict the use of\norganization-defined functions, ports, protocols, and/or services, as defined\nin the PPSM CAL and vulnerability assessments.","desc":"In order to prevent unauthorized connection of devices, unauthorized\ntransfer of information, or unauthorized tunneling (i.e., embedding of data\ntypes within data types), organizations must disable or restrict unused or\nunnecessary physical and logical ports/protocols/services on information\nsystems.\n\n    Applications are capable of providing a wide variety of functions and\nservices. Some of the functions and services provided by default may not be\nnecessary to support essential organizational operations. Additionally, it is\nsometimes convenient to provide multiple services from a single component\n(e.g., email and web services); however, doing so increases risk over limiting\nthe services provided by any one component.\n\n    To support the requirements and principles of least functionality, the\napplication must support the organizational requirements providing only\nessential capabilities and limiting the use of ports, protocols, and/or\nservices to only those required, authorized, and approved to conduct official\nbusiness or to address authorized quality of life issues.\n\n    Database Management Systems using ports, protocols, and services deemed\nunsafe are open to attack through those ports, protocols, and services. This\ncan allow unauthorized access to the database and through the database to other\ncomponents of the information system.","descriptions":[{"label":"default","data":"In order to prevent unauthorized connection of devices, unauthorized\ntransfer of information, or unauthorized tunneling (i.e., embedding of data\ntypes within data types), organizations must disable or restrict unused or\nunnecessary physical and logical ports/protocols/services on information\nsystems.\n\n    Applications are capable of providing a wide variety of functions and\nservices. Some of the functions and services provided by default may not be\nnecessary to support essential organizational operations. Additionally, it is\nsometimes convenient to provide multiple services from a single component\n(e.g., email and web services); however, doing so increases risk over limiting\nthe services provided by any one component.\n\n    To support the requirements and principles of least functionality, the\napplication must support the organizational requirements providing only\nessential capabilities and limiting the use of ports, protocols, and/or\nservices to only those required, authorized, and approved to conduct official\nbusiness or to address authorized quality of life issues.\n\n    Database Management Systems using ports, protocols, and services deemed\nunsafe are open to attack through those ports, protocols, and services. This\ncan allow unauthorized access to the database and through the database to other\ncomponents of the information system."},{"label":"check","data":"Review Couchbase settings and local documentation for\nfunctions, ports, protocols, and services that are not approved. If any are\nfound, this is a finding."},{"label":"fix","data":"Disable functions, ports, protocols, and services that are not\napproved."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000142-DB-000094","gid":"V-32428","rid":"SV-42765r3_rule","stig_id":"SRG-APP-000142-DB-000094","fix_id":"F-36342r2_fix","cci":["CCI-000382"],"nist":["CM-7 b","Rev_4"]},"code":"control \"V-32428\" do\n  title \"Couchbase must be configured to prohibit or restrict the use of\norganization-defined functions, ports, protocols, and/or services, as defined\nin the PPSM CAL and vulnerability assessments.\"\n  desc  \"In order to prevent unauthorized connection of devices, unauthorized\ntransfer of information, or unauthorized tunneling (i.e., embedding of data\ntypes within data types), organizations must disable or restrict unused or\nunnecessary physical and logical ports/protocols/services on information\nsystems.\n\n    Applications are capable of providing a wide variety of functions and\nservices. Some of the functions and services provided by default may not be\nnecessary to support essential organizational operations. Additionally, it is\nsometimes convenient to provide multiple services from a single component\n(e.g., email and web services); however, doing so increases risk over limiting\nthe services provided by any one component.\n\n    To support the requirements and principles of least functionality, the\napplication must support the organizational requirements providing only\nessential capabilities and limiting the use of ports, protocols, and/or\nservices to only those required, authorized, and approved to conduct official\nbusiness or to address authorized quality of life issues.\n\n    Database Management Systems using ports, protocols, and services deemed\nunsafe are open to attack through those ports, protocols, and services. This\ncan allow unauthorized access to the database and through the database to other\ncomponents of the information system.\n  \"\n  desc  \"check\", \"Review Couchbase settings and local documentation for\nfunctions, ports, protocols, and services that are not approved. If any are\nfound, this is a finding.\"\n  desc  \"fix\", \"Disable functions, ports, protocols, and services that are not\napproved.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000142-DB-000094\"\n  tag \"gid\": \"V-32428\"\n  tag \"rid\": \"SV-42765r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000142-DB-000094\"\n  tag \"fix_id\": \"F-36342r2_fix\"\n  tag \"cci\": [\"CCI-000382\"]\n  tag \"nist\": [\"CM-7 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32428.rb"},"waiver_data":{},"results":[]},{"id":"V-58059","title":"Couchbase must provide an immediate real-time alert to appropriate\nsupport staff of all audit log failures. ","desc":"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process audit logs as required. Without a real-time\nalert, security personnel may be unaware of an impending failure of the audit\ncapability, and system operation may be adversely affected.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n\n    A failure of database auditing will result in either the database\ncontinuing to function without auditing or in a complete halt to database\noperations. When audit processing fails, appropriate personnel must be alerted\nimmediately to avoid further downtime or unaudited transactions.\n\n    Alerts provide organizations with urgent messages. Real-time alerts provide\nthese messages immediately (i.e., the time from event detection to alert occurs\nin seconds or less).","descriptions":[{"label":"default","data":"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process audit logs as required. Without a real-time\nalert, security personnel may be unaware of an impending failure of the audit\ncapability, and system operation may be adversely affected.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n\n    A failure of database auditing will result in either the database\ncontinuing to function without auditing or in a complete halt to database\noperations. When audit processing fails, appropriate personnel must be alerted\nimmediately to avoid further downtime or unaudited transactions.\n\n    Alerts provide organizations with urgent messages. Real-time alerts provide\nthese messages immediately (i.e., the time from event detection to alert occurs\nin seconds or less)."},{"label":"check","data":"As the Full Admin, log into the cluster to and use the following documentation to \nreview email alert settings or use the corresponding curl request:\n\nhttps://docs.couchbase.com/server/6.6/manage/manage-settings/configure-alerts.html\ncurl -u <Admin>:<Admin Password> http://<localhost>:8091/settings/alerts\n\n  \nVerify that email alerts are being sent to the correct recipients and that the \nfollowing options have been enabled: \n  - \"enabled\" set to true\n  - \"audit_dropped_events\"\n  - \"disk\" \n\n\nIf the email alerts are not enabled, this is a finding. If the email alerts are \nenabled, but do not have the \"audit_dropped_events\" and \"disk\" \noptions set, this is a finding."},{"label":"fix","data":"Execute the following command to enable alert to support staff for audit\nlog failures:\n      $ couchbase-cli setting-alert --cluster <host>:<port> --u <Full Admin>\n--password <Password> --enable-email-alert 1 --email-user <user>\n--email-password <password> --email-host <email> --email-port <port>\n--email-recipients <recipients>  --email-sender noreply@couchbase.com\n--alert-audit-msg-dropped --alert-disk-space"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000360-DB-000320","gid":"V-58059","rid":"SV-72489r2_rule","stig_id":"SRG-APP-000360-DB-000320","fix_id":"F-63267r2_fix","cci":["CCI-001858"],"nist":["AU-5 (2)","Rev_4"]},"code":"control \"V-58059\" do\n  title \"Couchbase must provide an immediate real-time alert to appropriate\nsupport staff of all audit log failures. \"\n  desc  \"It is critical for the appropriate personnel to be aware if a system\nis at risk of failing to process audit logs as required. Without a real-time\nalert, security personnel may be unaware of an impending failure of the audit\ncapability, and system operation may be adversely affected.\n\n    The appropriate support staff include, at a minimum, the ISSO and the\nDBA/SA.\n\n    A failure of database auditing will result in either the database\ncontinuing to function without auditing or in a complete halt to database\noperations. When audit processing fails, appropriate personnel must be alerted\nimmediately to avoid further downtime or unaudited transactions.\n\n    Alerts provide organizations with urgent messages. Real-time alerts provide\nthese messages immediately (i.e., the time from event detection to alert occurs\nin seconds or less).\n  \"\n  desc  \"check\", \"\nAs the Full Admin, log into the cluster to and use the following documentation to \nreview email alert settings or use the corresponding curl request:\n\nhttps://docs.couchbase.com/server/6.6/manage/manage-settings/configure-alerts.html\ncurl -u <Admin>:<Admin Password> http://<localhost>:8091/settings/alerts\n\n  \nVerify that email alerts are being sent to the correct recipients and that the \nfollowing options have been enabled: \n  - \\\"enabled\\\" set to true\n  - \\\"audit_dropped_events\\\"\n  - \\\"disk\\\" \n\n\nIf the email alerts are not enabled, this is a finding. If the email alerts are \nenabled, but do not have the \\\"audit_dropped_events\\\" and \\\"disk\\\" \noptions set, this is a finding.\n \n  \"\n  desc  \"fix\", \"\n    Execute the following command to enable alert to support staff for audit\nlog failures:\n      $ couchbase-cli setting-alert --cluster <host>:<port> --u <Full Admin>\n--password <Password> --enable-email-alert 1 --email-user <user>\n--email-password <password> --email-host <email> --email-port <port>\n--email-recipients <recipients>  --email-sender noreply@couchbase.com\n--alert-audit-msg-dropped --alert-disk-space\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000360-DB-000320\"\n  tag \"gid\": \"V-58059\"\n  tag \"rid\": \"SV-72489r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000360-DB-000320\"\n  tag \"fix_id\": \"F-63267r2_fix\"\n  tag \"cci\": [\"CCI-001858\"]\n  tag \"nist\": [\"AU-5 (2)\", \"Rev_4\"]\n\n  describe command(\"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/alerts\") do\n    its('stdout') { should match \"audit_dropped_events\" }\n    its('stdout') { should match \"disk\" }\n    its('stdout') { should match '\"enabled\":true'}\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58059.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"Command: `curl -v -X GET -u admin:@dminP@asswd2020 http://localhost:8091/settings/alerts` stdout is expected to match \"audit_dropped_events\"","run_time":0.034162,"start_time":"2020-09-28T22:09:07-04:00"},{"status":"passed","code_desc":"Command: `curl -v -X GET -u admin:@dminP@asswd2020 http://localhost:8091/settings/alerts` stdout is expected to match \"disk\"","run_time":8.7e-05,"start_time":"2020-09-28T22:09:07-04:00"},{"status":"failed","code_desc":"Command: `curl -v -X GET -u admin:@dminP@asswd2020 http://localhost:8091/settings/alerts` stdout is expected to match \"\\\"enabled\\\":true\"","run_time":0.000166,"start_time":"2020-09-28T22:09:07-04:00","message":"expected \"{\\\"recipients\\\":[\\\"root@localhost\\\"],\\\"sender\\\":\\\"couchbase@localhost\\\",\\\"enabled\\\":false,\\\"emailSer...nts\\\",\\\"indexer_ram_max_usage\\\",\\\"ep_clock_cas_drift_threshold_exceeded\\\",\\\"communication_issue\\\"]}\" to match \"\\\"enabled\\\":true\""}]},{"id":"V-58119","title":"Couchbase must be able to generate audit records when successful\naccesses to objects occur.","desc":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident, or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE","descriptions":[{"label":"default","data":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident, or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE"},{"label":"check","data":"Review Couchbase documentation to verify that administrative users can\nspecify database objects for which access must be audited and can specify which\nkinds of access must be audited.\n    If Couchbase is not capable of this, this is a finding.\n    Review system documentation to determine whether the application owner has\nspecified database objects (tables, views, procedures, functions, etc.) for\nwhich access must be audited. Review Couchbase/database security and audit\nsettings to verify that the specified access to the specified objects is\naudited.\n    If not, this is a finding."},{"label":"fix","data":"Ensure Couchbase is capable of producing the required audit records when\nobject access occurs.\n    Configure audit settings to create audit records when the specified access\nto the specified objects occurs."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000507-DB-000356","gid":"V-58119","rid":"SV-72549r1_rule","stig_id":"SRG-APP-000507-DB-000356","fix_id":"F-63327r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58119\" do\n  title \"Couchbase must be able to generate audit records when successful\naccesses to objects occur.\"\n  desc  \"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident, or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n  \"\n  desc  \"check\", \"\n    Review Couchbase documentation to verify that administrative users can\nspecify database objects for which access must be audited and can specify which\nkinds of access must be audited.\n    If Couchbase is not capable of this, this is a finding.\n    Review system documentation to determine whether the application owner has\nspecified database objects (tables, views, procedures, functions, etc.) for\nwhich access must be audited. Review Couchbase/database security and audit\nsettings to verify that the specified access to the specified objects is\naudited.\n    If not, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Ensure Couchbase is capable of producing the required audit records when\nobject access occurs.\n    Configure audit settings to create audit records when the specified access\nto the specified objects occurs.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000507-DB-000356\"\n  tag \"gid\": \"V-58119\"\n  tag \"rid\": \"SV-72549r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000507-DB-000356\"\n  tag \"fix_id\": \"F-63327r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58119.rb"},"waiver_data":{},"results":[]},{"id":"V-32395","title":"The audit information produced by Couchbase must be protected from\nunauthorized deletion.","desc":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from unauthorized deletion. This\nrequirement can be achieved through multiple methods which will depend upon\nsystem architecture and design.\n\n    Some commonly employed methods include: ensuring log files enjoy the proper\nfile system permissions utilizing file system protections; restricting access;\nand backing up log data to ensure log data is retained.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Deletion of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.","descriptions":[{"label":"default","data":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from unauthorized deletion. This\nrequirement can be achieved through multiple methods which will depend upon\nsystem architecture and design.\n\n    Some commonly employed methods include: ensuring log files enjoy the proper\nfile system permissions utilizing file system protections; restricting access;\nand backing up log data to ensure log data is retained.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Deletion of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database."},{"label":"check","data":"Review locations of audit logs, both internal to the database and database\naudit logs located at the operating system level.\n    Review the ownership and permissions of the audit logs:\n    $ ls –ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \"couchbase\" user and group, this is\na finding. If the file permission are not 660, this is a finding."},{"label":"fix","data":"Apply controls and modify permissions to protect database audit log data\nfrom unauthorized deletion, whether stored in the database itself or at the OS\nlevel.\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n    $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 660 /opt/couchbase/var/lib/couchbase/*.logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000120-DB-000061","gid":"V-32395","rid":"SV-42732r3_rule","stig_id":"SRG-APP-000120-DB-000061","fix_id":"F-36310r2_fix","cci":["CCI-000164"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32395\" do\n  title \"The audit information produced by Couchbase must be protected from\nunauthorized deletion.\"\n  desc  \"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from unauthorized deletion. This\nrequirement can be achieved through multiple methods which will depend upon\nsystem architecture and design.\n\n    Some commonly employed methods include: ensuring log files enjoy the proper\nfile system permissions utilizing file system protections; restricting access;\nand backing up log data to ensure log data is retained.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Deletion of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.\n  \"\n  desc  \"check\", \"\n    Review locations of audit logs, both internal to the database and database\naudit logs located at the operating system level.\n    Review the ownership and permissions of the audit logs:\n    $ ls \\xE2\\x80\\x93ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \\\"couchbase\\\" user and group, this is\na finding. If the file permission are not 660, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Apply controls and modify permissions to protect database audit log data\nfrom unauthorized deletion, whether stored in the database itself or at the OS\nlevel.\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n    $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 660 /opt/couchbase/var/lib/couchbase/*.logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000120-DB-000061\"\n  tag \"gid\": \"V-32395\"\n  tag \"rid\": \"SV-42732r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000120-DB-000061\"\n  tag \"fix_id\": \"F-36310r2_fix\"\n  tag \"cci\": [\"CCI-000164\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32395.rb"},"waiver_data":{},"results":[]},{"id":"V-32203","title":"Couchbase must enforce approved authorizations for logical access to\ninformation and system resources in accordance with applicable access control\npolicies.","desc":"Authentication with a DoD-approved PKI certificate does not\nnecessarily imply authorization to access Couchbase.  To mitigate the risk of\nunauthorized access to sensitive information by entities that have been issued\ncertificates by DoD-approved PKIs, all DoD systems, including databases, must\nbe properly configured to implement access control policies.\n\n    Successful authentication must not automatically give an entity access to\nan asset or security boundary. Authorization procedures and controls must be\nimplemented to ensure each authenticated entity also has a validated and\ncurrent authorization. Authorization is the process of determining whether an\nentity, once authenticated, is permitted to access a specific asset.\nInformation systems use access control policies and enforcement mechanisms to\nimplement this requirement.\n\n    Access control policies include identity-based policies, role-based\npolicies, and attribute-based policies. Access enforcement mechanisms include\naccess control lists, access control matrices, and cryptography. These policies\nand mechanisms must be employed by the application to control access between\nusers (or processes acting on behalf of users) and objects (e.g., devices,\nfiles, records, processes, programs, and domains) in the information system.\n\n    This requirement is applicable to access control enforcement applications,\na category that includes database management systems.  If Couchbase does not\nfollow applicable policy when approving access, it may be in conflict with\nnetworks or other applications in the information system. This may result in\nusers either gaining or being denied access inappropriately and in conflict\nwith applicable policy.","descriptions":[{"label":"default","data":"Authentication with a DoD-approved PKI certificate does not\nnecessarily imply authorization to access Couchbase.  To mitigate the risk of\nunauthorized access to sensitive information by entities that have been issued\ncertificates by DoD-approved PKIs, all DoD systems, including databases, must\nbe properly configured to implement access control policies.\n\n    Successful authentication must not automatically give an entity access to\nan asset or security boundary. Authorization procedures and controls must be\nimplemented to ensure each authenticated entity also has a validated and\ncurrent authorization. Authorization is the process of determining whether an\nentity, once authenticated, is permitted to access a specific asset.\nInformation systems use access control policies and enforcement mechanisms to\nimplement this requirement.\n\n    Access control policies include identity-based policies, role-based\npolicies, and attribute-based policies. Access enforcement mechanisms include\naccess control lists, access control matrices, and cryptography. These policies\nand mechanisms must be employed by the application to control access between\nusers (or processes acting on behalf of users) and objects (e.g., devices,\nfiles, records, processes, programs, and domains) in the information system.\n\n    This requirement is applicable to access control enforcement applications,\na category that includes database management systems.  If Couchbase does not\nfollow applicable policy when approving access, it may be in conflict with\nnetworks or other applications in the information system. This may result in\nusers either gaining or being denied access inappropriately and in conflict\nwith applicable policy."},{"label":"check","data":"From the system security plan or equivalent documentation, determine the\nappropriate permissions on database objects for each kind (role) of user. If\nthis documentation is missing, this is a finding.\n    Check Couchbase settings to determine whether users are restricted from\naccessing objects and data they are not authorized to access.\n    As the Full Admin, list all RBAC users in each cluster with the following\ncommand:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --list\n    Verify the roles for each user account. If any user account is assigned a\nrole the exceed those documented, this is a finding."},{"label":"fix","data":"Configure Couchbase settings and access controls to permit user access only\nto objects and data that the user is authorized to view or interact with, and\nto prevent access to all other objects and data.\n    To update roles assigned to users, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --roles <roles_list>\n--auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000033-DB-000084","gid":"V-32203","rid":"SV-42520r3_rule","stig_id":"SRG-APP-000033-DB-000084","fix_id":"F-36127r3_fix","cci":["CCI-000213"],"nist":["AC-3","Rev_4"]},"code":"control \"V-32203\" do\n  title \"Couchbase must enforce approved authorizations for logical access to\ninformation and system resources in accordance with applicable access control\npolicies.\"\n  desc  \"Authentication with a DoD-approved PKI certificate does not\nnecessarily imply authorization to access Couchbase.  To mitigate the risk of\nunauthorized access to sensitive information by entities that have been issued\ncertificates by DoD-approved PKIs, all DoD systems, including databases, must\nbe properly configured to implement access control policies.\n\n    Successful authentication must not automatically give an entity access to\nan asset or security boundary. Authorization procedures and controls must be\nimplemented to ensure each authenticated entity also has a validated and\ncurrent authorization. Authorization is the process of determining whether an\nentity, once authenticated, is permitted to access a specific asset.\nInformation systems use access control policies and enforcement mechanisms to\nimplement this requirement.\n\n    Access control policies include identity-based policies, role-based\npolicies, and attribute-based policies. Access enforcement mechanisms include\naccess control lists, access control matrices, and cryptography. These policies\nand mechanisms must be employed by the application to control access between\nusers (or processes acting on behalf of users) and objects (e.g., devices,\nfiles, records, processes, programs, and domains) in the information system.\n\n    This requirement is applicable to access control enforcement applications,\na category that includes database management systems.  If Couchbase does not\nfollow applicable policy when approving access, it may be in conflict with\nnetworks or other applications in the information system. This may result in\nusers either gaining or being denied access inappropriately and in conflict\nwith applicable policy.\n  \"\n  desc  \"check\", \"\n    From the system security plan or equivalent documentation, determine the\nappropriate permissions on database objects for each kind (role) of user. If\nthis documentation is missing, this is a finding.\n    Check Couchbase settings to determine whether users are restricted from\naccessing objects and data they are not authorized to access.\n    As the Full Admin, list all RBAC users in each cluster with the following\ncommand:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --list\n    Verify the roles for each user account. If any user account is assigned a\nrole the exceed those documented, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase settings and access controls to permit user access only\nto objects and data that the user is authorized to view or interact with, and\nto prevent access to all other objects and data.\n    To update roles assigned to users, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --roles <roles_list>\n--auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000033-DB-000084\"\n  tag \"gid\": \"V-32203\"\n  tag \"rid\": \"SV-42520r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000033-DB-000084\"\n  tag \"fix_id\": \"F-36127r3_fix\"\n  tag \"cci\": [\"CCI-000213\"]\n  tag \"nist\": [\"AC-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32203.rb"},"waiver_data":{},"results":[]},{"id":"V-32192","title":"Couchbase must integrate with an organization-level\nauthentication/access mechanism providing account management and automation for\nall users, groups, roles, and any other principals.","desc":"Enterprise environments make account management for applications and\ndatabases challenging and complex. A manual process for account management\nfunctions adds the risk of a potential oversight or other error. Managing\naccounts for the same person in multiple places is inefficient and prone to\nproblems with consistency and synchronization.\n\n    A comprehensive application account management process that includes\nautomation helps to ensure that accounts designated as requiring attention are\nconsistently and promptly addressed.\n\n    Examples include, but are not limited to, using automation to take action\non multiple accounts designated as inactive, suspended, or terminated, or by\ndisabling accounts located in non-centralized account stores, such as multiple\nservers. Account management functions can also include: assignment of group or\nrole membership; identifying account type; specifying user access\nauthorizations (i.e., privileges); account removal, update, or termination; and\nadministrative alerts. The use of automated mechanisms can include, for\nexample: using email or text messaging to notify account managers when users\nare terminated or transferred; using the information system to monitor account\nusage; and using automated telephone notification to report atypical system\naccount usage.\n\n    Couchbase must be configured to automatically utilize organization-level\naccount management functions, and these functions must immediately enforce the\norganization's current account policy.\n\n    Automation may be comprised of differing technologies that when placed\ntogether contain an overall mechanism supporting an organization's automated\naccount management requirements.","descriptions":[{"label":"default","data":"Enterprise environments make account management for applications and\ndatabases challenging and complex. A manual process for account management\nfunctions adds the risk of a potential oversight or other error. Managing\naccounts for the same person in multiple places is inefficient and prone to\nproblems with consistency and synchronization.\n\n    A comprehensive application account management process that includes\nautomation helps to ensure that accounts designated as requiring attention are\nconsistently and promptly addressed.\n\n    Examples include, but are not limited to, using automation to take action\non multiple accounts designated as inactive, suspended, or terminated, or by\ndisabling accounts located in non-centralized account stores, such as multiple\nservers. Account management functions can also include: assignment of group or\nrole membership; identifying account type; specifying user access\nauthorizations (i.e., privileges); account removal, update, or termination; and\nadministrative alerts. The use of automated mechanisms can include, for\nexample: using email or text messaging to notify account managers when users\nare terminated or transferred; using the information system to monitor account\nusage; and using automated telephone notification to report atypical system\naccount usage.\n\n    Couchbase must be configured to automatically utilize organization-level\naccount management functions, and these functions must immediately enforce the\norganization's current account policy.\n\n    Automation may be comprised of differing technologies that when placed\ntogether contain an overall mechanism supporting an organization's automated\naccount management requirements."},{"label":"check","data":"If all accounts are authenticated by the organization-level\nauthentication/access mechanism and not by Couchbase, this is not a finding.\n    If there are any accounts managed by Couchbase, review the system\ndocumentation for justification and approval of these accounts.\n    As the Full Admin, list all RBAC users in each cluster with the following\ncommand:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --list\n    If any Couchbase-managed accounts exist that are not documented and\napproved, this is a finding."},{"label":"fix","data":"Integrate Couchbase security with an organization-level\nauthentication/access mechanism providing account management for all users,\ngroups, roles, and any other principals.\n    For each Couchbase-managed account that is not documented and approved,\neither transfer it to management by the external mechanism, or document the\nneed for it and obtain approval, as appropriate.\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000023-DB-000001","gid":"V-32192","rid":"SV-42509r3_rule","stig_id":"SRG-APP-000023-DB-000001","fix_id":"F-36116r2_fix","cci":["CCI-000015"],"nist":["AC-2 (1)","Rev_4"]},"code":"control \"V-32192\" do\n  title \"Couchbase must integrate with an organization-level\nauthentication/access mechanism providing account management and automation for\nall users, groups, roles, and any other principals.\"\n  desc  \"Enterprise environments make account management for applications and\ndatabases challenging and complex. A manual process for account management\nfunctions adds the risk of a potential oversight or other error. Managing\naccounts for the same person in multiple places is inefficient and prone to\nproblems with consistency and synchronization.\n\n    A comprehensive application account management process that includes\nautomation helps to ensure that accounts designated as requiring attention are\nconsistently and promptly addressed.\n\n    Examples include, but are not limited to, using automation to take action\non multiple accounts designated as inactive, suspended, or terminated, or by\ndisabling accounts located in non-centralized account stores, such as multiple\nservers. Account management functions can also include: assignment of group or\nrole membership; identifying account type; specifying user access\nauthorizations (i.e., privileges); account removal, update, or termination; and\nadministrative alerts. The use of automated mechanisms can include, for\nexample: using email or text messaging to notify account managers when users\nare terminated or transferred; using the information system to monitor account\nusage; and using automated telephone notification to report atypical system\naccount usage.\n\n    Couchbase must be configured to automatically utilize organization-level\naccount management functions, and these functions must immediately enforce the\norganization's current account policy.\n\n    Automation may be comprised of differing technologies that when placed\ntogether contain an overall mechanism supporting an organization's automated\naccount management requirements.\n  \"\n  desc  \"check\", \"\n    If all accounts are authenticated by the organization-level\nauthentication/access mechanism and not by Couchbase, this is not a finding.\n    If there are any accounts managed by Couchbase, review the system\ndocumentation for justification and approval of these accounts.\n    As the Full Admin, list all RBAC users in each cluster with the following\ncommand:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --list\n    If any Couchbase-managed accounts exist that are not documented and\napproved, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Integrate Couchbase security with an organization-level\nauthentication/access mechanism providing account management for all users,\ngroups, roles, and any other principals.\n    For each Couchbase-managed account that is not documented and approved,\neither transfer it to management by the external mechanism, or document the\nneed for it and obtain approval, as appropriate.\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000023-DB-000001\"\n  tag \"gid\": \"V-32192\"\n  tag \"rid\": \"SV-42509r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000023-DB-000001\"\n  tag \"fix_id\": \"F-36116r2_fix\"\n  tag \"cci\": [\"CCI-000015\"]\n  tag \"nist\": [\"AC-2 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32192.rb"},"waiver_data":{},"results":[]},{"id":"V-58159","title":"Couchbase must implement NIST FIPS 140-2 validated cryptographic\nmodules to provision digital signatures.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant."},{"label":"check","data":"As the system administrator, run the following:\n$ openssl version\nIf \"fips\" is not included in the openssl version, this is a finding.\nRun the following command to check if the OS has FIPS enabled:\n$ cat /proc/sys/crypto/fips_enabled\nIf fips_enabled is not 1, this is a finding."},{"label":"fix","data":"Configure OpenSSL to meet FIPS Compliance.\n    To configure OpenSSL to be FIPS 140-2 compliant, see the official RHEL\nDocumentation:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000514-DB-000381","gid":"V-58159","rid":"SV-72589r1_rule","stig_id":"SRG-APP-000514-DB-000381","fix_id":"F-63367r2_fix","cci":["CCI-002450"],"nist":["SC-13","Rev_4"]},"code":"control \"V-58159\" do\n  title \"Couchbase must implement NIST FIPS 140-2 validated cryptographic\nmodules to provision digital signatures.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.\n  \"\n  desc  \"check\", \"\n    As the system administrator, run the following:\n    $ openssl version\n    If \\\"fips\\\" is not included in the openssl version, this is a finding.\n    Run the following command to check if the OS has FIPS enabled:\n    $ cat /proc/sys/crypto/fips_enabled\n    If fips_enabled is not 1, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to meet FIPS Compliance.\n    To configure OpenSSL to be FIPS 140-2 compliant, see the official RHEL\nDocumentation:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000514-DB-000381\"\n  tag \"gid\": \"V-58159\"\n  tag \"rid\": \"SV-72589r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000514-DB-000381\"\n  tag \"fix_id\": \"F-63367r2_fix\"\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58159.rb"},"waiver_data":{},"results":[]},{"id":"V-58019","title":"Couchbase must enforce discretionary access control policies, as\n  defined by the data owner, over defined subjects and objects.","desc":"Discretionary Access Control (DAC) is based on the notion that\n  individual users are \"owners\" of objects and therefore have discretion over\n  who should be authorized to access the object and in which mode (e.g., read or\n  write). Ownership is usually acquired as a consequence of creating the object\n  or via specified ownership assignment. DAC allows the owner to determine who\n  will have access to objects they control. An example of DAC includes\n  user-controlled table permissions.\n\n  When discretionary access control policies are implemented, subjects are\n  not constrained with regard to what actions they can take with information for\n  which they have already been granted access. Thus, subjects that have been\n  granted access to information are not prevented from passing (i.e., the\n  subjects have the discretion to pass) the information to other subjects or\n  objects.\n\n  A subject that is constrained in its operation by Mandatory Access Control\n  policies is still able to operate under the less rigorous constraints of this\n  requirement. Thus, while Mandatory Access Control imposes constraints\n  preventing a subject from passing information to another subject operating at a\n  different sensitivity level, this requirement permits the subject to pass the\n  information to any subject at the same sensitivity level.\n\n  The policy is bounded by the information system boundary. Once the\n  information is passed outside of the control of the information system,\n  additional means may be required to ensure the constraints remain in effect.\n  While the older, more traditional definitions of discretionary access control\n  require identity-based access control, that limitation is not required for this\n  use of discretionary access control.","descriptions":[{"label":"default","data":"Discretionary Access Control (DAC) is based on the notion that\n  individual users are \"owners\" of objects and therefore have discretion over\n  who should be authorized to access the object and in which mode (e.g., read or\n  write). Ownership is usually acquired as a consequence of creating the object\n  or via specified ownership assignment. DAC allows the owner to determine who\n  will have access to objects they control. An example of DAC includes\n  user-controlled table permissions.\n\n  When discretionary access control policies are implemented, subjects are\n  not constrained with regard to what actions they can take with information for\n  which they have already been granted access. Thus, subjects that have been\n  granted access to information are not prevented from passing (i.e., the\n  subjects have the discretion to pass) the information to other subjects or\n  objects.\n\n  A subject that is constrained in its operation by Mandatory Access Control\n  policies is still able to operate under the less rigorous constraints of this\n  requirement. Thus, while Mandatory Access Control imposes constraints\n  preventing a subject from passing information to another subject operating at a\n  different sensitivity level, this requirement permits the subject to pass the\n  information to any subject at the same sensitivity level.\n\n  The policy is bounded by the information system boundary. Once the\n  information is passed outside of the control of the information system,\n  additional means may be required to ensure the constraints remain in effect.\n  While the older, more traditional definitions of discretionary access control\n  require identity-based access control, that limitation is not required for this\n  use of discretionary access control."},{"label":"check","data":"Review system documentation to identify the required discretionary access\ncontrol (DAC).\n    \nReview the security configuration of the database and Couchbase. If\napplicable, review the security configuration of the application(s) using the\ndatabase.\nIf the discretionary access control defined in the documentation is not\nimplemented in the security configuration, this is a finding.\n    \nReview Couchbase functionality considered privileged in the context of the\nsystem in question.\n$ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\nIf any functionality considered privileged has access privileges granted to\nnon-privileged users, this is a finding."},{"label":"fix","data":"Implement the organization's DAC policy in the security\n  configuration of the database and Couchbase, and, if applicable, the security\n  configuration of the application(s) using the database."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000328-DB-000301","gid":"V-58019","rid":"SV-72449r1_rule","stig_id":"SRG-APP-000328-DB-000301","fix_id":"F-63227r1_fix","cci":["CCI-002165"],"nist":["AC-3 (4)","Rev_4"]},"code":"control \"V-58019\" do\n  title \"Couchbase must enforce discretionary access control policies, as\n  defined by the data owner, over defined subjects and objects.\"\n  desc  \"Discretionary Access Control (DAC) is based on the notion that\n  individual users are \\\"owners\\\" of objects and therefore have discretion over\n  who should be authorized to access the object and in which mode (e.g., read or\n  write). Ownership is usually acquired as a consequence of creating the object\n  or via specified ownership assignment. DAC allows the owner to determine who\n  will have access to objects they control. An example of DAC includes\n  user-controlled table permissions.\n\n  When discretionary access control policies are implemented, subjects are\n  not constrained with regard to what actions they can take with information for\n  which they have already been granted access. Thus, subjects that have been\n  granted access to information are not prevented from passing (i.e., the\n  subjects have the discretion to pass) the information to other subjects or\n  objects.\n\n  A subject that is constrained in its operation by Mandatory Access Control\n  policies is still able to operate under the less rigorous constraints of this\n  requirement. Thus, while Mandatory Access Control imposes constraints\n  preventing a subject from passing information to another subject operating at a\n  different sensitivity level, this requirement permits the subject to pass the\n  information to any subject at the same sensitivity level.\n\n  The policy is bounded by the information system boundary. Once the\n  information is passed outside of the control of the information system,\n  additional means may be required to ensure the constraints remain in effect.\n  While the older, more traditional definitions of discretionary access control\n  require identity-based access control, that limitation is not required for this\n  use of discretionary access control.\n  \"\n  desc  \"check\", \"\n  Review system documentation to identify the required discretionary access\n  control (DAC).\n      \n  Review the security configuration of the database and Couchbase. If\n  applicable, review the security configuration of the application(s) using the\n  database.\n  If the discretionary access control defined in the documentation is not\n  implemented in the security configuration, this is a finding.\n      \n  Review Couchbase functionality considered privileged in the context of the\n  system in question.\n  $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n  --list\n  If any functionality considered privileged has access privileges granted to\n  non-privileged users, this is a finding.\n  \"\n  desc  \"fix\", \"Implement the organization's DAC policy in the security\n  configuration of the database and Couchbase, and, if applicable, the security\n  configuration of the application(s) using the database.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000328-DB-000301\"\n  tag \"gid\": \"V-58019\"\n  tag \"rid\": \"SV-72449r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000328-DB-000301\"\n  tag \"fix_id\": \"F-63227r1_fix\"\n  tag \"cci\": [\"CCI-002165\"]\n  tag \"nist\": [\"AC-3 (4)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58019.rb"},"waiver_data":{},"results":[]},{"id":"V-32468","title":"If passwords are used for authentication, Couchbase must store only\nhashed, salted representations of passwords.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, database passwords stored in clear text, using reversible\nencryption, or using unsalted hashes would be vulnerable to unauthorized\ndisclosure. Database passwords must always be in the form of one-way, salted\nhashes when stored internally or externally to Couchbase.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, database passwords stored in clear text, using reversible\nencryption, or using unsalted hashes would be vulnerable to unauthorized\ndisclosure. Database passwords must always be in the form of one-way, salted\nhashes when stored internally or externally to Couchbase."},{"label":"check","data":"If password authentication is used, SCRAM-SHA1, SCRAM-SHA256, and\nSCRAM-SHA512,  authentication protocols are available with saslauthd enabled.\nThese protocols use one-way, salted hash functions for passwords as documented\nhere:\nhttps://docs.couchbase.com/server/current/learn/security/authentication-overview.html\n    As Full Admin, execute the following command to check if saslauthd is\nenabled:\n      $ curl -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/saslauthdAuth\n    If saslauthd it is not enabled, this is a finding."},{"label":"fix","data":"As the Full Admin, enable saslauthd with the following command:\n      $ couchbase-cli setting-saslauthd -c <host>:<port> --username <Full\nAdmin> \\\n     --password <Password> --enabled 1"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000171-DB-000074","gid":"V-32468","rid":"SV-42805r3_rule","stig_id":"SRG-APP-000171-DB-000074","fix_id":"F-36383r4_fix","cci":["CCI-000196"],"nist":["IA-5 (1) (c)","Rev_4"]},"code":"control \"V-32468\" do\n  title \"If passwords are used for authentication, Couchbase must store only\nhashed, salted representations of passwords.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    Authentication based on User ID and Password may be used only when it is\nnot possible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, database passwords stored in clear text, using reversible\nencryption, or using unsalted hashes would be vulnerable to unauthorized\ndisclosure. Database passwords must always be in the form of one-way, salted\nhashes when stored internally or externally to Couchbase.\n  \"\n  desc  \"check\", \"\n    If password authentication is used, SCRAM-SHA1, SCRAM-SHA256, and\nSCRAM-SHA512,  authentication protocols are available with saslauthd enabled.\nThese protocols use one-way, salted hash functions for passwords as documented\nhere:\nhttps://docs.couchbase.com/server/current/learn/security/authentication-overview.html\n    As Full Admin, execute the following command to check if saslauthd is\nenabled:\n      $ curl -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/saslauthdAuth\n    If saslauthd it is not enabled, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    As the Full Admin, enable saslauthd with the following command:\n      $ couchbase-cli setting-saslauthd -c <host>:<port> --username <Full\nAdmin> \\\\\n     --password <Password> --enabled 1\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000171-DB-000074\"\n  tag \"gid\": \"V-32468\"\n  tag \"rid\": \"SV-42805r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000171-DB-000074\"\n  tag \"fix_id\": \"F-36383r4_fix\"\n  tag \"cci\": [\"CCI-000196\"]\n  tag \"nist\": [\"IA-5 (1) (c)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32468.rb"},"waiver_data":{},"results":[]},{"id":"V-32528","title":"Couchbase must fail to a secure state if system initialization fails,\n  shutdown fails, or aborts fail.","desc":"Failure to a known state can address safety or security in accordance\n  with the mission/business needs of the organization.\n\n  Failure to a known secure state helps prevent a loss of confidentiality,\n  integrity, or availability in the event of a failure of the information system\n  or a component of the system.\n\n  Failure to a known safe state helps prevent systems from failing to a state\n  that may cause loss of data or unauthorized access to system resources. Systems\n  that fail suddenly and with no incorporated failure state planning may leave\n  the hosting system available but with a reduced security protection capability.\n  Preserving information system state data also facilitates system restart and\n  return to the operational mode of the organization with less disruption of\n  mission/business processes.\n\n  Databases must fail to a known consistent state. Transactions must be\n  successfully completed or rolled back.\n\n  In general, security mechanisms should be designed so that a failure will\n  follow the same execution path as disallowing the operation. For example,\n  application security methods, such as isAuthorized(), isAuthenticated(), and\n  validate(), should all return false if there is an exception during processing.\n  If security controls can throw exceptions, they must be very clear about\n  exactly what that condition means.\n\n  Abort refers to stopping a program or function before it has finished\n  naturally. The term abort refers to both requested and unexpected terminations.","descriptions":[{"label":"default","data":"Failure to a known state can address safety or security in accordance\n  with the mission/business needs of the organization.\n\n  Failure to a known secure state helps prevent a loss of confidentiality,\n  integrity, or availability in the event of a failure of the information system\n  or a component of the system.\n\n  Failure to a known safe state helps prevent systems from failing to a state\n  that may cause loss of data or unauthorized access to system resources. Systems\n  that fail suddenly and with no incorporated failure state planning may leave\n  the hosting system available but with a reduced security protection capability.\n  Preserving information system state data also facilitates system restart and\n  return to the operational mode of the organization with less disruption of\n  mission/business processes.\n\n  Databases must fail to a known consistent state. Transactions must be\n  successfully completed or rolled back.\n\n  In general, security mechanisms should be designed so that a failure will\n  follow the same execution path as disallowing the operation. For example,\n  application security methods, such as isAuthorized(), isAuthenticated(), and\n  validate(), should all return false if there is an exception during processing.\n  If security controls can throw exceptions, they must be very clear about\n  exactly what that condition means.\n\n  Abort refers to stopping a program or function before it has finished\n  naturally. The term abort refers to both requested and unexpected terminations."},{"label":"check","data":"Couchbase is capable of replicating data across different clusters, by\nmeans of the Database Change Protocol (DCP).\n\nAs the Full Admin, execute the following command to list the current XDCR\nreplication:\n$ couchbase-cli xdcr-replicate -c <host>:<port> -u <Full Admin> -p\n<Password> --list\n\nIf the list is empty, XDCR replication is not being utilized by the\ncluster, therefore this is a finding."},{"label":"fix","data":"As the Full Admin, setup XDCR for Couchbase with the following command:\n$ couchbase-cli xdcr-setup -c <host>:<port>-u <Full Admin> -p <Password>\n--create \\\n--xdcr-cluster-name <remote-cluster>--xdcr-hostname <host>:<port>\n--xdcr-username \\\n<Full Admin> --xdcr-password <Password>\n$ couchbase-cli xdcr-replicate -c <host>:<port>-u <Full Admin> \\\n-p <Password> --create --xdcr-cluster-name <remote-cluster>\n--xdcr-from-bucket    <bucket> --xdcr-to-bucket <remote-bucket>\n--xdcr-replication-mode xmem\nReview XDCR setup documentation for Couchbase:\nhttps://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-xdcr-setup.html\nhttps://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-xdcr-replicate.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000225-DB-000153","gid":"V-32528","rid":"SV-42865r3_rule","stig_id":"SRG-APP-000225-DB-000153","fix_id":"F-36443r2_fix","cci":["CCI-001190"],"nist":["SC-24","Rev_4"]},"code":"control \"V-32528\" do\n  title \"Couchbase must fail to a secure state if system initialization fails,\n  shutdown fails, or aborts fail.\"\n  desc  \"Failure to a known state can address safety or security in accordance\n  with the mission/business needs of the organization.\n\n  Failure to a known secure state helps prevent a loss of confidentiality,\n  integrity, or availability in the event of a failure of the information system\n  or a component of the system.\n\n  Failure to a known safe state helps prevent systems from failing to a state\n  that may cause loss of data or unauthorized access to system resources. Systems\n  that fail suddenly and with no incorporated failure state planning may leave\n  the hosting system available but with a reduced security protection capability.\n  Preserving information system state data also facilitates system restart and\n  return to the operational mode of the organization with less disruption of\n  mission/business processes.\n\n  Databases must fail to a known consistent state. Transactions must be\n  successfully completed or rolled back.\n\n  In general, security mechanisms should be designed so that a failure will\n  follow the same execution path as disallowing the operation. For example,\n  application security methods, such as isAuthorized(), isAuthenticated(), and\n  validate(), should all return false if there is an exception during processing.\n  If security controls can throw exceptions, they must be very clear about\n  exactly what that condition means.\n\n  Abort refers to stopping a program or function before it has finished\n  naturally. The term abort refers to both requested and unexpected terminations.\n  \"\n  desc  \"check\", \"\n  Couchbase is capable of replicating data across different clusters, by\n  means of the Database Change Protocol (DCP).\n\n  As the Full Admin, execute the following command to list the current XDCR\n  replication:\n  $ couchbase-cli xdcr-replicate -c <host>:<port> -u <Full Admin> -p\n  <Password> --list\n  \n  If the list is empty, XDCR replication is not being utilized by the\n  cluster, therefore this is a finding.\n  \"\n  desc  \"fix\", \"\n  As the Full Admin, setup XDCR for Couchbase with the following command:\n  $ couchbase-cli xdcr-setup -c <host>:<port>-u <Full Admin> -p <Password>\n  --create \\\\\n  --xdcr-cluster-name <remote-cluster>--xdcr-hostname <host>:<port>\n  --xdcr-username \\\\\n  <Full Admin> --xdcr-password <Password>\n  $ couchbase-cli xdcr-replicate -c <host>:<port>-u <Full Admin> \\\\\n  -p <Password> --create --xdcr-cluster-name <remote-cluster>\n  --xdcr-from-bucket    <bucket> --xdcr-to-bucket <remote-bucket>\n  --xdcr-replication-mode xmem\n  Review XDCR setup documentation for Couchbase:\n  https://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-xdcr-setup.html\n  https://docs.couchbase.com/server/current/cli/cbcli/couchbase-cli-xdcr-replicate.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000225-DB-000153\"\n  tag \"gid\": \"V-32528\"\n  tag \"rid\": \"SV-42865r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000225-DB-000153\"\n  tag \"fix_id\": \"F-36443r2_fix\"\n  tag \"cci\": [\"CCI-001190\"]\n  tag \"nist\": [\"SC-24\", \"Rev_4\"]\n\n  describe command(\"couchbase-cli xdcr-replicate -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} --cluster #{input('cb_cluster_host')}\\\n  :#{input('cb_cluster_port')} --list\") do\n    its('stdout') { should_not eq \"\" }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32528.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Command: `couchbase-cli xdcr-replicate -u admin -p @dminP@asswd2020 --cluster localhost  :8091 --list` stdout is expected not to eq \"\"","run_time":0.018988,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: value != \"\"\n     got: \"\"\n\n(compared using ==)\n"}]},{"id":"V-32478","title":"Couchbase must map the PKI-authenticated identity to an associated\nuser account.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\nOnce a PKI certificate has been validated, it must be mapped to a Couchbase\nuser account for the authenticated identity to be meaningful to Couchbase and\nuseful for authorization decisions.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\nOnce a PKI certificate has been validated, it must be mapped to a Couchbase\nuser account for the authenticated identity to be meaningful to Couchbase and\nuseful for authorization decisions."},{"label":"check","data":"If Couchbase is not using PKI-based authentication, this check is Not\nApplicable (NA).\n    The cn (Common Name) attribute of the certificate will be compared to the\nrequested database user name, and if they match the login will be allowed.\n    As the Full Admin, get a list of all RBAC users in the cluster with the\nfollowing command:\n     $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    To check the cn of the certificate, using openssl, do the following:\n    $ openssl x509 -noout -subject -in client_cert\n    If the cn does not match the users listed in Couchbase and no user mapping\nis used, this is a finding.\n    If user accounts are not being mapped to authenticated identities, this is\na finding."},{"label":"fix","data":"Configure the Couchbase to map the authenticated identity directly to the\nCouchbase user account.\n    For information on configuring Couchbase to use SSL, see the following\ndocumentationhttps://docs.couchbase.com/server/current/manage/manage-security/manage-certificates.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000177-DB-000069","gid":"V-32478","rid":"SV-42815r3_rule","stig_id":"SRG-APP-000177-DB-000069","fix_id":"F-36392r2_fix","cci":["CCI-000187"],"nist":["IA-5 (2) (c)","Rev_4"]},"code":"control \"V-32478\" do\n  title \"Couchbase must map the PKI-authenticated identity to an associated\nuser account.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\nOnce a PKI certificate has been validated, it must be mapped to a Couchbase\nuser account for the authenticated identity to be meaningful to Couchbase and\nuseful for authorization decisions.\"\n  desc  \"check\", \"\n    If Couchbase is not using PKI-based authentication, this check is Not\nApplicable (NA).\n    The cn (Common Name) attribute of the certificate will be compared to the\nrequested database user name, and if they match the login will be allowed.\n    As the Full Admin, get a list of all RBAC users in the cluster with the\nfollowing command:\n     $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    To check the cn of the certificate, using openssl, do the following:\n    $ openssl x509 -noout -subject -in client_cert\n    If the cn does not match the users listed in Couchbase and no user mapping\nis used, this is a finding.\n    If user accounts are not being mapped to authenticated identities, this is\na finding.\n  \"\n  desc  \"fix\", \"\n    Configure the Couchbase to map the authenticated identity directly to the\nCouchbase user account.\n    For information on configuring Couchbase to use SSL, see the following\ndocumentationhttps://docs.couchbase.com/server/current/manage/manage-security/manage-certificates.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000177-DB-000069\"\n  tag \"gid\": \"V-32478\"\n  tag \"rid\": \"SV-42815r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000177-DB-000069\"\n  tag \"fix_id\": \"F-36392r2_fix\"\n  tag \"cci\": [\"CCI-000187\"]\n  tag \"nist\": [\"IA-5 (2) (c)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32478.rb"},"waiver_data":{},"results":[]},{"id":"V-58149","title":"Couchbase must prevent unauthorized and unintended information\ntransfer via shared system resources.","desc":"The purpose of this control is to prevent information, including\nencrypted representations of information, produced by the actions of a prior\nuser/role (or the actions of a process acting on behalf of a prior user/role)\nfrom being available to any current user/role (or current process) that obtains\naccess to a shared system resource (e.g., registers, main memory, secondary\nstorage) after the resource has been released back to the information system.\nControl of information in shared resources is also referred to as object reuse.","descriptions":[{"label":"default","data":"The purpose of this control is to prevent information, including\nencrypted representations of information, produced by the actions of a prior\nuser/role (or the actions of a process acting on behalf of a prior user/role)\nfrom being available to any current user/role (or current process) that obtains\naccess to a shared system resource (e.g., registers, main memory, secondary\nstorage) after the resource has been released back to the information system.\nControl of information in shared resources is also referred to as object reuse."},{"label":"check","data":"Review the permissions granted to users by the operating system/file system\non the database files, database log files and database backup files.\n    Verify the permissions for the following database files directories with\nthe following commands:\n    Couchbase configuration files directory -\n     $ ls -la /opt/couchbase/etc/couchbase\n    Couchbase default directory (contains data and logs):\n      $ ls -la /opt/couchbase/var/lib/couchbase\n    If the owner and group are not both \"couchbase\" for the files, this is a\nfinding.\n    If the files permissions are more permissive than \"600\", this is a\nfinding."},{"label":"fix","data":"Configure Couchbase to effectively protect the private resources of one\nprocess or user from unauthorized access by another user or process.\n    As the root or sudo user, change the permission of the following files:\n    Couchbase configuration files directory:\n      $ chown -R couchbase:couchbase /opt/couchbase/etc/couchbase\n      $ chmod 600 /opt/couchbase/etc/couchbase/*\n    Couchbase default directory (contains data and logs):\n      $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase\n      $ chmod 600 /opt/couchbase/var/lib/couchbase/*"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000243-DB-000373","gid":"V-58149","rid":"SV-72579r1_rule","stig_id":"SRG-APP-000243-DB-000373","fix_id":"F-63357r1_fix","cci":["CCI-001090"],"nist":["SC-4","Rev_4"]},"code":"control \"V-58149\" do\n  title \"Couchbase must prevent unauthorized and unintended information\ntransfer via shared system resources.\"\n  desc  \"The purpose of this control is to prevent information, including\nencrypted representations of information, produced by the actions of a prior\nuser/role (or the actions of a process acting on behalf of a prior user/role)\nfrom being available to any current user/role (or current process) that obtains\naccess to a shared system resource (e.g., registers, main memory, secondary\nstorage) after the resource has been released back to the information system.\nControl of information in shared resources is also referred to as object reuse.\"\n  desc  \"check\", \"\n    Review the permissions granted to users by the operating system/file system\non the database files, database log files and database backup files.\n    Verify the permissions for the following database files directories with\nthe following commands:\n    Couchbase configuration files directory -\n     $ ls -la /opt/couchbase/etc/couchbase\n    Couchbase default directory (contains data and logs):\n      $ ls -la /opt/couchbase/var/lib/couchbase\n    If the owner and group are not both \\\"couchbase\\\" for the files, this is a\nfinding.\n    If the files permissions are more permissive than \\\"600\\\", this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase to effectively protect the private resources of one\nprocess or user from unauthorized access by another user or process.\n    As the root or sudo user, change the permission of the following files:\n    Couchbase configuration files directory:\n      $ chown -R couchbase:couchbase /opt/couchbase/etc/couchbase\n      $ chmod 600 /opt/couchbase/etc/couchbase/*\n    Couchbase default directory (contains data and logs):\n      $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase\n      $ chmod 600 /opt/couchbase/var/lib/couchbase/*\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000243-DB-000373\"\n  tag \"gid\": \"V-58149\"\n  tag \"rid\": \"SV-72579r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000243-DB-000373\"\n  tag \"fix_id\": \"F-63357r1_fix\"\n  tag \"cci\": [\"CCI-001090\"]\n  tag \"nist\": [\"SC-4\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58149.rb"},"waiver_data":{},"results":[]},{"id":"V-32394","title":"The audit information produced by Couchbase must be protected from\nunauthorized modification.","desc":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data the information system and/or the\napplication must protect audit information from unauthorized modification.\n\n    This requirement can be achieved through multiple methods that will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions and limiting log\ndata locations.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights that the user enjoys in order to make access decisions\nregarding the modification of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Modification of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.","descriptions":[{"label":"default","data":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data the information system and/or the\napplication must protect audit information from unauthorized modification.\n\n    This requirement can be achieved through multiple methods that will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions and limiting log\ndata locations.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights that the user enjoys in order to make access decisions\nregarding the modification of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Modification of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database."},{"label":"check","data":"Review locations of audit logs, both internal to the database and database\naudit logs located at the operating system level.\n    Review the ownership and permissions of the audit logs:\n    $ ls –ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \"couchbase\" user and group, this is\na finding. If the file permission are not 600, this is a finding."},{"label":"fix","data":"Apply controls and modify permissions to protect database audit log data\nfrom unauthorized modification, whether stored in the database itself or at the\nOS level.\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n    $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 600 /opt/couchbase/var/lib/couchbase/*.logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000119-DB-000060","gid":"V-32394","rid":"SV-42731r3_rule","stig_id":"SRG-APP-000119-DB-000060","fix_id":"F-36309r2_fix","cci":["CCI-000163"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32394\" do\n  title \"The audit information produced by Couchbase must be protected from\nunauthorized modification.\"\n  desc  \"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is impossible to achieve.\n\n    To ensure the veracity of audit data the information system and/or the\napplication must protect audit information from unauthorized modification.\n\n    This requirement can be achieved through multiple methods that will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions and limiting log\ndata locations.\n\n    Applications providing a user interface to audit data will leverage user\npermissions and roles identifying the user accessing the data and the\ncorresponding rights that the user enjoys in order to make access decisions\nregarding the modification of audit data.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n\n    Modification of database audit data could mask the theft of, or the\nunauthorized modification of, sensitive data stored in the database.\n  \"\n  desc  \"check\", \"\n    Review locations of audit logs, both internal to the database and database\naudit logs located at the operating system level.\n    Review the ownership and permissions of the audit logs:\n    $ ls \\xE2\\x80\\x93ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \\\"couchbase\\\" user and group, this is\na finding. If the file permission are not 600, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Apply controls and modify permissions to protect database audit log data\nfrom unauthorized modification, whether stored in the database itself or at the\nOS level.\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n    $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 600 /opt/couchbase/var/lib/couchbase/*.logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000119-DB-000060\"\n  tag \"gid\": \"V-32394\"\n  tag \"rid\": \"SV-42731r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000119-DB-000060\"\n  tag \"fix_id\": \"F-36309r2_fix\"\n  tag \"cci\": [\"CCI-000163\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32394.rb"},"waiver_data":{},"results":[]},{"id":"V-32347","title":"Couchbase must protect against a user falsely repudiating having\nperformed organization-defined actions.","desc":"Non-repudiation of actions taken is required in order to maintain data\nintegrity. Examples of particular actions taken by individuals include creating\ninformation, sending a message, approving information (e.g., indicating\nconcurrence or signing a contract), and receiving a message.\n\n    Non-repudiation protects against later claims by a user of not having\ncreated, modified, or deleted a particular data item or collection of data in\nthe database.\n\n    In designing a database, the organization must define the types of data and\nthe user actions that must be protected from repudiation. The implementation\nmust then include building audit features into the application data tables and\nconfiguring Couchbase's audit tools to capture the necessary audit trail.\nDesign and implementation also must ensure that applications pass individual\nuser identification to Couchbase, even where the application connects to\nCouchbase with a standard, shared account.","descriptions":[{"label":"default","data":"Non-repudiation of actions taken is required in order to maintain data\nintegrity. Examples of particular actions taken by individuals include creating\ninformation, sending a message, approving information (e.g., indicating\nconcurrence or signing a contract), and receiving a message.\n\n    Non-repudiation protects against later claims by a user of not having\ncreated, modified, or deleted a particular data item or collection of data in\nthe database.\n\n    In designing a database, the organization must define the types of data and\nthe user actions that must be protected from repudiation. The implementation\nmust then include building audit features into the application data tables and\nconfiguring Couchbase's audit tools to capture the necessary audit trail.\nDesign and implementation also must ensure that applications pass individual\nuser identification to Couchbase, even where the application connects to\nCouchbase with a standard, shared account."},{"label":"check","data":"Review system documentation to determine the data and the actions on data\nthat need to be protected from repudiation by means of audit trails.\n    When enabled, Couchbase can identify a unique user for each record.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Verify from the output that \"Audit enabled\" is set to \"true\". If\n\"Audit enabled\" is not set to true, this is finding."},{"label":"fix","data":"Use accounts assigned to individual users. Where the application connects\nto Couchbase using a standard, shared account, ensure that it also captures the\nindividual user identification and passes it to Couchbase.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000080-DB-000063","gid":"V-32347","rid":"SV-42684r4_rule","stig_id":"SRG-APP-000080-DB-000063","fix_id":"F-36261r3_fix","cci":["CCI-000166"],"nist":["AU-10","Rev_4"]},"code":"control \"V-32347\" do\n  title \"Couchbase must protect against a user falsely repudiating having\nperformed organization-defined actions.\"\n  desc  \"Non-repudiation of actions taken is required in order to maintain data\nintegrity. Examples of particular actions taken by individuals include creating\ninformation, sending a message, approving information (e.g., indicating\nconcurrence or signing a contract), and receiving a message.\n\n    Non-repudiation protects against later claims by a user of not having\ncreated, modified, or deleted a particular data item or collection of data in\nthe database.\n\n    In designing a database, the organization must define the types of data and\nthe user actions that must be protected from repudiation. The implementation\nmust then include building audit features into the application data tables and\nconfiguring Couchbase's audit tools to capture the necessary audit trail.\nDesign and implementation also must ensure that applications pass individual\nuser identification to Couchbase, even where the application connects to\nCouchbase with a standard, shared account.\n  \"\n  desc  \"check\", \"\n    Review system documentation to determine the data and the actions on data\nthat need to be protected from repudiation by means of audit trails.\n    When enabled, Couchbase can identify a unique user for each record.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Verify from the output that \\\"Audit enabled\\\" is set to \\\"true\\\". If\n\\\"Audit enabled\\\" is not set to true, this is finding.\n  \"\n  desc  \"fix\", \"\n    Use accounts assigned to individual users. Where the application connects\nto Couchbase using a standard, shared account, ensure that it also captures the\nindividual user identification and passes it to Couchbase.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000080-DB-000063\"\n  tag \"gid\": \"V-32347\"\n  tag \"rid\": \"SV-42684r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000080-DB-000063\"\n  tag \"fix_id\": \"F-36261r3_fix\"\n  tag \"cci\": [\"CCI-000166\"]\n  tag \"nist\": [\"AU-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32347.rb"},"waiver_data":{},"results":[]},{"id":"V-32373","title":"Couchbase must produce audit records containing sufficient information\nto establish the outcome (success or failure) of the events.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without information about the outcome of events, security\npersonnel cannot make an accurate assessment as to whether an attack was\nsuccessful or if changes were made to the security state of the system.\n\n    Event outcomes can include indicators of event success or failure and\nevent-specific results (e.g., the security state of the information system\nafter the event occurred). As such, they also provide a means to measure the\nimpact of an event and help authorized personnel to determine the appropriate\nresponse.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without information about the outcome of events, security\npersonnel cannot make an accurate assessment as to whether an attack was\nsuccessful or if changes were made to the security state of the system.\n\n    Event outcomes can include indicators of event success or failure and\nevent-specific results (e.g., the security state of the information system\nafter the event occurred). As such, they also provide a means to measure the\nimpact of an event and help authorized personnel to determine the appropriate\nresponse."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n       Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the outcome (success or failure) of the events.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000099-DB-000043","gid":"V-32373","rid":"SV-42710r3_rule","stig_id":"SRG-APP-000099-DB-000043","fix_id":"F-36287r2_fix","cci":["CCI-000134"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32373\" do\n  title \"Couchbase must produce audit records containing sufficient information\nto establish the outcome (success or failure) of the events.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without information about the outcome of events, security\npersonnel cannot make an accurate assessment as to whether an attack was\nsuccessful or if changes were made to the security state of the system.\n\n    Event outcomes can include indicators of event success or failure and\nevent-specific results (e.g., the security state of the information system\nafter the event occurred). As such, they also provide a means to measure the\nimpact of an event and help authorized personnel to determine the appropriate\nresponse.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n       Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the outcome (success or failure) of the events.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000099-DB-000043\"\n  tag \"gid\": \"V-32373\"\n  tag \"rid\": \"SV-42710r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000099-DB-000043\"\n  tag \"fix_id\": \"F-36287r2_fix\"\n  tag \"cci\": [\"CCI-000134\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32373.rb"},"waiver_data":{},"results":[]},{"id":"V-58169","title":"Couchbase must implement cryptographic mechanisms to prevent\nunauthorized modification of organization-defined information at rest (to\ninclude, at a minimum, PII and classified information) on organization-defined\ninformation system components.","desc":"Couchbases handling data requiring \"data at rest\" protections must\nemploy cryptographic mechanisms to prevent unauthorized disclosure and\nmodification of the information at rest. These cryptographic mechanisms may be\nnative to Couchbase or implemented via additional software or operating\nsystem/file system settings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.","descriptions":[{"label":"default","data":"Couchbases handling data requiring \"data at rest\" protections must\nemploy cryptographic mechanisms to prevent unauthorized disclosure and\nmodification of the information at rest. These cryptographic mechanisms may be\nnative to Couchbase or implemented via additional software or operating\nsystem/file system settings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides."},{"label":"check","data":"Review the system documentation to determine whether the organization has\ndefined the information at rest that is to be protected from modification,\nwhich must include, at a minimum, PII and classified information.\n    If no information is identified as requiring such protection, this is not a\nfinding.\n    If any of the information defined as requiring cryptographic protection\nfrom modification is not encrypted in a manner that provides the required level\nof protection, this is a finding.\n    If an encryption at rest is required but the encryption tool is not\ninstalled on the server, this is a finding."},{"label":"fix","data":"Configure Couchbase settings to enable protections against\nman-in-the-middle attacks that guess at session identifier values.\n    Review  documentation to set up 3rd party encryption tools.\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-connections-and-disks.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000428-DB-000386","gid":"V-58169","rid":"SV-72599r1_rule","stig_id":"SRG-APP-000428-DB-000386","fix_id":"F-63377r1_fix","cci":["CCI-002475"],"nist":["SC-28 (1)","Rev_4"]},"code":"control \"V-58169\" do\n  title \"Couchbase must implement cryptographic mechanisms to prevent\nunauthorized modification of organization-defined information at rest (to\ninclude, at a minimum, PII and classified information) on organization-defined\ninformation system components.\"\n  desc  \"Couchbases handling data requiring \\\"data at rest\\\" protections must\nemploy cryptographic mechanisms to prevent unauthorized disclosure and\nmodification of the information at rest. These cryptographic mechanisms may be\nnative to Couchbase or implemented via additional software or operating\nsystem/file system settings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to determine whether the organization has\ndefined the information at rest that is to be protected from modification,\nwhich must include, at a minimum, PII and classified information.\n    If no information is identified as requiring such protection, this is not a\nfinding.\n    If any of the information defined as requiring cryptographic protection\nfrom modification is not encrypted in a manner that provides the required level\nof protection, this is a finding.\n    If an encryption at rest is required but the encryption tool is not\ninstalled on the server, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase settings to enable protections against\nman-in-the-middle attacks that guess at session identifier values.\n    Review  documentation to set up 3rd party encryption tools.\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-connections-and-disks.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000428-DB-000386\"\n  tag \"gid\": \"V-58169\"\n  tag \"rid\": \"SV-72599r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000428-DB-000386\"\n  tag \"fix_id\": \"F-63377r1_fix\"\n  tag \"cci\": [\"CCI-002475\"]\n  tag \"nist\": [\"SC-28 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58169.rb"},"waiver_data":{},"results":[]},{"id":"V-58179","title":"Couchbase and associated applications must reserve the use of dynamic\ncode execution for situations that require it.","desc":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review Couchbase source code (stored procedures, functions, triggers) and\napplication source code, to identify cases of dynamic code execution.\n    If dynamic code execution is employed in circumstances where the objective\ncould practically be satisfied by static execution with strongly typed\nparameters, this is a finding."},{"label":"fix","data":"Where dynamic code execution is employed in circumstances where\nthe objective could practically be satisfied by static execution with strongly\ntyped parameters, modify the code to do so."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000251-DB-000391","gid":"V-58179","rid":"SV-72609r2_rule","stig_id":"SRG-APP-000251-DB-000391","fix_id":"F-63387r1_fix","cci":["CCI-001310"],"nist":["SI-10","Rev_4"]},"code":"control \"V-58179\" do\n  title \"Couchbase and associated applications must reserve the use of dynamic\ncode execution for situations that require it.\"\n  desc  \"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Review Couchbase source code (stored procedures, functions, triggers) and\napplication source code, to identify cases of dynamic code execution.\n    If dynamic code execution is employed in circumstances where the objective\ncould practically be satisfied by static execution with strongly typed\nparameters, this is a finding.\n  \"\n  desc  \"fix\", \"Where dynamic code execution is employed in circumstances where\nthe objective could practically be satisfied by static execution with strongly\ntyped parameters, modify the code to do so.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000251-DB-000391\"\n  tag \"gid\": \"V-58179\"\n  tag \"rid\": \"SV-72609r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000251-DB-000391\"\n  tag \"fix_id\": \"F-63387r1_fix\"\n  tag \"cci\": [\"CCI-001310\"]\n  tag \"nist\": [\"SI-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58179.rb"},"waiver_data":{},"results":[]},{"id":"V-58039","title":"Couchbase must associate organization-defined types of security labels\n  having organization-defined security label values with information in process.","desc":"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code.","descriptions":[{"label":"default","data":"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code."},{"label":"check","data":"If security labeling is not required, this is not a finding.\nIf security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin process, this is a finding."},{"label":"fix","data":"Enable Couchbase features, deploy third-party software, or add\n  custom data structures, data elements and application code, to provide reliable\n  security labeling of information in process."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000313-DB-000309","gid":"V-58039","rid":"SV-72469r1_rule","stig_id":"SRG-APP-000313-DB-000309","fix_id":"F-63247r1_fix","cci":["CCI-002263"],"nist":["AC-16 a","Rev_4"]},"code":"control \"V-58039\" do\n  title \"Couchbase must associate organization-defined types of security labels\n  having organization-defined security label values with information in process.\"\n  desc  \"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code.\n  \"\n  desc  \"check\", \"\n  If security labeling is not required, this is not a finding.\n  If security labeling requirements have been specified, but the security\n  labeling is not implemented or does not reliably maintain labels on information\n  in process, this is a finding.\n  \"\n  desc  \"fix\", \"Enable Couchbase features, deploy third-party software, or add\n  custom data structures, data elements and application code, to provide reliable\n  security labeling of information in process.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000313-DB-000309\"\n  tag \"gid\": \"V-58039\"\n  tag \"rid\": \"SV-72469r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000313-DB-000309\"\n  tag \"fix_id\": \"F-63247r1_fix\"\n  tag \"cci\": [\"CCI-002263\"]\n  tag \"nist\": [\"AC-16 a\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58039.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required","run_time":4.0e-06,"start_time":"2020-09-28T22:09:07-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required"}]},{"id":"V-32363","title":"Couchbase must allow only the ISSM (or individuals or roles appointed\nby the ISSM) to select which auditable events are to be audited.","desc":null,"descriptions":[{"label":"check","data":"Only a user with Full Admin role can change auditing controls.\n    As the Full Admin, get a list of all RBAC users with the following command:\n    $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\n    If any users have the \"admin\" role that should not, this is a finding.\n    Additionally, the permissions of the config file should also be verified.\nThis can be done by running the following command:\n     $ ls -la /opt/couchbase/etc/couchbase/static_config\n    Review the ownership and permissions. If anyone other than couchbase is the\nowner and group owner, this is a finding. If permissions are not set to 600,\nthis is a finding."},{"label":"fix","data":"Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\"admin\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\n     --rbac-name <name> --roles <roles> \\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000090-DB-000065","gid":"V-32363","rid":"SV-42700r3_rule","stig_id":"SRG-APP-000090-DB-000065","fix_id":"F-36278r2_fix","cci":["CCI-000171"],"nist":["AU-12 b","Rev_4"]},"code":"control \"V-32363\" do\n  title \"Couchbase must allow only the ISSM (or individuals or roles appointed\nby the ISSM) to select which auditable events are to be audited.\"\n  desc  \"check\", \"\n    Only a user with Full Admin role can change auditing controls.\n    As the Full Admin, get a list of all RBAC users with the following command:\n    $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\n    If any users have the \\\"admin\\\" role that should not, this is a finding.\n    Additionally, the permissions of the config file should also be verified.\nThis can be done by running the following command:\n     $ ls -la /opt/couchbase/etc/couchbase/static_config\n    Review the ownership and permissions. If anyone other than couchbase is the\nowner and group owner, this is a finding. If permissions are not set to 600,\nthis is a finding.\n  \"\n  desc  \"fix\", \"\n    Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\\\"admin\\\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\\\n     --rbac-name <name> --roles <roles> \\\\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000090-DB-000065\"\n  tag \"gid\": \"V-32363\"\n  tag \"rid\": \"SV-42700r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000090-DB-000065\"\n  tag \"fix_id\": \"F-36278r2_fix\"\n  tag \"cci\": [\"CCI-000171\"]\n  tag \"nist\": [\"AU-12 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32363.rb"},"waiver_data":{},"results":[]},{"id":"V-58107","title":"Couchbase must generate audit records when successful logons or\nconnections occur.","desc":"For completeness of forensic analysis, it is necessary to track\nwho/what (a user or other principal) logs on to Couchbase.","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to track\nwho/what (a user or other principal) logs on to Couchbase."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging\nsuccessful logins and connections by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen successful login or connections occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000503-DB-000350","gid":"V-58107","rid":"SV-72537r1_rule","stig_id":"SRG-APP-000503-DB-000350","fix_id":"F-63315r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58107\" do\n  title \"Couchbase must generate audit records when successful logons or\nconnections occur.\"\n  desc  \"For completeness of forensic analysis, it is necessary to track\nwho/what (a user or other principal) logs on to Couchbase.\"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging\nsuccessful logins and connections by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce audit records\nwhen successful login or connections occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000503-DB-000350\"\n  tag \"gid\": \"V-58107\"\n  tag \"rid\": \"SV-72537r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000503-DB-000350\"\n  tag \"fix_id\": \"F-63315r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58107.rb"},"waiver_data":{},"results":[]},{"id":"V-58073","title":"Couchbase must generate audit records when unsuccessful attempts to\n  add privileges/permissions occur.","desc":"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, adding permissions is typically done via the GRANT\n  command, or, in the negative, the DENY command.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, adding permissions is typically done via the GRANT\n  command, or, in the negative, the DENY command.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n  First, as the Full Admin, create two user accounts by executing the\n  following commands:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n    -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n    --rbac-name \"John Doe\" --roles replication_admin \\\n    --auth-domain local\n      \n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n    -p <Password> --set --rbac-username janedoe --rbac-password cbpass \\\n    --rbac-name \"Jane Doe\" --roles replication_admin \\\n    --auth-domain local\n\n  Then, as the John Doe, grant the Jane Doe user a new role:\n    $ cbq -u jdoe -p cbpass -engine=http://<host>:<port>/ --script=\"GRANT\n    cluster_admin TO janedoe\"\n  Verify the events were logged with the following command:\n    $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n    Output:\n    {\"description\":\"A N1QL GRANT ROLE statement was executed\",\"id\":28685,\n    \"isAdHoc\":true,\"metrics\":{\"elapsedTime\":\"476.925µs\",\"errorCount\":1,\n    \"executionTime\":\"388.584µs\",\"resultCount\":0,\"resultSize\":0},\"name\":\"GRANT\n    ROLE statement\",\"node\":\"127.0.0.1:8091\",\"real_use\"rid\"\":{\"domain\":\"local\",\n    \"user\":\"jdoe\"},\"remote\":{\"ip\":\"127.0.0.1\",\"port\":39960},\"requestId\":\n    \"1e51a528-6108-44cd-a387-076502e61728\",\"statement\":\"GRANT\n    cluster_admin TO janedoe;\",\"status\":\"fatal\",\"timestamp\":\"2020-08-21T17:23:55.427Z\",\n    \"userAgent\":\"Go-http-client/1.1 (CBQ/2.0)\"}\n\n  If the above steps cannot verify that audit records are produced when\n  privileges/permissions/role memberships are unsuccessfully added, this is a\n  finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are unsuccessfully added.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Enable the required set of auditable events by doing the following:\n    As the Full Admin, log into the cluster and use  the following\n    documentation to enable all on the \"Query and Index Services Event:\n    -\n    https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000327","gid":"V-58073","rid":"SV-72503r2_rule","stig_id":"SRG-APP-000495-DB-000327","fix_id":"F-63281r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58073\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\n  add privileges/permissions occur.\"\n  \n  desc  \"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, adding permissions is typically done via the GRANT\n  command, or, in the negative, the DENY command.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\"\n  \n  desc  \"check\", \"\n  Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n    First, as the Full Admin, create two user accounts by executing the\n    following commands:\n      $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n      -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n      --rbac-name \\\"John Doe\\\" --roles replication_admin \\\\\n      --auth-domain local\n        \n      $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n      -p <Password> --set --rbac-username janedoe --rbac-password cbpass \\\\\n      --rbac-name \\\"Jane Doe\\\" --roles replication_admin \\\\\n      --auth-domain local\n\n    Then, as the John Doe, grant the Jane Doe user a new role:\n      $ cbq -u jdoe -p cbpass -engine=http://<host>:<port>/ --script=\\\"GRANT\n      cluster_admin TO janedoe\\\"\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:\n      {\\\"description\\\":\\\"A N1QL GRANT ROLE statement was executed\\\",\\\"id\\\":28685,\n      \\\"isAdHoc\\\":true,\\\"metrics\\\":{\\\"elapsedTime\\\":\\\"476.925\\xC2\\xB5s\\\",\\\"errorCount\\\":1,\n      \\\"executionTime\\\":\\\"388.584\\xC2\\xB5s\\\",\\\"resultCount\\\":0,\\\"resultSize\\\":0},\\\"name\\\":\\\"GRANT\n      ROLE statement\\\",\\\"node\\\":\\\"127.0.0.1:8091\\\",\\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\n      \\\"user\\\":\\\"jdoe\\\"},\\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":39960},\\\"requestId\\\":\n      \\\"1e51a528-6108-44cd-a387-076502e61728\\\",\\\"statement\\\":\\\"GRANT\n      cluster_admin TO janedoe;\\\",\\\"status\\\":\\\"fatal\\\",\\\"timestamp\\\":\\\"2020-08-21T17:23:55.427Z\\\",\n      \\\"userAgent\\\":\\\"Go-http-client/1.1 (CBQ/2.0)\\\"}\n\n    If the above steps cannot verify that audit records are produced when\n    privileges/permissions/role memberships are unsuccessfully added, this is a\n    finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when privileges/permissions are unsuccessfully added.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable the required set of auditable events by doing the following:\n      As the Full Admin, log into the cluster and use  the following\n      documentation to enable all on the \\\"Query and Index Services Event:\n      -\n      https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\"\n      \n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000327\"\n  tag \"gid\": \"V-58073\"\n  tag \"rid\": \"SV-72503r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000327\"\n  tag \"fix_id\": \"F-63281r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Create the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Create the janedoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username janedoe --rbac-password cbpass --rbac-name 'Jane Doe' \\\n    --roles replication_admin --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Grant permissions to janedoe user by jdoe. The\" do \n    subject { command(\"cbq -u jdoe -p cbpass --engine=http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}\\\n    --script='GRANT cluster_admin TO janedoe'\")}\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'A N1QL GRANT ROLE' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"fatal\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Delete the janedoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username janedoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58073.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Create the jdoe user. The exit_status is expected to eq 0","run_time":0.122169,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Create the janedoe user. The exit_status is expected to eq 0","run_time":0.111093,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"passed","code_desc":"Grant permissions to janedoe user by jdoe. The exit_status is expected to eq 0","run_time":0.02559,"start_time":"2020-09-28T22:09:07-04:00"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"fatal\"/","run_time":0.02087,"start_time":"2020-09-28T22:09:07-04:00","message":"expected \"\" to match /\"fatal\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"fatal\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.105301,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Delete the janedoe user. The exit_status is expected to eq 0","run_time":0.103704,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58133","title":"Couchbase must disable network functions, ports, protocols, and\nservices deemed by the organization to be nonsecure, in accord with the Ports,\nProtocols, and Services Management (PPSM) guidance.","desc":"Use of nonsecure network functions, ports, protocols, and services\nexposes the system to avoidable threats.","descriptions":[{"label":"default","data":"Use of nonsecure network functions, ports, protocols, and services\nexposes the system to avoidable threats."},{"label":"check","data":"Review the network functions, ports, protocols, and services in the\nCouchbase config:\n    $ vi /opt/couchbase/etc/couchbase/static_config\n    If any protocol is prohibited by the PPSM guidance and is enabled, this is\na finding."},{"label":"fix","data":"Ensure Couchbase is capable of disabling a network function, port,\nprotocol, or service prohibited by the PPSM guidance.\n    Disable each prohibited network function, port, protocol, or service."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000383-DB-000364","gid":"V-58133","rid":"SV-72563r1_rule","stig_id":"SRG-APP-000383-DB-000364","fix_id":"F-63341r1_fix","cci":["CCI-001762"],"nist":["CM-7 (1) (b)","Rev_4"]},"code":"control \"V-58133\" do\n  title \"Couchbase must disable network functions, ports, protocols, and\nservices deemed by the organization to be nonsecure, in accord with the Ports,\nProtocols, and Services Management (PPSM) guidance.\"\n  desc  \"Use of nonsecure network functions, ports, protocols, and services\nexposes the system to avoidable threats.\"\n  desc  \"check\", \"\n    Review the network functions, ports, protocols, and services in the\nCouchbase config:\n    $ vi /opt/couchbase/etc/couchbase/static_config\n    If any protocol is prohibited by the PPSM guidance and is enabled, this is\na finding.\n  \"\n  desc  \"fix\", \"\n    Ensure Couchbase is capable of disabling a network function, port,\nprotocol, or service prohibited by the PPSM guidance.\n    Disable each prohibited network function, port, protocol, or service.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000383-DB-000364\"\n  tag \"gid\": \"V-58133\"\n  tag \"rid\": \"SV-72563r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000383-DB-000364\"\n  tag \"fix_id\": \"F-63341r1_fix\"\n  tag \"cci\": [\"CCI-001762\"]\n  tag \"nist\": [\"CM-7 (1) (b)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58133.rb"},"waiver_data":{},"results":[]},{"id":"V-32368","title":"Couchbase must produce audit records containing sufficient information\nto establish what type of events occurred.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing what type of event occurred, it would\nbe difficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit record content that may be necessary to satisfy the requirement of\nthis policy includes, for example, time stamps, user/process identifiers, event\ndescriptions, success/fail indications, filenames involved, and access control\nor flow control rules invoked.\n\n    Associating event types with detected events in the application and audit\nlogs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhat actions were performed. This requires specific information regarding the\nevent type an audit record is referring to. If event type information is not\nrecorded and stored with the audit record, the record itself is of very limited\nuse.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing what type of event occurred, it would\nbe difficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit record content that may be necessary to satisfy the requirement of\nthis policy includes, for example, time stamps, user/process identifiers, event\ndescriptions, success/fail indications, filenames involved, and access control\nor flow control rules invoked.\n\n    Associating event types with detected events in the application and audit\nlogs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhat actions were performed. This requires specific information regarding the\nevent type an audit record is referring to. If event type information is not\nrecorded and stored with the audit record, the record itself is of very limited\nuse."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the types of events that have occurred.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000095-DB-000039","gid":"V-32368","rid":"SV-42705r3_rule","stig_id":"SRG-APP-000095-DB-000039","fix_id":"F-36283r3_fix","cci":["CCI-000130"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32368\" do\n  title \"Couchbase must produce audit records containing sufficient information\nto establish what type of events occurred.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing what type of event occurred, it would\nbe difficult to establish, correlate, and investigate the events relating to an\nincident or identify those responsible for one.\n\n    Audit record content that may be necessary to satisfy the requirement of\nthis policy includes, for example, time stamps, user/process identifiers, event\ndescriptions, success/fail indications, filenames involved, and access control\nor flow control rules invoked.\n\n    Associating event types with detected events in the application and audit\nlogs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhat actions were performed. This requires specific information regarding the\nevent type an audit record is referring to. If event type information is not\nrecorded and stored with the audit record, the record itself is of very limited\nuse.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the types of events that have occurred.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000095-DB-000039\"\n  tag \"gid\": \"V-32368\"\n  tag \"rid\": \"SV-42705r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000095-DB-000039\"\n  tag \"fix_id\": \"F-36283r3_fix\"\n  tag \"cci\": [\"CCI-000130\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32368.rb"},"waiver_data":{},"results":[]},{"id":"V-58123","title":"Couchbase must generate audit records for all direct access to the\ndatabase(s).","desc":"In this context, direct access is any query, command, or call to\nCouchbase that comes from any source other than the application(s) that it\nsupports. Examples would be the command line or a database management utility\nprogram. The intent is to capture all activity from administrative and\nnon-standard sources.","descriptions":[{"label":"default","data":"In this context, direct access is any query, command, or call to\nCouchbase that comes from any source other than the application(s) that it\nsupports. Examples would be the command line or a database management utility\nprogram. The intent is to capture all activity from administrative and\nnon-standard sources."},{"label":"check","data":"If Couchbase does not generate audit records for all direct access to the\ndatabase(s), this is a finding.\n    Couchbase Server 6.5.0 and earlier-\n    Verify that the \"http_access.log\" and \"http_access_internal.log\" files\nexists in the Couchbase log directory. If the logs do not exist or do not\ngenerate records, this is a finding.\n    Couchbase Server Version 6.5.1 and later-\n    Verify that auditing is enabled:\n    $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n    Review the output. If \"Audit enabled\" is not true, this is finding."},{"label":"fix","data":"Configure Couchbase to generate audit records for all direct access to the\ndatabase(s).\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000508-DB-000358","gid":"V-58123","rid":"SV-72553r1_rule","stig_id":"SRG-APP-000508-DB-000358","fix_id":"F-63331r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58123\" do\n  title \"Couchbase must generate audit records for all direct access to the\ndatabase(s).\"\n  desc  \"In this context, direct access is any query, command, or call to\nCouchbase that comes from any source other than the application(s) that it\nsupports. Examples would be the command line or a database management utility\nprogram. The intent is to capture all activity from administrative and\nnon-standard sources.\"\n  desc  \"check\", \"\n    If Couchbase does not generate audit records for all direct access to the\ndatabase(s), this is a finding.\n    Couchbase Server 6.5.0 and earlier-\n    Verify that the \\\"http_access.log\\\" and \\\"http_access_internal.log\\\" files\nexists in the Couchbase log directory. If the logs do not exist or do not\ngenerate records, this is a finding.\n    Couchbase Server Version 6.5.1 and later-\n    Verify that auditing is enabled:\n    $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n    Review the output. If \\\"Audit enabled\\\" is not true, this is finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase to generate audit records for all direct access to the\ndatabase(s).\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000508-DB-000358\"\n  tag \"gid\": \"V-58123\"\n  tag \"rid\": \"SV-72553r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000508-DB-000358\"\n  tag \"fix_id\": \"F-63331r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58123.rb"},"waiver_data":{},"results":[]},{"id":"V-58063","title":"Couchbase must record time stamps, in audit records and application\n  data, that can be mapped to Coordinated Universal Time (UTC, formerly GMT).","desc":"If time stamps are not consistently applied and there is no common\n  time reference, it is difficult to perform forensic analysis.\n\n  Time stamps generated by Couchbase must include date and time. Time is\n  commonly expressed in Coordinated Universal Time (UTC), a modern continuation\n  of Greenwich Mean Time (GMT), or local time with an offset from UTC.\n\n  Some Couchbase products offer a data type called TIMESTAMP that is not a\n  representation of date and time. Rather, it is a database state counter and\n  does not correspond to calendar and clock time. This requirement does not refer\n  to that meaning of TIMESTAMP.","descriptions":[{"label":"default","data":"If time stamps are not consistently applied and there is no common\n  time reference, it is difficult to perform forensic analysis.\n\n  Time stamps generated by Couchbase must include date and time. Time is\n  commonly expressed in Coordinated Universal Time (UTC), a modern continuation\n  of Greenwich Mean Time (GMT), or local time with an offset from UTC.\n\n  Some Couchbase products offer a data type called TIMESTAMP that is not a\n  representation of date and time. Rather, it is a database state counter and\n  does not correspond to calendar and clock time. This requirement does not refer\n  to that meaning of TIMESTAMP."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n    - \"id\" - ID of Event\n    - \"name\" - Name of Event (can indicate success/failure)\n    - \"description\" - Event Description (can indicate success/failure)\n    - \"filtering_permitted\" - Whether the event is filterable\n    - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\n      format) and \"user\" fields\nNote that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n    - \"node_id\" - ID of Node\n    - \"session_id\" - ID of current Session\n    - \"ip\" - Remote IP address\n    - \"port\" - Remote port\n    - \"bucket_name\" - Name of Bucket\nCouchbase Server 6.5.0 and earlier -\n    As root or a sudo user, verify that the \"audit.log\" file exists in the\n    var/lib/couchbase/logs directory of the Couchbase application home (example:\n    /opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n    \n    Review the audit.log file. If it does not exist or not populated with\n    data captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, verify that auditing is enabled by executing the\n    following command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n      <Password> --get-settings\n    Review the output of the command. If \"Audit enabled\" is not set to\n    \"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to enable the use of\nsystem clocks to generate time stamps for audit records in UTC time and ISO\n8601 format.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000374-DB-000322","gid":"V-58063","rid":"SV-72493r1_rule","stig_id":"SRG-APP-000374-DB-000322","fix_id":"F-63271r1_fix","cci":["CCI-001890"],"nist":["AU-8 b","Rev_4"]},"code":"control \"V-58063\" do\n  title \"Couchbase must record time stamps, in audit records and application\n  data, that can be mapped to Coordinated Universal Time (UTC, formerly GMT).\"\n\n  desc  \"If time stamps are not consistently applied and there is no common\n  time reference, it is difficult to perform forensic analysis.\n\n  Time stamps generated by Couchbase must include date and time. Time is\n  commonly expressed in Coordinated Universal Time (UTC), a modern continuation\n  of Greenwich Mean Time (GMT), or local time with an offset from UTC.\n\n  Some Couchbase products offer a data type called TIMESTAMP that is not a\n  representation of date and time. Rather, it is a database state counter and\n  does not correspond to calendar and clock time. This requirement does not refer\n  to that meaning of TIMESTAMP.\"\n\n  desc  \"check\", \"\n  Once enabled on the cluster, Couchbase auditing provides the following\n  fields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\n        format) and \\\"user\\\" fields\n  Note that different event-types generate different field-subsets. Below are\n  some of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n  Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\n      var/lib/couchbase/logs directory of the Couchbase application home (example:\n      /opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      \n      Review the audit.log file. If it does not exist or not populated with\n      data captured, this is a finding.\n      Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\n      following command:\n         $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n        <Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n      \\\"true\\\", this is finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to enable the use of\n  system clocks to generate time stamps for audit records in UTC time and ISO\n  8601 format.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\"\n        \n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000374-DB-000322\"\n  tag \"gid\": \"V-58063\"\n  tag \"rid\": \"SV-72493r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000374-DB-000322\"\n  tag \"fix_id\": \"F-63271r1_fix\"\n  tag \"cci\": [\"CCI-001890\"]\n  tag \"nist\": [\"AU-8 b\", \"Rev_4\"]\n  \n  describe \"Create the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password @dminP@asswd2020 --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain record of user creation. The\" do\n    subject { command(\"grep 'jdoe' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"timestamp\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58063.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Create the jdoe user. The exit_status is expected to eq 0","run_time":0.106218,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"failed","code_desc":"The logged event should contain record of user creation. The stdout is expected to match /\"timestamp\"/","run_time":0.021738,"start_time":"2020-09-28T22:09:07-04:00","message":"expected \"\" to match /\"timestamp\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"timestamp\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.106534,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-32412","title":"Database objects (including but not limited to tables, indexes,\nstorage, stored procedures, functions, triggers, links to software external to\nCouchbase, etc.) must be owned by database/Couchbase principals authorized for\nownership.","desc":"Within the database, object ownership implies full privileges to the\nowned object, including the privilege to assign access to the owned objects to\nother subjects. Database functions and procedures can be coded using definer's\nrights. This allows anyone who utilizes the object to perform the actions if\nthey were the owner. If not properly managed, this can lead to privileged\nactions being taken by unauthorized individuals.\n\n    Conversely, if critical tables or other objects rely on unauthorized owner\naccounts, these objects may be lost when an account is removed.","descriptions":[{"label":"default","data":"Within the database, object ownership implies full privileges to the\nowned object, including the privilege to assign access to the owned objects to\nother subjects. Database functions and procedures can be coded using definer's\nrights. This allows anyone who utilizes the object to perform the actions if\nthey were the owner. If not properly managed, this can lead to privileged\nactions being taken by unauthorized individuals.\n\n    Conversely, if critical tables or other objects rely on unauthorized owner\naccounts, these objects may be lost when an account is removed."},{"label":"check","data":"Review system documentation to identify accounts authorized to own database\nobjects. Review accounts that own objects in the database(s).\n    As the Full Admin, list current users and roles using the following example\ncommand:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If any database objects are found to be owned by users not authorized to\nown database objects, this is a finding."},{"label":"fix","data":"Assign ownership of authorized objects to authorized object owner accounts.\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--edit -user-groups\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000200","gid":"V-32412","rid":"SV-42749r3_rule","stig_id":"SRG-APP-000133-DB-000200","fix_id":"F-36327r3_fix","cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32412\" do\n  title \"Database objects (including but not limited to tables, indexes,\nstorage, stored procedures, functions, triggers, links to software external to\nCouchbase, etc.) must be owned by database/Couchbase principals authorized for\nownership.\"\n  desc  \"Within the database, object ownership implies full privileges to the\nowned object, including the privilege to assign access to the owned objects to\nother subjects. Database functions and procedures can be coded using definer's\nrights. This allows anyone who utilizes the object to perform the actions if\nthey were the owner. If not properly managed, this can lead to privileged\nactions being taken by unauthorized individuals.\n\n    Conversely, if critical tables or other objects rely on unauthorized owner\naccounts, these objects may be lost when an account is removed.\n  \"\n  desc  \"check\", \"\n    Review system documentation to identify accounts authorized to own database\nobjects. Review accounts that own objects in the database(s).\n    As the Full Admin, list current users and roles using the following example\ncommand:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If any database objects are found to be owned by users not authorized to\nown database objects, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Assign ownership of authorized objects to authorized object owner accounts.\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--edit -user-groups\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000200\"\n  tag \"gid\": \"V-32412\"\n  tag \"rid\": \"SV-42749r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000200\"\n  tag \"fix_id\": \"F-36327r3_fix\"\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32412.rb"},"waiver_data":{},"results":[]},{"id":"V-58181","title":"Couchbase and associated applications, when making use of dynamic code\nexecution, must scan input data for invalid values that may indicate a code\ninjection attack.","desc":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    When dynamic execution is necessary, ways to mitigate the risk include the\nfollowing, which should be implemented both in the on-screen application and at\nthe database level, in the stored procedures:\n    -- Allow strings as input only when necessary.\n    -- Rely on data typing to validate numbers, dates, etc. Do not accept\ninvalid values. If substituting other values for them, think carefully about\nwhether this could be subverted.\n    -- Limit the size of input strings to what is truly necessary.\n    -- If single quotes/apostrophes, double quotes, semicolons, equals signs,\nangle brackets, or square brackets will never be valid as input, reject them.\n    -- If comment markers will never be valid as input, reject them. In SQL,\nthese are -- or /* */\n    -- If HTML and XML tags, entities, comments, etc., will never be valid,\nreject them.\n    -- If wildcards are present, reject them unless truly necessary. In SQL\nthese are the underscore and the percentage sign, and the word ESCAPE is also a\nclue that wildcards are in use.\n    -- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER,\nDROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject\nthem. Use case-insensitive comparisons when searching for these. Bear in mind\nthat some of these words, particularly Grant (as a person's name), could also\nbe valid input.\n    -- If there are range limits on the values that may be entered, enforce\nthose limits.\n    -- Institute procedures for inspection of programs for correct use of\ndynamic coding, by a party other than the developer.\n    -- Conduct rigorous testing of program modules that use dynamic coding,\nsearching for ways to subvert the intended use.\n    -- Record the inspection and testing in the system documentation.\n    -- Bear in mind that all this applies not only to screen input, but also to\nthe values in an incoming message to a web service or to a stored procedure\ncalled by a software component that has not itself been hardened in these ways.\nNot only can the caller be subject to such vulnerabilities; it may itself be\nthe attacker.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    When dynamic execution is necessary, ways to mitigate the risk include the\nfollowing, which should be implemented both in the on-screen application and at\nthe database level, in the stored procedures:\n    -- Allow strings as input only when necessary.\n    -- Rely on data typing to validate numbers, dates, etc. Do not accept\ninvalid values. If substituting other values for them, think carefully about\nwhether this could be subverted.\n    -- Limit the size of input strings to what is truly necessary.\n    -- If single quotes/apostrophes, double quotes, semicolons, equals signs,\nangle brackets, or square brackets will never be valid as input, reject them.\n    -- If comment markers will never be valid as input, reject them. In SQL,\nthese are -- or /* */\n    -- If HTML and XML tags, entities, comments, etc., will never be valid,\nreject them.\n    -- If wildcards are present, reject them unless truly necessary. In SQL\nthese are the underscore and the percentage sign, and the word ESCAPE is also a\nclue that wildcards are in use.\n    -- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER,\nDROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject\nthem. Use case-insensitive comparisons when searching for these. Bear in mind\nthat some of these words, particularly Grant (as a person's name), could also\nbe valid input.\n    -- If there are range limits on the values that may be entered, enforce\nthose limits.\n    -- Institute procedures for inspection of programs for correct use of\ndynamic coding, by a party other than the developer.\n    -- Conduct rigorous testing of program modules that use dynamic coding,\nsearching for ways to subvert the intended use.\n    -- Record the inspection and testing in the system documentation.\n    -- Bear in mind that all this applies not only to screen input, but also to\nthe values in an incoming message to a web service or to a stored procedure\ncalled by a software component that has not itself been hardened in these ways.\nNot only can the caller be subject to such vulnerabilities; it may itself be\nthe attacker.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review Couchbase source code (stored procedures, functions, triggers) and\napplication source code to identify cases of dynamic code execution.\n    If dynamic code execution is employed without protective measures against\ncode injection, this is a finding."},{"label":"fix","data":"Where dynamic code execution is used, modify the code to\nimplement protections against code injection."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000251-DB-000392","gid":"V-58181","rid":"SV-72611r2_rule","stig_id":"SRG-APP-000251-DB-000392","fix_id":"F-63389r1_fix","cci":["CCI-001310"],"nist":["SI-10","Rev_4"]},"code":"control \"V-58181\" do\n  title \"Couchbase and associated applications, when making use of dynamic code\nexecution, must scan input data for invalid values that may indicate a code\ninjection attack.\"\n  desc  \"With respect to database management systems, one class of threat is\nknown as SQL Injection, or more generally, code injection. It takes advantage\nof the dynamic execution capabilities of various programming languages,\nincluding dialects of SQL. In such cases, the attacker deduces the manner in\nwhich SQL statements are being processed, either from inside knowledge or by\nobserving system behavior in response to invalid inputs. When the attacker\nidentifies scenarios where SQL queries are being assembled by application code\n(which may be within the database or separate from it) and executed\ndynamically, the attacker is then able to craft input strings that subvert the\nintent of the query. Potentially, the attacker can gain unauthorized access to\ndata, including security settings, and severely corrupt or destroy the database.\n\n    The principal protection against code injection is not to use dynamic\nexecution except where it provides necessary functionality that cannot be\nutilized otherwise. Use strongly typed data items rather than general-purpose\nstrings as input parameters to task-specific, pre-compiled stored procedures\nand functions (and triggers).\n\n    When dynamic execution is necessary, ways to mitigate the risk include the\nfollowing, which should be implemented both in the on-screen application and at\nthe database level, in the stored procedures:\n    -- Allow strings as input only when necessary.\n    -- Rely on data typing to validate numbers, dates, etc. Do not accept\ninvalid values. If substituting other values for them, think carefully about\nwhether this could be subverted.\n    -- Limit the size of input strings to what is truly necessary.\n    -- If single quotes/apostrophes, double quotes, semicolons, equals signs,\nangle brackets, or square brackets will never be valid as input, reject them.\n    -- If comment markers will never be valid as input, reject them. In SQL,\nthese are -- or /* */\n    -- If HTML and XML tags, entities, comments, etc., will never be valid,\nreject them.\n    -- If wildcards are present, reject them unless truly necessary. In SQL\nthese are the underscore and the percentage sign, and the word ESCAPE is also a\nclue that wildcards are in use.\n    -- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER,\nDROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject\nthem. Use case-insensitive comparisons when searching for these. Bear in mind\nthat some of these words, particularly Grant (as a person's name), could also\nbe valid input.\n    -- If there are range limits on the values that may be entered, enforce\nthose limits.\n    -- Institute procedures for inspection of programs for correct use of\ndynamic coding, by a party other than the developer.\n    -- Conduct rigorous testing of program modules that use dynamic coding,\nsearching for ways to subvert the intended use.\n    -- Record the inspection and testing in the system documentation.\n    -- Bear in mind that all this applies not only to screen input, but also to\nthe values in an incoming message to a web service or to a stored procedure\ncalled by a software component that has not itself been hardened in these ways.\nNot only can the caller be subject to such vulnerabilities; it may itself be\nthe attacker.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Review Couchbase source code (stored procedures, functions, triggers) and\napplication source code to identify cases of dynamic code execution.\n    If dynamic code execution is employed without protective measures against\ncode injection, this is a finding.\n  \"\n  desc  \"fix\", \"Where dynamic code execution is used, modify the code to\nimplement protections against code injection.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000251-DB-000392\"\n  tag \"gid\": \"V-58181\"\n  tag \"rid\": \"SV-72611r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000251-DB-000392\"\n  tag \"fix_id\": \"F-63389r1_fix\"\n  tag \"cci\": [\"CCI-001310\"]\n  tag \"nist\": [\"SI-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58181.rb"},"waiver_data":{},"results":[]},{"id":"V-58057","title":"Couchbase must provide a warning to appropriate support staff when\n  allocated audit record storage volume reaches 75% of maximum audit record\n  storage capacity.","desc":"Organizations are required to use a central log management system, so,\n  under normal conditions, the audit space allocated to Couchbase on its own\n  server will not be an issue. However, space will still be required on Couchbase\n  server for audit records in transit, and, under abnormal conditions, this could\n  fill up. Since a requirement exists to halt processing upon audit failure, a\n  service outage would result.\n\n  If support personnel are not notified immediately upon storage volume\n  utilization reaching 75%, they are unable to plan for storage capacity\n  expansion.\n\n  The appropriate support staff include, at a minimum, the ISSO and the\n  DBA/SA.","descriptions":[{"label":"default","data":"Organizations are required to use a central log management system, so,\n  under normal conditions, the audit space allocated to Couchbase on its own\n  server will not be an issue. However, space will still be required on Couchbase\n  server for audit records in transit, and, under abnormal conditions, this could\n  fill up. Since a requirement exists to halt processing upon audit failure, a\n  service outage would result.\n\n  If support personnel are not notified immediately upon storage volume\n  utilization reaching 75%, they are unable to plan for storage capacity\n  expansion.\n\n  The appropriate support staff include, at a minimum, the ISSO and the\n  DBA/SA."},{"label":"check","data":"Review system configuration.\n\nIf no script/tool is monitoring the partition for the Couchbase log\ndirectories, this is a finding.\nIf appropriate support staff are not notified immediately upon storage\nvolume utilization reaching 75%, this is a finding."},{"label":"fix","data":"Configure Couchbase to notify appropriate support staff\n  immediately upon storage volume utilization reaching 75%."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000359-DB-000319","gid":"V-58057","rid":"SV-72487r1_rule","stig_id":"SRG-APP-000359-DB-000319","fix_id":"F-63265r1_fix","cci":["CCI-001855"],"nist":["AU-5 (1)","Rev_4"]},"code":"control \"V-58057\" do\n  title \"Couchbase must provide a warning to appropriate support staff when\n  allocated audit record storage volume reaches 75% of maximum audit record\n  storage capacity.\"\n  desc  \"Organizations are required to use a central log management system, so,\n  under normal conditions, the audit space allocated to Couchbase on its own\n  server will not be an issue. However, space will still be required on Couchbase\n  server for audit records in transit, and, under abnormal conditions, this could\n  fill up. Since a requirement exists to halt processing upon audit failure, a\n  service outage would result.\n\n  If support personnel are not notified immediately upon storage volume\n  utilization reaching 75%, they are unable to plan for storage capacity\n  expansion.\n\n  The appropriate support staff include, at a minimum, the ISSO and the\n  DBA/SA.\n  \"\n  desc  \"check\", \"\n  Review system configuration.\n  \n  If no script/tool is monitoring the partition for the Couchbase log\n  directories, this is a finding.\n  If appropriate support staff are not notified immediately upon storage\n  volume utilization reaching 75%, this is a finding.\n  \"\n  desc  \"fix\", \"Configure Couchbase to notify appropriate support staff\n  immediately upon storage volume utilization reaching 75%.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000359-DB-000319\"\n  tag \"gid\": \"V-58057\"\n  tag \"rid\": \"SV-72487r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000359-DB-000319\"\n  tag \"fix_id\": \"F-63265r1_fix\"\n  tag \"cci\": [\"CCI-001855\"]\n  tag \"nist\": [\"AU-5 (1)\", \"Rev_4\"]\n  \n  describe \"This test requires a Manual Review: Review system configuration for a script/tool to monitor the partition for the Couchbase log\n  directories.\" do\n    skip \"This test requires a Manual Review: Review system configuration for a script/tool to monitor the partition for the Couchbase log\n    directories.\"  \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58057.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review system configuration for a script/tool to monitor the partition for the Couchbase log\n  directories.","run_time":3.0e-06,"start_time":"2020-09-28T22:09:07-04:00","resource":"","skip_message":"This test requires a Manual Review: Review system configuration for a script/tool to monitor the partition for the Couchbase log\n    directories."}]},{"id":"V-58117","title":"Couchbase must generate audit records when unsuccessful attempts to\nexecute privileged activities or other system-level access occur.","desc":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing configuration includes\ncertain privilege events by default. The Full Admin can specify functionality\nthat should be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to configure required\nfunctionality to be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000504-DB-000355","gid":"V-58117","rid":"SV-72547r1_rule","stig_id":"SRG-APP-000504-DB-000355","fix_id":"F-63325r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58117\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\nexecute privileged activities or other system-level access occur.\"\n  desc  \"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing configuration includes\ncertain privilege events by default. The Full Admin can specify functionality\nthat should be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to configure required\nfunctionality to be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000504-DB-000355\"\n  tag \"gid\": \"V-58117\"\n  tag \"rid\": \"SV-72547r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000504-DB-000355\"\n  tag \"fix_id\": \"F-63325r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58117.rb"},"waiver_data":{},"results":[]},{"id":"V-32426","title":"Unused database components that are integrated in Couchbase and cannot\nbe uninstalled must be disabled.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    Unused, unnecessary Couchbase components increase the attack vector for\nCouchbase by introducing additional targets for attack. By minimizing the\nservices and applications installed on the system, the number of potential\nvulnerabilities is reduced. Components of the system that are unused and cannot\nbe uninstalled must be disabled. The techniques available for disabling\ncomponents will vary by Couchbase product, OS, and the nature of the component\nand may include Couchbase configuration settings, OS service settings, OS file\naccess security, and Couchbase user/role permissions.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    Unused, unnecessary Couchbase components increase the attack vector for\nCouchbase by introducing additional targets for attack. By minimizing the\nservices and applications installed on the system, the number of potential\nvulnerabilities is reduced. Components of the system that are unused and cannot\nbe uninstalled must be disabled. The techniques available for disabling\ncomponents will vary by Couchbase product, OS, and the nature of the component\nand may include Couchbase configuration settings, OS service settings, OS file\naccess security, and Couchbase user/role permissions."},{"label":"check","data":"To list all installed packages, as the system administrator, run the\nfollowing:\n    # RHEL/CENT Systems\n    $ yum list installed | grep couchbase\n    # Debian Systems\n    $ dpkg --get-selections | grep couchbase\n    If any packages are installed that are not required, this is a finding."},{"label":"fix","data":"To remove any unneeded executables, as the system administrator, run the\nfollowing:\n    # RHEL/CENT Systems\n    $ yum remove <package_name>\n    # Debian Systems\n    $ apt-get remove <package_name>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000092","gid":"V-32426","rid":"SV-42763r4_rule","stig_id":"SRG-APP-000141-DB-000092","fix_id":"F-36340r3_fix","cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32426\" do\n  title \"Unused database components that are integrated in Couchbase and cannot\nbe uninstalled must be disabled.\"\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    Unused, unnecessary Couchbase components increase the attack vector for\nCouchbase by introducing additional targets for attack. By minimizing the\nservices and applications installed on the system, the number of potential\nvulnerabilities is reduced. Components of the system that are unused and cannot\nbe uninstalled must be disabled. The techniques available for disabling\ncomponents will vary by Couchbase product, OS, and the nature of the component\nand may include Couchbase configuration settings, OS service settings, OS file\naccess security, and Couchbase user/role permissions.\n  \"\n  desc  \"check\", \"\n    To list all installed packages, as the system administrator, run the\nfollowing:\n    # RHEL/CENT Systems\n    $ yum list installed | grep couchbase\n    # Debian Systems\n    $ dpkg --get-selections | grep couchbase\n    If any packages are installed that are not required, this is a finding.\n  \"\n  desc  \"fix\", \"\n    To remove any unneeded executables, as the system administrator, run the\nfollowing:\n    # RHEL/CENT Systems\n    $ yum remove <package_name>\n    # Debian Systems\n    $ apt-get remove <package_name>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000092\"\n  tag \"gid\": \"V-32426\"\n  tag \"rid\": \"SV-42763r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000092\"\n  tag \"fix_id\": \"F-36340r3_fix\"\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32426.rb"},"waiver_data":{},"results":[]},{"id":"V-58077","title":"Couchbase must generate audit records when unsuccessful attempts to\n  modify privileges/permissions occur.","desc":"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, modifying permissions is typically done via the\n  GRANT, REVOKE, and DENY commands.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, modifying permissions is typically done via the\n  GRANT, REVOKE, and DENY commands.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"If there is no distinction in Couchbase's security architecture between\nmodifying permissions on the one hand, and adding and deleting permissions on\nthe other hand, this is not a finding.\n    Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n    First, as the Full Admin, create two user accounts by executing the\n    following commands:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n      -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n      --rbac-name \"John Doe\" --roles replication_admin \\\n      --auth-domain local\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n      -p <Password> --set --rbac-username janedoe --rbac-password cbpass \\\n      --rbac-name \"Jane Doe\" --roles replication_admin \\\n      --auth-domain local\n    Then, as the John Doe user, grant the Jane Doe a new role:\n      $ cbq -u jdoe -p cbpass -engine=http://<host>:<port>/ --script=\"GRANT\n      cluster_admin TO janedoe\"\n    Verify the events were logged with the following command:\n    $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:\n      {\"description\":\"A N1QL GRANT ROLE statement was executed\",\"id\n      \":28685,\"isAdHoc\":true,\"metrics\":{\"elapsedTime\":\"476.925\n      µs\",\"errorCount\":1,\"executionTime\":\"388.584µs\",\n      \"resultCount\":0,\"resultSize\":0},\"name\":\"GRANT ROLE statement\",\n      \"node\":\"127.0.0.1:8091\",\"real_use\"rid\"\":{\"domain\":\"local\",\n      \"user\":\"jdoe\"},\"remote\":{\"ip\":\"127.0.0.1\",\"port\":39960},\"\n      requestId\":\"1e51a528-6108-44cd-a387-076502e61728\",\"statement\":\"GRANT\n      cluster_admin TO janedoe;\",\"status\":\"fatal\",\"timestamp\":\n      \"2020-08-21T17:23:55.427Z\",\"userAgent\":\"Go-http-client/1.1 (CBQ/2.0)\"}\n  If the above steps cannot verify that audit records are produced when\n  privileges/permissions/role memberships are unsuccessfully added, this is a\n  finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are unsuccessfully modified.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Enable the required set of auditable events by doing the following:\n    As the Full Admin, log into the cluster and use  the following\n    documentation to enable all on the \"Query and Index Services Event:\n    - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000329","gid":"V-58077","rid":"SV-72507r2_rule","stig_id":"SRG-APP-000495-DB-000329","fix_id":"F-63285r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58077\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\n  modify privileges/permissions occur.\"\n  desc  \"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, modifying permissions is typically done via the\n  GRANT, REVOKE, and DENY commands.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\"\n\n  desc  \"check\", \"\n  If there is no distinction in Couchbase's security architecture between\n  modifying permissions on the one hand, and adding and deleting permissions on\n  the other hand, this is not a finding.\n      Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n      First, as the Full Admin, create two user accounts by executing the\n      following commands:\n        $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n        -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n        --rbac-name \\\"John Doe\\\" --roles replication_admin \\\\\n        --auth-domain local\n        $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n        -p <Password> --set --rbac-username janedoe --rbac-password cbpass \\\\\n        --rbac-name \\\"Jane Doe\\\" --roles replication_admin \\\\\n        --auth-domain local\n      Then, as the John Doe user, grant the Jane Doe a new role:\n        $ cbq -u jdoe -p cbpass -engine=http://<host>:<port>/ --script=\\\"GRANT\n        cluster_admin TO janedoe\\\"\n      Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n        Output:\n        {\\\"description\\\":\\\"A N1QL GRANT ROLE statement was executed\\\",\\\"id\n        \\\":28685,\\\"isAdHoc\\\":true,\\\"metrics\\\":{\\\"elapsedTime\\\":\\\"476.925\n        \\xC2\\xB5s\\\",\\\"errorCount\\\":1,\\\"executionTime\\\":\\\"388.584\\xC2\\xB5s\\\",\n        \\\"resultCount\\\":0,\\\"resultSize\\\":0},\\\"name\\\":\\\"GRANT ROLE statement\\\",\n        \\\"node\\\":\\\"127.0.0.1:8091\\\",\\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\n        \\\"user\\\":\\\"jdoe\\\"},\\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":39960},\\\"\n        requestId\\\":\\\"1e51a528-6108-44cd-a387-076502e61728\\\",\\\"statement\\\":\\\"GRANT\n        cluster_admin TO janedoe;\\\",\\\"status\\\":\\\"fatal\\\",\\\"timestamp\\\":\n        \\\"2020-08-21T17:23:55.427Z\\\",\\\"userAgent\\\":\\\"Go-http-client/1.1 (CBQ/2.0)\\\"}\n    If the above steps cannot verify that audit records are produced when\n    privileges/permissions/role memberships are unsuccessfully added, this is a\n    finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when privileges/permissions are unsuccessfully modified.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable the required set of auditable events by doing the following:\n      As the Full Admin, log into the cluster and use  the following\n      documentation to enable all on the \\\"Query and Index Services Event:\n      - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\"\n\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000329\"\n  tag \"gid\": \"V-58077\"\n  tag \"rid\": \"SV-72507r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000329\"\n  tag \"fix_id\": \"F-63285r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Add the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Add the janedoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username janedoe --rbac-password cbpass --rbac-name 'Jane Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Grant permissions to janedoe user by jdoe. The\" do \n    subject { command(\"cbq -u jdoe -p cbpass --engine=http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}\\\n    --script='GRANT cluster_admin TO janedoe'\")}\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'A N1QL GRANT ROLE' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"fatal\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username janedoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58077.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Add the jdoe user. The exit_status is expected to eq 0","run_time":0.100296,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Add the janedoe user. The exit_status is expected to eq 0","run_time":0.100785,"start_time":"2020-09-28T22:09:07-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"passed","code_desc":"Grant permissions to janedoe user by jdoe. The exit_status is expected to eq 0","run_time":0.023209,"start_time":"2020-09-28T22:09:08-04:00"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"fatal\"/","run_time":0.021164,"start_time":"2020-09-28T22:09:08-04:00","message":"expected \"\" to match /\"fatal\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"fatal\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.104748,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.115165,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58137","title":"Couchbase must prohibit the use of cached authenticators after an\norganization-defined time period.","desc":"If cached authentication information is out-of-date, the validity of\nthe authentication information may be questionable.","descriptions":[{"label":"default","data":"If cached authentication information is out-of-date, the validity of\nthe authentication information may be questionable."},{"label":"check","data":"Review system settings to determine whether the organization-defined limit\nfor cached authentication is implemented.\n    If Couchbase is configured to authenticate using LDAP verify that the\n\"cache-value-lifetime\" value is set to an organization-defined time period.\n    As the Full Admin, get the current settings with the following command:\n    $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>:settings/ldap\n    If cache-value-lifetime is not set, this is a finding."},{"label":"fix","data":"Modify system settings to implement the organization-defined limit on the\nlifetime of cached authenticators.\n    $ couchbase-cli setting-ldap -c <host>:<port>-u <Full Admin> -p <Password>\n--cache-value-lifetime <ms>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000400-DB-000367","gid":"V-58137","rid":"SV-72567r1_rule","stig_id":"SRG-APP-000400-DB-000367","fix_id":"F-63345r1_fix","cci":["CCI-002007"],"nist":["IA-5 (13)","Rev_4"]},"code":"control \"V-58137\" do\n  title \"Couchbase must prohibit the use of cached authenticators after an\norganization-defined time period.\"\n  desc  \"If cached authentication information is out-of-date, the validity of\nthe authentication information may be questionable.\"\n  desc  \"check\", \"\n    Review system settings to determine whether the organization-defined limit\nfor cached authentication is implemented.\n    If Couchbase is configured to authenticate using LDAP verify that the\n\\\"cache-value-lifetime\\\" value is set to an organization-defined time period.\n    As the Full Admin, get the current settings with the following command:\n    $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>:settings/ldap\n    If cache-value-lifetime is not set, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Modify system settings to implement the organization-defined limit on the\nlifetime of cached authenticators.\n    $ couchbase-cli setting-ldap -c <host>:<port>-u <Full Admin> -p <Password>\n--cache-value-lifetime <ms>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000400-DB-000367\"\n  tag \"gid\": \"V-58137\"\n  tag \"rid\": \"SV-72567r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000400-DB-000367\"\n  tag \"fix_id\": \"F-63345r1_fix\"\n  tag \"cci\": [\"CCI-002007\"]\n  tag \"nist\": [\"IA-5 (13)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58137.rb"},"waiver_data":{},"results":[]},{"id":"V-32523","title":"Couchbase must invalidate session identifiers upon user logout or\nother session termination.","desc":"Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries to capture and continue to employ\npreviously valid session IDs.\n\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Session IDs are tokens generated by Couchbases to uniquely identify a\nuser's (or process's) session. Couchbases will make access decisions and\nexecute logic based on the session ID.\n\n    Unique session IDs help to reduce predictability of said identifiers.\nUnique session IDs address man-in-the-middle attacks, including session\nhijacking or insertion of false information into a session. If the attacker is\nunable to identify or guess the session information related to pending\napplication traffic, they will have more difficulty in hijacking the session or\notherwise manipulating valid sessions.\n\n    When a user logs out, or when any other session termination event occurs,\nCouchbase must terminate the user session(s) to minimize the potential for\nsessions to be hijacked.","descriptions":[{"label":"default","data":"Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries to capture and continue to employ\npreviously valid session IDs.\n\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Session IDs are tokens generated by Couchbases to uniquely identify a\nuser's (or process's) session. Couchbases will make access decisions and\nexecute logic based on the session ID.\n\n    Unique session IDs help to reduce predictability of said identifiers.\nUnique session IDs address man-in-the-middle attacks, including session\nhijacking or insertion of false information into a session. If the attacker is\nunable to identify or guess the session information related to pending\napplication traffic, they will have more difficulty in hijacking the session or\notherwise manipulating valid sessions.\n\n    When a user logs out, or when any other session termination event occurs,\nCouchbase must terminate the user session(s) to minimize the potential for\nsessions to be hijacked."},{"label":"check","data":"Review Couchbase settings and vendor documentation to verify user sessions\nare terminated, and session identifiers invalidated, upon user logout. If they\nare not, this is a finding.\n    Review system documentation and organization policy to identify other\nevents that should result in session terminations.\n    If other session termination events are defined, review Couchbase settings\nto verify occurrences of these events would cause session termination,\ninvalidating the session identifiers.\n    As the Full Admin, get the current security settings with the following\ncommand:\n    $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security\n    Review the output of the command. If uiSessionTimeout does not have a\nvalue, this is a finding."},{"label":"fix","data":"Configure Couchbase settings to terminate sessions, invalidating their\nsession identifiers, upon the occurrence of any organization- or policy-defined\nsession termination event.\n    As the Full Admin, configure session timeout:\n    $ curl -X POST -u  <Full Admin>:<Password>\\\nhttp://<host>:<port>/settings/security \\ -d \"uiSessionTimeout=600\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000220-DB-000149","gid":"V-32523","rid":"SV-42860r2_rule","stig_id":"SRG-APP-000220-DB-000149","fix_id":"F-36438r2_fix","cci":["CCI-001185"],"nist":["SC-23 (1)","Rev_4"]},"code":"control \"V-32523\" do\n  title \"Couchbase must invalidate session identifiers upon user logout or\nother session termination.\"\n  desc  \"Captured sessions can be reused in \\\"replay\\\" attacks. This\nrequirement limits the ability of adversaries to capture and continue to employ\npreviously valid session IDs.\n\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Session IDs are tokens generated by Couchbases to uniquely identify a\nuser's (or process's) session. Couchbases will make access decisions and\nexecute logic based on the session ID.\n\n    Unique session IDs help to reduce predictability of said identifiers.\nUnique session IDs address man-in-the-middle attacks, including session\nhijacking or insertion of false information into a session. If the attacker is\nunable to identify or guess the session information related to pending\napplication traffic, they will have more difficulty in hijacking the session or\notherwise manipulating valid sessions.\n\n    When a user logs out, or when any other session termination event occurs,\nCouchbase must terminate the user session(s) to minimize the potential for\nsessions to be hijacked.\n  \"\n  desc  \"check\", \"\n    Review Couchbase settings and vendor documentation to verify user sessions\nare terminated, and session identifiers invalidated, upon user logout. If they\nare not, this is a finding.\n    Review system documentation and organization policy to identify other\nevents that should result in session terminations.\n    If other session termination events are defined, review Couchbase settings\nto verify occurrences of these events would cause session termination,\ninvalidating the session identifiers.\n    As the Full Admin, get the current security settings with the following\ncommand:\n    $ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security\n    Review the output of the command. If uiSessionTimeout does not have a\nvalue, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase settings to terminate sessions, invalidating their\nsession identifiers, upon the occurrence of any organization- or policy-defined\nsession termination event.\n    As the Full Admin, configure session timeout:\n    $ curl -X POST -u  <Full Admin>:<Password>\\\\\nhttp://<host>:<port>/settings/security \\\\ -d \\\"uiSessionTimeout=600\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000220-DB-000149\"\n  tag \"gid\": \"V-32523\"\n  tag \"rid\": \"SV-42860r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000220-DB-000149\"\n  tag \"fix_id\": \"F-36438r2_fix\"\n  tag \"cci\": [\"CCI-001185\"]\n  tag \"nist\": [\"SC-23 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32523.rb"},"waiver_data":{},"results":[]},{"id":"V-58103","title":"Couchbase must generate audit records when categories of information\n(e.g., classification levels/security levels) are deleted.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000502-DB-000348","gid":"V-58103","rid":"SV-72533r1_rule","stig_id":"SRG-APP-000502-DB-000348","fix_id":"F-63311r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58103\" do\n  title \"Couchbase must generate audit records when categories of information\n(e.g., classification levels/security levels) are deleted.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000502-DB-000348\"\n  tag \"gid\": \"V-58103\"\n  tag \"rid\": \"SV-72533r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000502-DB-000348\"\n  tag \"fix_id\": \"F-63311r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58103.rb"},"waiver_data":{},"results":[]},{"id":"V-58053","title":"Couchbase must allocate audit record storage capacity in accordance\nwith organization-defined audit record storage requirements.","desc":"In order to ensure sufficient storage capacity for the audit logs,\nCouchbase must be able to allocate audit record storage capacity. Although\nanother requirement (SRG-APP-000515-DB-000318) mandates that audit data be\noff-loaded to a centralized log management system, it remains necessary to\nprovide space on the database server to serve as a buffer against outages and\ncapacity limits of the off-loading mechanism.\n\n    The task of allocating audit record storage capacity is usually performed\nduring initial installation of Couchbase and is closely associated with the DBA\nand system administrator roles. The DBA or system administrator will usually\ncoordinate the allocation of physical drive space with the application\nowner/installer and the application will prompt the installer to provide the\ncapacity information, the physical location of the disk, or both.\n\n    In determining the capacity requirements, consider such factors as: total\nnumber of users; expected number of concurrent users during busy periods;\nnumber and type of events being monitored; types and amounts of data being\ncaptured; the frequency/speed with which audit records are off-loaded to the\ncentral log management system; and any limitations that exist on Couchbase's\nability to reuse the space formerly occupied by off-loaded records.","descriptions":[{"label":"default","data":"In order to ensure sufficient storage capacity for the audit logs,\nCouchbase must be able to allocate audit record storage capacity. Although\nanother requirement (SRG-APP-000515-DB-000318) mandates that audit data be\noff-loaded to a centralized log management system, it remains necessary to\nprovide space on the database server to serve as a buffer against outages and\ncapacity limits of the off-loading mechanism.\n\n    The task of allocating audit record storage capacity is usually performed\nduring initial installation of Couchbase and is closely associated with the DBA\nand system administrator roles. The DBA or system administrator will usually\ncoordinate the allocation of physical drive space with the application\nowner/installer and the application will prompt the installer to provide the\ncapacity information, the physical location of the disk, or both.\n\n    In determining the capacity requirements, consider such factors as: total\nnumber of users; expected number of concurrent users during busy periods;\nnumber and type of events being monitored; types and amounts of data being\ncaptured; the frequency/speed with which audit records are off-loaded to the\ncentral log management system; and any limitations that exist on Couchbase's\nability to reuse the space formerly occupied by off-loaded records."},{"label":"check","data":"Investigate whether there have been any incidents where Couchbase ran out\nof audit log space since the last time the space was allocated or other\ncorrective measures were taken.\n    If there have been, this is a finding.\n    Review the Couchbase audit settings:\n    $ couchbase-cli setting-audit -c <host>:<port> --u <Full Admin> --p\n<Password> --get-settings\n    If audit-log-rotate-size is not greater than 0, this is a finding"},{"label":"fix","data":"Allocate sufficient audit file/table space to support peak demand.\n    Configure Couchbase to rotate the log files based on organization defined\nstandards:\n    $ couchbase-cli setting-audit -c <host>:<port> --u  <Full Admin> --p\n<Password> --enabled 1 --audit-log-rotate-size <Size>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000357-DB-000316","gid":"V-58053","rid":"SV-72483r1_rule","stig_id":"SRG-APP-000357-DB-000316","fix_id":"F-63261r1_fix","cci":["CCI-001849"],"nist":["AU-4","Rev_4"]},"code":"control \"V-58053\" do\n  title \"Couchbase must allocate audit record storage capacity in accordance\nwith organization-defined audit record storage requirements.\"\n  desc  \"In order to ensure sufficient storage capacity for the audit logs,\nCouchbase must be able to allocate audit record storage capacity. Although\nanother requirement (SRG-APP-000515-DB-000318) mandates that audit data be\noff-loaded to a centralized log management system, it remains necessary to\nprovide space on the database server to serve as a buffer against outages and\ncapacity limits of the off-loading mechanism.\n\n    The task of allocating audit record storage capacity is usually performed\nduring initial installation of Couchbase and is closely associated with the DBA\nand system administrator roles. The DBA or system administrator will usually\ncoordinate the allocation of physical drive space with the application\nowner/installer and the application will prompt the installer to provide the\ncapacity information, the physical location of the disk, or both.\n\n    In determining the capacity requirements, consider such factors as: total\nnumber of users; expected number of concurrent users during busy periods;\nnumber and type of events being monitored; types and amounts of data being\ncaptured; the frequency/speed with which audit records are off-loaded to the\ncentral log management system; and any limitations that exist on Couchbase's\nability to reuse the space formerly occupied by off-loaded records.\n  \"\n  desc  \"check\", \"\n    Investigate whether there have been any incidents where Couchbase ran out\nof audit log space since the last time the space was allocated or other\ncorrective measures were taken.\n    If there have been, this is a finding.\n    Review the Couchbase audit settings:\n    $ couchbase-cli setting-audit -c <host>:<port> --u <Full Admin> --p\n<Password> --get-settings\n    If audit-log-rotate-size is not greater than 0, this is a finding\n  \"\n  desc  \"fix\", \"\n    Allocate sufficient audit file/table space to support peak demand.\n    Configure Couchbase to rotate the log files based on organization defined\nstandards:\n    $ couchbase-cli setting-audit -c <host>:<port> --u  <Full Admin> --p\n<Password> --enabled 1 --audit-log-rotate-size <Size>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000357-DB-000316\"\n  tag \"gid\": \"V-58053\"\n  tag \"rid\": \"SV-72483r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000357-DB-000316\"\n  tag \"fix_id\": \"F-63261r1_fix\"\n  tag \"cci\": [\"CCI-001849\"]\n  tag \"nist\": [\"AU-4\", \"Rev_4\"]\n\n  describe command(\"couchbase-cli setting-audit -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} --cluster #{input('cb_cluster_host')}:#{input('cb_cluster_port')} --get-settings | grep 'audit-log-rotate-size'\") do\n    its('stdout') { should be > 0 }\n    end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58053.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Command: `couchbase-cli setting-audit -u admin -p @dminP@asswd2020 --cluster localhost:8091 --get-settings | grep 'audit-log-rotate-size'` stdout is expected to be > 0","run_time":0.025834,"start_time":"2020-09-28T22:09:08-04:00","message":"expected: > 0\n     got:   \"\""}]},{"id":"V-32480","title":"Couchbase must use NIST FIPS 140-2 validated cryptographic modules for\ncryptographic operations.","desc":"Use of weak or not validated cryptographic algorithms undermines the\npurposes of utilizing encryption and digital signatures to protect data.  Weak\nalgorithms can be easily broken and not validated cryptographic modules may not\nimplement algorithms correctly. Unapproved cryptographic modules or algorithms\nshould not be relied on for authentication, confidentiality or integrity. Weak\ncryptography could allow an attacker to gain access to and modify data stored\nin the database as well as the administration settings of Couchbase.\n\n    Applications, including Couchbases, utilizing cryptography are required to\nuse approved NIST FIPS 140-2 validated cryptographic modules that meet the\nrequirements of applicable federal laws, Executive Orders, directives,\npolicies, regulations, standards, and guidance.\n\n    The security functions validated as part of FIPS 140-2 for cryptographic\nmodules are described in FIPS 140-2 Annex A.\n\n    NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\nencryption modules.","descriptions":[{"label":"default","data":"Use of weak or not validated cryptographic algorithms undermines the\npurposes of utilizing encryption and digital signatures to protect data.  Weak\nalgorithms can be easily broken and not validated cryptographic modules may not\nimplement algorithms correctly. Unapproved cryptographic modules or algorithms\nshould not be relied on for authentication, confidentiality or integrity. Weak\ncryptography could allow an attacker to gain access to and modify data stored\nin the database as well as the administration settings of Couchbase.\n\n    Applications, including Couchbases, utilizing cryptography are required to\nuse approved NIST FIPS 140-2 validated cryptographic modules that meet the\nrequirements of applicable federal laws, Executive Orders, directives,\npolicies, regulations, standards, and guidance.\n\n    The security functions validated as part of FIPS 140-2 for cryptographic\nmodules are described in FIPS 140-2 Annex A.\n\n    NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\nencryption modules."},{"label":"check","data":"As the system administrator, run the following:\n$ openssl version\nIf \"fips\" is not included in the openssl version, this is a finding."},{"label":"fix","data":"Configure OpenSSL to meet FIPS Compliance using the following documentation\nin section 9.1:\n    http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1758.pdf\n    For information on configuring Couchbase to use SSL, see the following\ndocumentationhttps://docs.couchbase.com/server/current/manage/manage-security/manage-certificates.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000179-DB-000114","gid":"V-32480","rid":"SV-42817r3_rule","stig_id":"SRG-APP-000179-DB-000114","fix_id":"F-36395r4_fix","cci":["CCI-000803"],"nist":["IA-7","Rev_4"]},"code":"control \"V-32480\" do\n  title \"Couchbase must use NIST FIPS 140-2 validated cryptographic modules for\ncryptographic operations.\"\n  desc  \"Use of weak or not validated cryptographic algorithms undermines the\npurposes of utilizing encryption and digital signatures to protect data.  Weak\nalgorithms can be easily broken and not validated cryptographic modules may not\nimplement algorithms correctly. Unapproved cryptographic modules or algorithms\nshould not be relied on for authentication, confidentiality or integrity. Weak\ncryptography could allow an attacker to gain access to and modify data stored\nin the database as well as the administration settings of Couchbase.\n\n    Applications, including Couchbases, utilizing cryptography are required to\nuse approved NIST FIPS 140-2 validated cryptographic modules that meet the\nrequirements of applicable federal laws, Executive Orders, directives,\npolicies, regulations, standards, and guidance.\n\n    The security functions validated as part of FIPS 140-2 for cryptographic\nmodules are described in FIPS 140-2 Annex A.\n\n    NSA Type-X (where X=1, 2, 3, 4) products are NSA-certified, hardware-based\nencryption modules.\n  \"\n  desc  \"check\", \"\n    As the system administrator, run the following:\n    $ openssl version\n    If \\\"fips\\\" is not included in the openssl version, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to meet FIPS Compliance using the following documentation\nin section 9.1:\n    http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1758.pdf\n    For information on configuring Couchbase to use SSL, see the following\ndocumentationhttps://docs.couchbase.com/server/current/manage/manage-security/manage-certificates.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000179-DB-000114\"\n  tag \"gid\": \"V-32480\"\n  tag \"rid\": \"SV-42817r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000179-DB-000114\"\n  tag \"fix_id\": \"F-36395r4_fix\"\n  tag \"cci\": [\"CCI-000803\"]\n  tag \"nist\": [\"IA-7\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32480.rb"},"waiver_data":{},"results":[]},{"id":"V-58113","title":"Couchbase must generate audit records when concurrent\nlogons/connections by the same user from different workstations occur.","desc":"For completeness of forensic analysis, it is necessary to track who\nlogs on to Couchbase.\n\n    Concurrent connections by the same user from multiple workstations may be\nvalid use of the system; or such connections may be due to improper\ncircumvention of the requirement to use the CAC for authentication; or they may\nindicate unauthorized account sharing; or they may be because an account has\nbeen compromised.\n\n    (If the fact of multiple, concurrent logons by a given user can be reliably\nreconstructed from the log entries for other events (logons/connections;\nvoluntary and involuntary disconnections), then it is not mandatory to create\nadditional log entries specifically for this.)","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to track who\nlogs on to Couchbase.\n\n    Concurrent connections by the same user from multiple workstations may be\nvalid use of the system; or such connections may be due to improper\ncircumvention of the requirement to use the CAC for authentication; or they may\nindicate unauthorized account sharing; or they may be because an account has\nbeen compromised.\n\n    (If the fact of multiple, concurrent logons by a given user can be reliably\nreconstructed from the log entries for other events (logons/connections;\nvoluntary and involuntary disconnections), then it is not mandatory to create\nadditional log entries specifically for this.)"},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging\nlogins and logouts with timestamps by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen logins and logouts occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000506-DB-000353","gid":"V-58113","rid":"SV-72543r1_rule","stig_id":"SRG-APP-000506-DB-000353","fix_id":"F-63321r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58113\" do\n  title \"Couchbase must generate audit records when concurrent\nlogons/connections by the same user from different workstations occur.\"\n  desc  \"For completeness of forensic analysis, it is necessary to track who\nlogs on to Couchbase.\n\n    Concurrent connections by the same user from multiple workstations may be\nvalid use of the system; or such connections may be due to improper\ncircumvention of the requirement to use the CAC for authentication; or they may\nindicate unauthorized account sharing; or they may be because an account has\nbeen compromised.\n\n    (If the fact of multiple, concurrent logons by a given user can be reliably\nreconstructed from the log entries for other events (logons/connections;\nvoluntary and involuntary disconnections), then it is not mandatory to create\nadditional log entries specifically for this.)\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging\nlogins and logouts with timestamps by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce audit records\nwhen logins and logouts occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000506-DB-000353\"\n  tag \"gid\": \"V-58113\"\n  tag \"rid\": \"SV-72543r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000506-DB-000353\"\n  tag \"fix_id\": \"F-63321r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58113.rb"},"waiver_data":{},"results":[]},{"id":"V-58127","title":"Couchbase must produce audit records of its enforcement of access\nrestrictions associated with changes to the configuration of Couchbase or\ndatabase(s).","desc":"Without auditing the enforcement of access restrictions against\nchanges to configuration, it would be difficult to identify attempted attacks\nand an audit trail would not be available for forensic investigation for\nafter-the-fact actions.\n\n    Enforcement actions are the methods or mechanisms used to prevent\nunauthorized changes to configuration settings. Enforcement action methods may\nbe as simple as denying access to a file based on the application of file\npermissions (access restriction). Audit items may consist of lists of actions\nblocked by access restrictions or changes identified after the fact.","descriptions":[{"label":"default","data":"Without auditing the enforcement of access restrictions against\nchanges to configuration, it would be difficult to identify attempted attacks\nand an audit trail would not be available for forensic investigation for\nafter-the-fact actions.\n\n    Enforcement actions are the methods or mechanisms used to prevent\nunauthorized changes to configuration settings. Enforcement action methods may\nbe as simple as denying access to a file based on the application of file\npermissions (access restriction). Audit items may consist of lists of actions\nblocked by access restrictions or changes identified after the fact."},{"label":"check","data":"Review Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to change the\nconfiguration of Couchbase or database(s).\n    If Couchbase is not capable of this, this is a finding.\n    Review Couchbase/database security and audit configurations to verify that\naudit records are produced when the system denies attempts to change the\nconfiguration of Couchbase or database(s).\n    If they are not produced, this is a finding.\n    Review Couchbase/database security and audit configurations to verify that\naudit records are produced when other errors prevent attempts to change the\nconfiguration of Couchbase or database(s).\n    If they are not produced, this is a finding."},{"label":"fix","data":"Couchbase capable of producing the required audit records when it denies or\nfails to complete attempts to change the configuration of Couchbase or\ndatabase(s).\n    Configure Couchbase to produce audit records when it denies attempts to\nchange the configuration of Couchbase or database(s).\n    Configure Couchbase to produce audit records when other errors prevent\nattempts to change the configuration of Couchbase or database(s)."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000381-DB-000361","gid":"V-58127","rid":"SV-72557r1_rule","stig_id":"SRG-APP-000381-DB-000361","fix_id":"F-63335r1_fix","cci":["CCI-001814"],"nist":["CM-5 (1)","Rev_4"]},"code":"control \"V-58127\" do\n  title \"Couchbase must produce audit records of its enforcement of access\nrestrictions associated with changes to the configuration of Couchbase or\ndatabase(s).\"\n  desc  \"Without auditing the enforcement of access restrictions against\nchanges to configuration, it would be difficult to identify attempted attacks\nand an audit trail would not be available for forensic investigation for\nafter-the-fact actions.\n\n    Enforcement actions are the methods or mechanisms used to prevent\nunauthorized changes to configuration settings. Enforcement action methods may\nbe as simple as denying access to a file based on the application of file\npermissions (access restriction). Audit items may consist of lists of actions\nblocked by access restrictions or changes identified after the fact.\n  \"\n  desc  \"check\", \"\n    Review Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to change the\nconfiguration of Couchbase or database(s).\n    If Couchbase is not capable of this, this is a finding.\n    Review Couchbase/database security and audit configurations to verify that\naudit records are produced when the system denies attempts to change the\nconfiguration of Couchbase or database(s).\n    If they are not produced, this is a finding.\n    Review Couchbase/database security and audit configurations to verify that\naudit records are produced when other errors prevent attempts to change the\nconfiguration of Couchbase or database(s).\n    If they are not produced, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Couchbase capable of producing the required audit records when it denies or\nfails to complete attempts to change the configuration of Couchbase or\ndatabase(s).\n    Configure Couchbase to produce audit records when it denies attempts to\nchange the configuration of Couchbase or database(s).\n    Configure Couchbase to produce audit records when other errors prevent\nattempts to change the configuration of Couchbase or database(s).\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000381-DB-000361\"\n  tag \"gid\": \"V-58127\"\n  tag \"rid\": \"SV-72557r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000381-DB-000361\"\n  tag \"fix_id\": \"F-63335r1_fix\"\n  tag \"cci\": [\"CCI-001814\"]\n  tag \"nist\": [\"CM-5 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58127.rb"},"waiver_data":{},"results":[]},{"id":"V-58067","title":"Couchbase must provide the means for individuals in authorized roles\n  to change the auditing to be performed on all application components, based on\n  all selectable event criteria within organization-defined time thresholds.","desc":"If authorized individuals do not have the ability to modify auditing\n  parameters in response to a changing threat environment, the organization may\n  not be able to effectively respond, and important forensic information may be\n  lost.\n\n  This requirement enables organizations to extend or limit auditing as\n  necessary to meet organizational requirements. Auditing that is limited to\n  conserve information system resources may be extended to address certain threat\n  situations. In addition, auditing may be limited to a specific set of events to\n  facilitate audit reduction, analysis, and reporting. Organizations can\n  establish time thresholds in which audit actions are changed, for example, near\n  real time, within minutes, or within hours.","descriptions":[{"label":"default","data":"If authorized individuals do not have the ability to modify auditing\n  parameters in response to a changing threat environment, the organization may\n  not be able to effectively respond, and important forensic information may be\n  lost.\n\n  This requirement enables organizations to extend or limit auditing as\n  necessary to meet organizational requirements. Auditing that is limited to\n  conserve information system resources may be extended to address certain threat\n  situations. In addition, auditing may be limited to a specific set of events to\n  facilitate audit reduction, analysis, and reporting. Organizations can\n  establish time thresholds in which audit actions are changed, for example, near\n  real time, within minutes, or within hours."},{"label":"check","data":"If Couchbase does not provide the ability for users in authorized roles to\nreconfigure auditing at any time of the user's choosing, this is a finding.\n  \nIf changes in audit configuration cannot take effect until after a certain\ntime or date, or until some event, such as a server restart, has occurred, and\nif that time or event does not meet the requirements specified by the\napplication owner, this is a finding."},{"label":"fix","data":"Deploy a Couchbase database that provides the ability for users in\nauthorized roles to reconfigure auditing at any time.\n    \nDeploy a Couchbase that allows audit configuration changes to take effect\nwithin the timeframe required by the application owner and without involving\nactions or events that the application owner rules unacceptable."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000353-DB-000324","gid":"V-58067","rid":"SV-72497r1_rule","stig_id":"SRG-APP-000353-DB-000324","fix_id":"F-63275r1_fix","cci":["CCI-001914"],"nist":["AU-12 (3)","Rev_4"]},"code":"control \"V-58067\" do\n  title \"Couchbase must provide the means for individuals in authorized roles\n  to change the auditing to be performed on all application components, based on\n  all selectable event criteria within organization-defined time thresholds.\"\n  desc  \"If authorized individuals do not have the ability to modify auditing\n  parameters in response to a changing threat environment, the organization may\n  not be able to effectively respond, and important forensic information may be\n  lost.\n\n  This requirement enables organizations to extend or limit auditing as\n  necessary to meet organizational requirements. Auditing that is limited to\n  conserve information system resources may be extended to address certain threat\n  situations. In addition, auditing may be limited to a specific set of events to\n  facilitate audit reduction, analysis, and reporting. Organizations can\n  establish time thresholds in which audit actions are changed, for example, near\n  real time, within minutes, or within hours.\n  \"\n  desc  \"check\", \"\n  If Couchbase does not provide the ability for users in authorized roles to\n  reconfigure auditing at any time of the user's choosing, this is a finding.\n    \n  If changes in audit configuration cannot take effect until after a certain\n  time or date, or until some event, such as a server restart, has occurred, and\n  if that time or event does not meet the requirements specified by the\n  application owner, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Deploy a Couchbase database that provides the ability for users in\n  authorized roles to reconfigure auditing at any time.\n      \n  Deploy a Couchbase that allows audit configuration changes to take effect\n  within the timeframe required by the application owner and without involving\n  actions or events that the application owner rules unacceptable.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000353-DB-000324\"\n  tag \"gid\": \"V-58067\"\n  tag \"rid\": \"SV-72497r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000353-DB-000324\"\n  tag \"fix_id\": \"F-63275r1_fix\"\n  tag \"cci\": [\"CCI-001914\"]\n  tag \"nist\": [\"AU-12 (3)\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review Couchbase documentation to verify if it provides the ability for users in authorized roles to\n  reconfigure auditing at any time of the user's choosing\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation to verify if it provides the ability for users in authorized roles to\n    reconfigure auditing at any time of the user's choosing\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58067.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation to verify if it provides the ability for users in authorized roles to\n  reconfigure auditing at any time of the user's choosing","run_time":4.0e-06,"start_time":"2020-09-28T22:09:08-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation to verify if it provides the ability for users in authorized roles to\n    reconfigure auditing at any time of the user's choosing"}]},{"id":"V-58085","title":"Couchbase must generate audit records when unsuccessful attempts to\n  access security objects occur.","desc":"Changes to the security configuration must be tracked.\n\n  This requirement applies to situations where security data is retrieved or\n  modified via data manipulation operations, as opposed to via specialized\n  security functionality.\n\n  In an SQL environment, types of access include, but are not necessarily\n  limited to:\n      SELECT\n      INSERT\n      UPDATE\n      DELETE\n      EXECUTE\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"Changes to the security configuration must be tracked.\n\n  This requirement applies to situations where security data is retrieved or\n  modified via data manipulation operations, as opposed to via specialized\n  security functionality.\n\n  In an SQL environment, types of access include, but are not necessarily\n  limited to:\n      SELECT\n      INSERT\n      UPDATE\n      DELETE\n      EXECUTE\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\n    \nReview Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to access security\nobjects, such as tables, views, procedures, and functions, such access to\ninclude reads, creations, modifications and deletions of data, and execution of\nlogic.   \nIf Couchbase is not capable of this, this is a finding.\n    \nReview Couchbase security and audit configurations to verify that audit\nrecords are produced when the system denies attempts to access security\nobjects, such as tables, views, procedures, and functions, such access to\ninclude reads, creations, modifications and deletions of data, and execution of\nlogic.\nIf they are not produced, this is a finding.\n    \nReview the Couchbase security and audit configurations to verify that audit\nrecords are produced when other errors prevent attempts to access security\nobject.\nIf they are not produced, this is a finding."},{"label":"fix","data":"Deploy Couchbase database capable of producing the required audit records\nwhen it denies or fails to complete access to security objects, such as tables,\nviews, procedures, and functions.\n    \nConfigure Couchbase to produce audit records when it denies access to\nsecurity objects, such as tables, views, procedures, and functions, such access\nto include reads, creations, modifications and deletions of data, and execution\nof logic.\n   \nConfigure Couchbase to produce audit records when other errors prevent\naccess to security objects, such as tables, views, procedures, and functions,\nsuch access to include reads, creations, modifications and deletions of data,\nand execution of logic."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000492-DB-000333","gid":"V-58085","rid":"SV-72515r1_rule","stig_id":"SRG-APP-000492-DB-000333","fix_id":"F-63293r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58085\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\n  access security objects occur.\"\n  desc  \"Changes to the security configuration must be tracked.\n\n  This requirement applies to situations where security data is retrieved or\n  modified via data manipulation operations, as opposed to via specialized\n  security functionality.\n\n  In an SQL environment, types of access include, but are not necessarily\n  limited to:\n      SELECT\n      INSERT\n      UPDATE\n      DELETE\n      EXECUTE\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\n  \"\n  desc  \"check\", \"\n  If the Couchbase architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its\n  built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s), this is not a finding.\n      \n  Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to access security\n  objects, such as tables, views, procedures, and functions, such access to\n  include reads, creations, modifications and deletions of data, and execution of\n  logic.   \n  If Couchbase is not capable of this, this is a finding.\n      \n  Review Couchbase security and audit configurations to verify that audit\n  records are produced when the system denies attempts to access security\n  objects, such as tables, views, procedures, and functions, such access to\n  include reads, creations, modifications and deletions of data, and execution of\n  logic.\n  If they are not produced, this is a finding.\n      \n  Review the Couchbase security and audit configurations to verify that audit\n  records are produced when other errors prevent attempts to access security\n  object.\n  If they are not produced, this is a finding.\n    \"\n  desc  \"fix\", \"\n  Deploy Couchbase database capable of producing the required audit records\n  when it denies or fails to complete access to security objects, such as tables,\n  views, procedures, and functions.\n      \n  Configure Couchbase to produce audit records when it denies access to\n  security objects, such as tables, views, procedures, and functions, such access\n  to include reads, creations, modifications and deletions of data, and execution\n  of logic.\n     \n  Configure Couchbase to produce audit records when other errors prevent\n  access to security objects, such as tables, views, procedures, and functions,\n  such access to include reads, creations, modifications and deletions of data,\n  and execution of logic.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000492-DB-000333\"\n  tag \"gid\": \"V-58085\"\n  tag \"rid\": \"SV-72515r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000492-DB-000333\"\n  tag \"fix_id\": \"F-63293r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to access security objects, such as tables, views, procedures, and functions, such access to\n  include reads, creations, modifications and deletions of data, and execution of logic.\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n    when the system denies or fails to complete attempts to access security objects, such as tables, views, procedures, and functions, such access to\n    include reads, creations, modifications and deletions of data, and execution of logic.\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58085.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to access security objects, such as tables, views, procedures, and functions, such access to\n  include reads, creations, modifications and deletions of data, and execution of logic.","run_time":3.0e-06,"start_time":"2020-09-28T22:09:08-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation to verify that audit records can be produced\n    when the system denies or fails to complete attempts to access security objects, such as tables, views, procedures, and functions, such access to\n    include reads, creations, modifications and deletions of data, and execution of logic."}]},{"id":"V-32547","title":"Database contents must be protected from unauthorized and unintended\n  information transfer by enforcement of a data-transfer policy.","desc":"Applications, including Couchbases, must prevent unauthorized and\n  unintended information transfer via shared system resources.\n\n  Data used for the development and testing of applications often involves\n  copying data from production. It is important that specific procedures exist\n  for this process, to include the conditions under which such transfer may take\n  place, where the copies may reside, and the rules for ensuring sensitive data\n  are not exposed.\n\n  Copies of sensitive data must not be misplaced or left in a temporary\n  location without the proper controls.","descriptions":[{"label":"default","data":"Applications, including Couchbases, must prevent unauthorized and\n  unintended information transfer via shared system resources.\n\n  Data used for the development and testing of applications often involves\n  copying data from production. It is important that specific procedures exist\n  for this process, to include the conditions under which such transfer may take\n  place, where the copies may reside, and the rules for ensuring sensitive data\n  are not exposed.\n\n  Copies of sensitive data must not be misplaced or left in a temporary\n  location without the proper controls."},{"label":"check","data":"Review the procedures for the refreshing of development/test data from\nproduction.\n\nReview any scripts or code that exists for the movement of production data\nto development/test systems, or to any other location or for any other purpose.\nVerify that copies of production data are not left in unprotected\nlocations.\n\nIf the code that exists for data movement does not comply with the\norganization-defined data transfer policy and/or fails to remove any copies of\nproduction data from unprotected locations, this is a finding."},{"label":"fix","data":"Modify any code used for moving data from production to\n  development/test systems to comply with the organization-defined data transfer\n  policy, and to ensure copies of production data are not left in unsecured\n  locations."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000243-DB-000128","gid":"V-32547","rid":"SV-42884r3_rule","stig_id":"SRG-APP-000243-DB-000128","fix_id":"F-36462r3_fix","cci":["CCI-001090"],"nist":["SC-4","Rev_4"]},"code":"control \"V-32547\" do\n  title \"Database contents must be protected from unauthorized and unintended\n  information transfer by enforcement of a data-transfer policy.\"\n  desc  \"Applications, including Couchbases, must prevent unauthorized and\n  unintended information transfer via shared system resources.\n\n  Data used for the development and testing of applications often involves\n  copying data from production. It is important that specific procedures exist\n  for this process, to include the conditions under which such transfer may take\n  place, where the copies may reside, and the rules for ensuring sensitive data\n  are not exposed.\n\n  Copies of sensitive data must not be misplaced or left in a temporary\n  location without the proper controls.\n  \"\n  desc  \"check\", \"\n  Review the procedures for the refreshing of development/test data from\n  production.\n\n  Review any scripts or code that exists for the movement of production data\n  to development/test systems, or to any other location or for any other purpose.\n  Verify that copies of production data are not left in unprotected\n  locations.\n\n  If the code that exists for data movement does not comply with the\n  organization-defined data transfer policy and/or fails to remove any copies of\n  production data from unprotected locations, this is a finding.\n  \"\n  desc  \"fix\", \"Modify any code used for moving data from production to\n  development/test systems to comply with the organization-defined data transfer\n  policy, and to ensure copies of production data are not left in unsecured\n  locations.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000243-DB-000128\"\n  tag \"gid\": \"V-32547\"\n  tag \"rid\": \"SV-42884r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000243-DB-000128\"\n  tag \"fix_id\": \"F-36462r3_fix\"\n  tag \"cci\": [\"CCI-001090\"]\n  tag \"nist\": [\"SC-4\", \"Rev_4\"]\n\n    describe \"This test requires a Manual Review: Review the procedures for the refreshing of development/test data from\n    production.\" do\n    skip \"This test requires a Manual Review: Review the procedures for the refreshing of development/test data from\n    production.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32547.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review the procedures for the refreshing of development/test data from\n    production.","run_time":2.0e-06,"start_time":"2020-09-28T22:09:08-04:00","resource":"","skip_message":"This test requires a Manual Review: Review the procedures for the refreshing of development/test data from\n    production."}]},{"id":"V-58167","title":"Couchbase must only accept end entity certificates issued by DoD PKI or\nDoD-approved PKI Certification Authorities (CAs) for the establishment of all\nencrypted sessions.","desc":"Only DoD-approved external PKIs have been evaluated to ensure that\nthey have security controls and identity vetting procedures in place which are\nsufficient for DoD systems to rely on the identity asserted in the certificate.\n PKIs lacking sufficient security controls and identity vetting procedures risk\nbeing compromised and issuing certificates that enable adversaries to\nimpersonate legitimate users.\n    The authoritative list of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet.","descriptions":[{"label":"default","data":"Only DoD-approved external PKIs have been evaluated to ensure that\nthey have security controls and identity vetting procedures in place which are\nsufficient for DoD systems to rely on the identity asserted in the certificate.\n PKIs lacking sufficient security controls and identity vetting procedures risk\nbeing compromised and issuing certificates that enable adversaries to\nimpersonate legitimate users.\n    The authoritative list of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet."},{"label":"check","data":"If Couchbase will accept non-DoD approved PKI end-entity\ncertificates, this is a finding."},{"label":"fix","data":"Revoke trust in any certificates not issued by a DoD-approved\ncertificate authority. Configure Couchbase to accept only DoD and DoD-approved\nPKI end-entity certificates."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000427-DB-000385","gid":"V-58167","rid":"SV-72597r1_rule","stig_id":"SRG-APP-000427-DB-000385","fix_id":"F-63375r3_fix","cci":["CCI-002470"],"nist":["SC-23 (5)","Rev_4"]},"code":"control \"V-58167\" do\n  title \"Couchbase must only accept end entity certificates issued by DoD PKI or\nDoD-approved PKI Certification Authorities (CAs) for the establishment of all\nencrypted sessions.\"\n  desc  \"Only DoD-approved external PKIs have been evaluated to ensure that\nthey have security controls and identity vetting procedures in place which are\nsufficient for DoD systems to rely on the identity asserted in the certificate.\n PKIs lacking sufficient security controls and identity vetting procedures risk\nbeing compromised and issuing certificates that enable adversaries to\nimpersonate legitimate users.\n    The authoritative list of DoD-approved PKIs is published at\nhttp://iase.disa.mil/pki-pke/interoperability.\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet.\n  \"\n  desc  \"check\", \"If Couchbase will accept non-DoD approved PKI end-entity\ncertificates, this is a finding.\"\n  desc  \"fix\", \"Revoke trust in any certificates not issued by a DoD-approved\ncertificate authority. Configure Couchbase to accept only DoD and DoD-approved\nPKI end-entity certificates.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000427-DB-000385\"\n  tag \"gid\": \"V-58167\"\n  tag \"rid\": \"SV-72597r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000427-DB-000385\"\n  tag \"fix_id\": \"F-63375r3_fix\"\n  tag \"cci\": [\"CCI-002470\"]\n  tag \"nist\": [\"SC-23 (5)\", \"Rev_4\"]\nend\n","source_location":{"line":2,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58167.rb"},"waiver_data":{},"results":[]},{"id":"V-58153","title":"Couchbase must maintain the confidentiality and integrity of\ninformation during preparation for transmission.","desc":"Information can be either unintentionally or maliciously disclosed or\nmodified during preparation for transmission, including, for example, during\naggregation, at protocol transformation points, and during packing/unpacking.\nThese unauthorized disclosures or modifications compromise the confidentiality\nor integrity of the information.\n\n    Use of this requirement will be limited to situations where the data owner\nhas a strict requirement for ensuring data integrity and confidentiality is\nmaintained at every step of the data transfer and handling process.\n\n    When transmitting data, Couchbase, associated applications, and\ninfrastructure must leverage transmission protection mechanisms.","descriptions":[{"label":"default","data":"Information can be either unintentionally or maliciously disclosed or\nmodified during preparation for transmission, including, for example, during\naggregation, at protocol transformation points, and during packing/unpacking.\nThese unauthorized disclosures or modifications compromise the confidentiality\nor integrity of the information.\n\n    Use of this requirement will be limited to situations where the data owner\nhas a strict requirement for ensuring data integrity and confidentiality is\nmaintained at every step of the data transfer and handling process.\n\n    When transmitting data, Couchbase, associated applications, and\ninfrastructure must leverage transmission protection mechanisms."},{"label":"check","data":"Review the system information/specification for information indicating a\nstrict requirement for data integrity and confidentiality when data is being\nprepared to be transmitted.\n    If the Couchbase does not employ protective measures against unauthorized\ndisclosure and modification during preparation for transmission, this is a\nfinding.\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--client-auth --extended\n    If the response does not show SSL is enabled, this is a finding."},{"label":"fix","data":"Implement protective measures against unauthorized disclosure and\nmodification during preparation for transmission.\n    Configure Couchbase to enforce SSL:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Config File>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000441-DB-000378","gid":"V-58153","rid":"SV-72583r1_rule","stig_id":"SRG-APP-000441-DB-000378","fix_id":"F-63361r1_fix","cci":["CCI-002420"],"nist":["SC-8 (2)","Rev_4"]},"code":"control \"V-58153\" do\n  title \"Couchbase must maintain the confidentiality and integrity of\ninformation during preparation for transmission.\"\n  desc  \"Information can be either unintentionally or maliciously disclosed or\nmodified during preparation for transmission, including, for example, during\naggregation, at protocol transformation points, and during packing/unpacking.\nThese unauthorized disclosures or modifications compromise the confidentiality\nor integrity of the information.\n\n    Use of this requirement will be limited to situations where the data owner\nhas a strict requirement for ensuring data integrity and confidentiality is\nmaintained at every step of the data transfer and handling process.\n\n    When transmitting data, Couchbase, associated applications, and\ninfrastructure must leverage transmission protection mechanisms.\n  \"\n  desc  \"check\", \"\n    Review the system information/specification for information indicating a\nstrict requirement for data integrity and confidentiality when data is being\nprepared to be transmitted.\n    If the Couchbase does not employ protective measures against unauthorized\ndisclosure and modification during preparation for transmission, this is a\nfinding.\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--client-auth --extended\n    If the response does not show SSL is enabled, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Implement protective measures against unauthorized disclosure and\nmodification during preparation for transmission.\n    Configure Couchbase to enforce SSL:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Config File>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000441-DB-000378\"\n  tag \"gid\": \"V-58153\"\n  tag \"rid\": \"SV-72583r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000441-DB-000378\"\n  tag \"fix_id\": \"F-63361r1_fix\"\n  tag \"cci\": [\"CCI-002420\"]\n  tag \"nist\": [\"SC-8 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58153.rb"},"waiver_data":{},"results":[]},{"id":"V-32481","title":"Couchbase must uniquely identify and authenticate non-organizational\nusers (or processes acting on behalf of non-organizational users).","desc":"Non-organizational users include all information system users other\nthan organizational users, which include organizational employees or\nindividuals the organization deems to have equivalent status of employees\n(e.g., contractors, guest researchers, individuals from allied nations).\n\n    Non-organizational users shall be uniquely identified and authenticated for\nall accesses other than those accesses explicitly identified and documented by\nthe organization when related to the use of anonymous access, such as accessing\na web server.\n\n    Accordingly, a risk assessment is used in determining the authentication\nneeds of the organization.\n\n    Scalability, practicality, and security are simultaneously considered in\nbalancing the need to ensure ease of use for access to federal information and\ninformation systems with the need to protect and adequately mitigate risk to\norganizational operations, organizational assets, individuals, other\norganizations, and the Nation.","descriptions":[{"label":"default","data":"Non-organizational users include all information system users other\nthan organizational users, which include organizational employees or\nindividuals the organization deems to have equivalent status of employees\n(e.g., contractors, guest researchers, individuals from allied nations).\n\n    Non-organizational users shall be uniquely identified and authenticated for\nall accesses other than those accesses explicitly identified and documented by\nthe organization when related to the use of anonymous access, such as accessing\na web server.\n\n    Accordingly, a risk assessment is used in determining the authentication\nneeds of the organization.\n\n    Scalability, practicality, and security are simultaneously considered in\nbalancing the need to ensure ease of use for access to federal information and\ninformation systems with the need to protect and adequately mitigate risk to\norganizational operations, organizational assets, individuals, other\norganizations, and the Nation."},{"label":"check","data":"Review Couchbase settings to determine whether non-organizational users are\nuniquely identified and authenticated when logging onto the system.\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If non-organizational users are not uniquely identified and authenticated,\nthis is a finding."},{"label":"fix","data":"Configure Couchbase settings to uniquely identify and authenticate all\nnon-organizational users who log onto the system.\n    As the Full Admin, delete a user with the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port>  --delete --rbac-username <username> --auth-domain <domain>\n    As the Full Admin, create a user with the following command:\n      $ couchbase-cli user-manage  -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --rbac-username <username> --rbac-password < user password>\n--rbac-name <name> --roles <roles>  --auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000180-DB-000115","gid":"V-32481","rid":"SV-42818r3_rule","stig_id":"SRG-APP-000180-DB-000115","fix_id":"F-36396r2_fix","cci":["CCI-000804"],"nist":["IA-8","Rev_4"]},"code":"control \"V-32481\" do\n  title \"Couchbase must uniquely identify and authenticate non-organizational\nusers (or processes acting on behalf of non-organizational users).\"\n  desc  \"Non-organizational users include all information system users other\nthan organizational users, which include organizational employees or\nindividuals the organization deems to have equivalent status of employees\n(e.g., contractors, guest researchers, individuals from allied nations).\n\n    Non-organizational users shall be uniquely identified and authenticated for\nall accesses other than those accesses explicitly identified and documented by\nthe organization when related to the use of anonymous access, such as accessing\na web server.\n\n    Accordingly, a risk assessment is used in determining the authentication\nneeds of the organization.\n\n    Scalability, practicality, and security are simultaneously considered in\nbalancing the need to ensure ease of use for access to federal information and\ninformation systems with the need to protect and adequately mitigate risk to\norganizational operations, organizational assets, individuals, other\norganizations, and the Nation.\n  \"\n  desc  \"check\", \"\n    Review Couchbase settings to determine whether non-organizational users are\nuniquely identified and authenticated when logging onto the system.\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If non-organizational users are not uniquely identified and authenticated,\nthis is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase settings to uniquely identify and authenticate all\nnon-organizational users who log onto the system.\n    As the Full Admin, delete a user with the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port>  --delete --rbac-username <username> --auth-domain <domain>\n    As the Full Admin, create a user with the following command:\n      $ couchbase-cli user-manage  -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --rbac-username <username> --rbac-password < user password>\n--rbac-name <name> --roles <roles>  --auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000180-DB-000115\"\n  tag \"gid\": \"V-32481\"\n  tag \"rid\": \"SV-42818r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000180-DB-000115\"\n  tag \"fix_id\": \"F-36396r2_fix\"\n  tag \"cci\": [\"CCI-000804\"]\n  tag \"nist\": [\"IA-8\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32481.rb"},"waiver_data":{},"results":[]},{"id":"V-32423","title":"Default demonstration and sample databases, database objects, and\napplications must be removed.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives. Examples include,\nbut are not limited to, installing advertising software, demonstrations, or\nbrowser plugins not related to requirements or providing a wide array of\nfunctionality, not required for every mission, that cannot be disabled.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    Demonstration and sample database objects and applications present publicly\nknown attack points for malicious users. These demonstration and sample objects\nare meant to provide simple examples of coding specific functions and are not\ndeveloped to prevent vulnerabilities from being introduced to Couchbase and\nhost system.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives. Examples include,\nbut are not limited to, installing advertising software, demonstrations, or\nbrowser plugins not related to requirements or providing a wide array of\nfunctionality, not required for every mission, that cannot be disabled.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    Demonstration and sample database objects and applications present publicly\nknown attack points for malicious users. These demonstration and sample objects\nare meant to provide simple examples of coding specific functions and are not\ndeveloped to prevent vulnerabilities from being introduced to Couchbase and\nhost system."},{"label":"check","data":"Review Couchbase to determine if any of the demonstration and sample\ndatabases, database applications, or files are installed in the database or are\nincluded with the Couchbase application.\n    As the Full Admin, execute the following commands to list all buckets on\nthe cluster:\n      $ couchbase-cli bucket-list -c <host>:<port> --username <Full Admin> \\\n     --password <Password>\n    If any are any sample buckets included with the Couchbase application, this\nis a finding."},{"label":"fix","data":"Remove any demonstration and sample buckets from Couchbase.\n    As the Full Admin, execute the following commands to delete sample buckets\nfrom the cluster:\n    couchbase-cli bucket-delete <host>:<port> --username <Full Admin> \\\n     --password <Password>  --bucket <name>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000090","gid":"V-32423","rid":"SV-42760r3_rule","stig_id":"SRG-APP-000141-DB-000090","fix_id":"F-36338r2_fix","cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32423\" do\n  title \"Default demonstration and sample databases, database objects, and\napplications must be removed.\"\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives. Examples include,\nbut are not limited to, installing advertising software, demonstrations, or\nbrowser plugins not related to requirements or providing a wide array of\nfunctionality, not required for every mission, that cannot be disabled.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n\n    Demonstration and sample database objects and applications present publicly\nknown attack points for malicious users. These demonstration and sample objects\nare meant to provide simple examples of coding specific functions and are not\ndeveloped to prevent vulnerabilities from being introduced to Couchbase and\nhost system.\n  \"\n  desc  \"check\", \"\n    Review Couchbase to determine if any of the demonstration and sample\ndatabases, database applications, or files are installed in the database or are\nincluded with the Couchbase application.\n    As the Full Admin, execute the following commands to list all buckets on\nthe cluster:\n      $ couchbase-cli bucket-list -c <host>:<port> --username <Full Admin> \\\\\n     --password <Password>\n    If any are any sample buckets included with the Couchbase application, this\nis a finding.\n  \"\n  desc  \"fix\", \"\n    Remove any demonstration and sample buckets from Couchbase.\n    As the Full Admin, execute the following commands to delete sample buckets\nfrom the cluster:\n    couchbase-cli bucket-delete <host>:<port> --username <Full Admin> \\\\\n     --password <Password>  --bucket <name>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000090\"\n  tag \"gid\": \"V-32423\"\n  tag \"rid\": \"SV-42760r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000090\"\n  tag \"fix_id\": \"F-36338r2_fix\"\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32423.rb"},"waiver_data":{},"results":[]},{"id":"V-58177","title":"Security-relevant software updates to Couchbase must be installed\nwithin the time period directed by an authoritative source (e.g. IAVM, CTOs,\nDTMs, and STIGs).","desc":"Security flaws with software applications, including database\nmanagement systems, are discovered daily. Vendors are constantly updating and\npatching their products to address newly discovered security vulnerabilities.\nOrganizations (including any contractor to the organization) are required to\npromptly install security-relevant software updates (e.g., patches, service\npacks, and hot fixes). Flaws discovered during security assessments, continuous\nmonitoring, incident response activities, or information system error handling\nmust also be addressed expeditiously.\n\n    Organization-defined time periods for updating security-relevant software\nmay vary based on a variety of factors including, for example, the security\ncategory of the information system or the criticality of the update (i.e.,\nseverity of the vulnerability related to the discovered flaw).\n\n    This requirement will apply to software patch management solutions that are\nused to install patches across the enclave and also to applications themselves\nthat are not part of that patch management solution. For example, many browsers\ntoday provide the capability to install their own patch software. Patch\ncriticality, as well as system criticality, will vary. Therefore, the tactical\nsituations regarding the patch management process will also vary. This means\nthat the time period utilized must be a configurable parameter. Time frames for\napplication of security-relevant software updates may be dependent upon the\nInformation Assurance Vulnerability Management (IAVM) process.\n\n    The application will be configured to check for and install\nsecurity-relevant software updates within an identified time period from the\navailability of the update. The specific time period will be defined by an\nauthoritative source (e.g. IAVM, CTOs, DTMs, and STIGs).","descriptions":[{"label":"default","data":"Security flaws with software applications, including database\nmanagement systems, are discovered daily. Vendors are constantly updating and\npatching their products to address newly discovered security vulnerabilities.\nOrganizations (including any contractor to the organization) are required to\npromptly install security-relevant software updates (e.g., patches, service\npacks, and hot fixes). Flaws discovered during security assessments, continuous\nmonitoring, incident response activities, or information system error handling\nmust also be addressed expeditiously.\n\n    Organization-defined time periods for updating security-relevant software\nmay vary based on a variety of factors including, for example, the security\ncategory of the information system or the criticality of the update (i.e.,\nseverity of the vulnerability related to the discovered flaw).\n\n    This requirement will apply to software patch management solutions that are\nused to install patches across the enclave and also to applications themselves\nthat are not part of that patch management solution. For example, many browsers\ntoday provide the capability to install their own patch software. Patch\ncriticality, as well as system criticality, will vary. Therefore, the tactical\nsituations regarding the patch management process will also vary. This means\nthat the time period utilized must be a configurable parameter. Time frames for\napplication of security-relevant software updates may be dependent upon the\nInformation Assurance Vulnerability Management (IAVM) process.\n\n    The application will be configured to check for and install\nsecurity-relevant software updates within an identified time period from the\navailability of the update. The specific time period will be defined by an\nauthoritative source (e.g. IAVM, CTOs, DTMs, and STIGs)."},{"label":"check","data":"Obtain evidence that software patches are consistently applied to Couchbase\nwithin the time frame defined for each patch.\n    To list the current version of Couchbase installed:\n    #couchbase-cli --version\n    Verify the version is the most recent available by visiting the following\nlink:\n    https://docs.couchbase.com/server/current/release-notes/relnotes.html\n    If the current Couchbase version is not the latest this is a finding."},{"label":"fix","data":"Institute and adhere to policies and procedures to ensure that patches are\nconsistently applied to Couchbase within the time allowed."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000456-DB-000390","gid":"V-58177","rid":"SV-72607r1_rule","stig_id":"SRG-APP-000456-DB-000390","fix_id":"F-63385r1_fix","cci":["CCI-002605"],"nist":["SI-2 c","Rev_4"]},"code":"control \"V-58177\" do\n  title \"Security-relevant software updates to Couchbase must be installed\nwithin the time period directed by an authoritative source (e.g. IAVM, CTOs,\nDTMs, and STIGs).\"\n  desc  \"Security flaws with software applications, including database\nmanagement systems, are discovered daily. Vendors are constantly updating and\npatching their products to address newly discovered security vulnerabilities.\nOrganizations (including any contractor to the organization) are required to\npromptly install security-relevant software updates (e.g., patches, service\npacks, and hot fixes). Flaws discovered during security assessments, continuous\nmonitoring, incident response activities, or information system error handling\nmust also be addressed expeditiously.\n\n    Organization-defined time periods for updating security-relevant software\nmay vary based on a variety of factors including, for example, the security\ncategory of the information system or the criticality of the update (i.e.,\nseverity of the vulnerability related to the discovered flaw).\n\n    This requirement will apply to software patch management solutions that are\nused to install patches across the enclave and also to applications themselves\nthat are not part of that patch management solution. For example, many browsers\ntoday provide the capability to install their own patch software. Patch\ncriticality, as well as system criticality, will vary. Therefore, the tactical\nsituations regarding the patch management process will also vary. This means\nthat the time period utilized must be a configurable parameter. Time frames for\napplication of security-relevant software updates may be dependent upon the\nInformation Assurance Vulnerability Management (IAVM) process.\n\n    The application will be configured to check for and install\nsecurity-relevant software updates within an identified time period from the\navailability of the update. The specific time period will be defined by an\nauthoritative source (e.g. IAVM, CTOs, DTMs, and STIGs).\n  \"\n  desc  \"check\", \"\n    Obtain evidence that software patches are consistently applied to Couchbase\nwithin the time frame defined for each patch.\n    To list the current version of Couchbase installed:\n    #couchbase-cli --version\n    Verify the version is the most recent available by visiting the following\nlink:\n    https://docs.couchbase.com/server/current/release-notes/relnotes.html\n    If the current Couchbase version is not the latest this is a finding.\n  \"\n  desc  \"fix\", \"\n    Institute and adhere to policies and procedures to ensure that patches are\nconsistently applied to Couchbase within the time allowed.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000456-DB-000390\"\n  tag \"gid\": \"V-58177\"\n  tag \"rid\": \"SV-72607r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000456-DB-000390\"\n  tag \"fix_id\": \"F-63385r1_fix\"\n  tag \"cci\": [\"CCI-002605\"]\n  tag \"nist\": [\"SI-2 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58177.rb"},"waiver_data":{},"results":[]},{"id":"V-58037","title":"Couchbase must associate organization-defined types of security labels\n  having organization-defined security label values with information in storage.","desc":"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code.","descriptions":[{"label":"default","data":"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code."},{"label":"check","data":"If security labeling is not required, this is not a finding.\nIf security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin storage, this is a finding."},{"label":"fix","data":"Enable Couchbase features, deploy third-party software, or add\n  custom data structures, data elements and application code, to provide reliable\n  security labeling of information in storage."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000311-DB-000308","gid":"V-58037","rid":"SV-72467r1_rule","stig_id":"SRG-APP-000311-DB-000308","fix_id":"F-63245r1_fix","cci":["CCI-002262"],"nist":["AC-16 a","Rev_4"]},"code":"control \"V-58037\" do\n  title \"Couchbase must associate organization-defined types of security labels\n  having organization-defined security label values with information in storage.\"\n  desc  \"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code.\n  \"\n  desc  \"check\", \"\n  If security labeling is not required, this is not a finding.\n  If security labeling requirements have been specified, but the security\n  labeling is not implemented or does not reliably maintain labels on information\n  in storage, this is a finding.\n  \"\n  desc  \"fix\", \"Enable Couchbase features, deploy third-party software, or add\n  custom data structures, data elements and application code, to provide reliable\n  security labeling of information in storage.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000311-DB-000308\"\n  tag \"gid\": \"V-58037\"\n  tag \"rid\": \"SV-72467r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000311-DB-000308\"\n  tag \"fix_id\": \"F-63245r1_fix\"\n  tag \"cci\": [\"CCI-002262\"]\n  tag \"nist\": [\"AC-16 a\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58037.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required","run_time":3.0e-06,"start_time":"2020-09-28T22:09:08-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required"}]},{"id":"V-58095","title":"Couchbase must generate audit records when categories of information\n(e.g., classification levels/security levels) are accessed.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000494-DB-000344","gid":"V-58095","rid":"SV-72525r1_rule","stig_id":"SRG-APP-000494-DB-000344","fix_id":"F-63303r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58095\" do\n  title \"Couchbase must generate audit records when categories of information\n(e.g., classification levels/security levels) are accessed.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000494-DB-000344\"\n  tag \"gid\": \"V-58095\"\n  tag \"rid\": \"SV-72525r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000494-DB-000344\"\n  tag \"fix_id\": \"F-63303r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n  \n  describe \"Couchbase log auditing should be enabled.\" do\n    subject { json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} \\\n    http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/audit\") }\n    its('auditdEnabled') { should eq true }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58095.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Couchbase log auditing should be enabled. auditdEnabled is expected to eq true","run_time":0.034689,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: true\n     got: false\n\n(compared using ==)\n\nDiff:\n@@ -1,2 +1,2 @@\n-true\n+false\n"}]},{"id":"V-32526","title":"Couchbase must recognize only system-generated session identifiers.","desc":"Couchbases utilize sessions and session identifiers to control\napplication behavior and user access. If an attacker can guess the session\nidentifier or can inject or manually insert session information, the session\nmay be compromised.\n\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Couchbase must recognize only system-generated session identifiers. If an\nattacker were able to generate a session with a non-system-generated session\nidentifier and have it recognized by the system, the attacker could gain access\nto the system without passing through access controls designed to limit\ndatabase sessions to authorized users.","descriptions":[{"label":"default","data":"Couchbases utilize sessions and session identifiers to control\napplication behavior and user access. If an attacker can guess the session\nidentifier or can inject or manually insert session information, the session\nmay be compromised.\n\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Couchbase must recognize only system-generated session identifiers. If an\nattacker were able to generate a session with a non-system-generated session\nidentifier and have it recognized by the system, the attacker could gain access\nto the system without passing through access controls designed to limit\ndatabase sessions to authorized users."},{"label":"check","data":"Review Couchbase settings and vendor documentation to determine whether\nCouchbase recognizes session identifiers that are not system-generated.\n    If Couchbase recognizes session identifiers that are not system generated,\nthis is a finding."},{"label":"fix","data":"Ensure Couchbase only recognizes session identifiers that are\nsystem-generated."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000223-DB-000168","gid":"V-32526","rid":"SV-42863r2_rule","stig_id":"SRG-APP-000223-DB-000168","fix_id":"F-36441r2_fix","cci":["CCI-001664"],"nist":["SC-23 (3)","Rev_4"]},"code":"control \"V-32526\" do\n  title \"Couchbase must recognize only system-generated session identifiers.\"\n  desc  \"Couchbases utilize sessions and session identifiers to control\napplication behavior and user access. If an attacker can guess the session\nidentifier or can inject or manually insert session information, the session\nmay be compromised.\n\n    This requirement focuses on communications protection for Couchbase session\nrather than for the network packet. The intent of this control is to establish\ngrounds for confidence at each end of a communications session in the ongoing\nidentity of the other party and in the validity of the information being\ntransmitted.\n\n    Couchbase must recognize only system-generated session identifiers. If an\nattacker were able to generate a session with a non-system-generated session\nidentifier and have it recognized by the system, the attacker could gain access\nto the system without passing through access controls designed to limit\ndatabase sessions to authorized users.\n  \"\n  desc  \"check\", \"\n    Review Couchbase settings and vendor documentation to determine whether\nCouchbase recognizes session identifiers that are not system-generated.\n    If Couchbase recognizes session identifiers that are not system generated,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Ensure Couchbase only recognizes session identifiers that are\nsystem-generated.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000223-DB-000168\"\n  tag \"gid\": \"V-32526\"\n  tag \"rid\": \"SV-42863r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000223-DB-000168\"\n  tag \"fix_id\": \"F-36441r2_fix\"\n  tag \"cci\": [\"CCI-001664\"]\n  tag \"nist\": [\"SC-23 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32526.rb"},"waiver_data":{},"results":[]},{"id":"V-58157","title":"Couchbase must use NSA-approved cryptography to protect classified\ninformation in accordance with the data owners requirements.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    NSA-approved cryptography for classified networks is hardware based. This\nrequirement addresses the compatibility of a Couchbase with the encryption\ndevices.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    NSA-approved cryptography for classified networks is hardware based. This\nrequirement addresses the compatibility of a Couchbase with the encryption\ndevices."},{"label":"check","data":"If Couchbase is deployed in an unclassified environment, this is not\napplicable (NA).\n    If Couchbase is not using NSA-approved cryptography to protect classified\ninformation in accordance with applicable federal laws, Executive Orders,\ndirectives, policies, regulations, and standards, this is a finding.\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <host>:<port>-u Administrator -p password\n--client-auth --extended\n    If the response does not show SSL is enabled, this is a finding."},{"label":"fix","data":"Configure Couchbase and related system components to use NSA-approved\ncryptography to protect classified information in accordance with applicable\nfederal laws, Executive Orders, directives, policies, regulations, and\nstandards.\n    Configure Couchbase to enforce SSL:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Config File>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000416-DB-000380","gid":"V-58157","rid":"SV-72587r1_rule","stig_id":"SRG-APP-000416-DB-000380","fix_id":"F-63365r1_fix","cci":["CCI-002450"],"nist":["SC-13","Rev_4"]},"code":"control \"V-58157\" do\n  title \"Couchbase must use NSA-approved cryptography to protect classified\ninformation in accordance with the data owners requirements.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    NSA-approved cryptography for classified networks is hardware based. This\nrequirement addresses the compatibility of a Couchbase with the encryption\ndevices.\n  \"\n  desc  \"check\", \"\n    If Couchbase is deployed in an unclassified environment, this is not\napplicable (NA).\n    If Couchbase is not using NSA-approved cryptography to protect classified\ninformation in accordance with applicable federal laws, Executive Orders,\ndirectives, policies, regulations, and standards, this is a finding.\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <host>:<port>-u Administrator -p password\n--client-auth --extended\n    If the response does not show SSL is enabled, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase and related system components to use NSA-approved\ncryptography to protect classified information in accordance with applicable\nfederal laws, Executive Orders, directives, policies, regulations, and\nstandards.\n    Configure Couchbase to enforce SSL:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Config File>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000416-DB-000380\"\n  tag \"gid\": \"V-58157\"\n  tag \"rid\": \"SV-72587r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000416-DB-000380\"\n  tag \"fix_id\": \"F-63365r1_fix\"\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58157.rb"},"waiver_data":{},"results":[]},{"id":"V-58081","title":"Couchbase must generate audit records when unsuccessful attempts to\n  delete privileges/permissions occur.","desc":"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, deleting permissions is typically done via the\n  REVOKE or DENY command.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, deleting permissions is typically done via the\n  REVOKE or DENY command.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n  First, as the Full Admin, create two user accounts by executing the\n  following commands:\n    $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n    -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n    --rbac-name \"John Doe\" --roles replication_admin \\\n    --auth-domain local\n    $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n    -p <Password> --set --rbac-username janedoe --rbac-password cbpass \\\n    --rbac-name \"Jane Doe\" --roles replication_admin,cluster_admin \\\n    --auth-domain local\n  Then, as the John Doe user, revoke the \"cluster_admin\" role from Jane Doe:\n    $ cbq -u jdoe -p cbpass -engine=http://<host>:<port>/ --script=\"REVOKE\n    cluster_admin FROM janedoe\"\n  Verify the events were logged with the following command:\n    $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n    Output:\n    {\"description\":\"A N1QL REVOKE ROLE statement was executed\",\"id\":28686,\n    \"isAdHoc\":true,\"metrics\":{\"elapsedTime\":\"12.61108ms\",\"errorCount\":1,\n    \"executionTime\":\"12.55615ms\",\"resultCount\":0,\"resultSize\":0},\"name\":\"REVOKE\n    ROLE statement\",\"node\":\"127.0.0.1:8091\",\"real_use\"rid\"\":{\"domain\":\"local\",\n    \"user\":\"jdoe\"},\"remote\":{\"ip\":\"127.0.0.1\",\"port\":41172},\"requestId\":\n    \"aa6cd9c6-b966-403c-aed2-0a3a86144602\",\"statement\":\"REVOKE cluster_admin FROM\n    janedoe;\",\"status\":\"fatal\",\"timestamp\":\"2020-08-21T17:53:34.166Z\",\"userAgent\":\n    \"Go-http-client/1.1 (CBQ/2.0)\"}\n\nIf the above steps cannot verify that audit records are produced when\nprivileges/permissions/role memberships are unsuccessfully revoked, this is a\nfinding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are unsuccessfully deleted.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable the required set of auditable events by doing the following:\n      As the Full Admin, log into the cluster and use  the following\ndocumentation to enable all on the \"Query and Index Services Event:\n      -\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000499-DB-000331","gid":"V-58081","rid":"SV-72511r2_rule","stig_id":"SRG-APP-000499-DB-000331","fix_id":"F-63289r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58081\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\n  delete privileges/permissions occur.\"\n  desc  \"Failed attempts to change the permissions, privileges, and roles\n  granted to users and roles must be tracked. Without an audit trail,\n  unauthorized attempts to elevate or restrict privileges could go undetected.\n\n  In an SQL environment, deleting permissions is typically done via the\n  REVOKE or DENY command.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\"\n\n  desc  \"check\", \"\n  Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n    First, as the Full Admin, create two user accounts by executing the\n    following commands:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n      -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n      --rbac-name \\\"John Doe\\\" --roles replication_admin \\\\\n      --auth-domain local\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n      -p <Password> --set --rbac-username janedoe --rbac-password cbpass \\\\\n      --rbac-name \\\"Jane Doe\\\" --roles replication_admin,cluster_admin \\\\\n      --auth-domain local\n    Then, as the John Doe user, revoke the \\\"cluster_admin\\\" role from Jane Doe:\n      $ cbq -u jdoe -p cbpass -engine=http://<host>:<port>/ --script=\\\"REVOKE\n      cluster_admin FROM janedoe\\\"\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:\n      {\\\"description\\\":\\\"A N1QL REVOKE ROLE statement was executed\\\",\\\"id\\\":28686,\n      \\\"isAdHoc\\\":true,\\\"metrics\\\":{\\\"elapsedTime\\\":\\\"12.61108ms\\\",\\\"errorCount\\\":1,\n      \\\"executionTime\\\":\\\"12.55615ms\\\",\\\"resultCount\\\":0,\\\"resultSize\\\":0},\\\"name\\\":\\\"REVOKE\n      ROLE statement\\\",\\\"node\\\":\\\"127.0.0.1:8091\\\",\\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\n      \\\"user\\\":\\\"jdoe\\\"},\\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":41172},\\\"requestId\\\":\n      \\\"aa6cd9c6-b966-403c-aed2-0a3a86144602\\\",\\\"statement\\\":\\\"REVOKE cluster_admin FROM\n      janedoe;\\\",\\\"status\\\":\\\"fatal\\\",\\\"timestamp\\\":\\\"2020-08-21T17:53:34.166Z\\\",\\\"userAgent\\\":\n      \\\"Go-http-client/1.1 (CBQ/2.0)\\\"}\n\n  If the above steps cannot verify that audit records are produced when\n  privileges/permissions/role memberships are unsuccessfully revoked, this is a\n  finding.\"\n  \n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are unsuccessfully deleted.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable the required set of auditable events by doing the following:\n      As the Full Admin, log into the cluster and use  the following\ndocumentation to enable all on the \\\"Query and Index Services Event:\n      -\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000499-DB-000331\"\n  tag \"gid\": \"V-58081\"\n  tag \"rid\": \"SV-72511r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000499-DB-000331\"\n  tag \"fix_id\": \"F-63289r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Add the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Add the janedoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Revoke permissions from janedoe by jdoe. The\" do \n    subject { command(\"cbq -u jdoe -p cbpass --engine=http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}\\\n    --script='REVOKE replication_admin FROM janedoe'\")}\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'A N1QL REVOKE ROLE' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"fatal\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Delete the janedoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username janedoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58081.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Add the jdoe user. The exit_status is expected to eq 0","run_time":0.106875,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Add the janedoe user. The exit_status is expected to eq 0","run_time":0.102744,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"passed","code_desc":"Revoke permissions from janedoe by jdoe. The exit_status is expected to eq 0","run_time":0.022776,"start_time":"2020-09-28T22:09:08-04:00"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"fatal\"/","run_time":0.020824,"start_time":"2020-09-28T22:09:08-04:00","message":"expected \"\" to match /\"fatal\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"fatal\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.106254,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Delete the janedoe user. The exit_status is expected to eq 0","run_time":0.123141,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58023","title":"Couchbase must prevent non-privileged users from executing privileged\n  functions, to include disabling, circumventing, or altering implemented\n  security safeguards/countermeasures.","desc":"Preventing non-privileged users from executing privileged functions\n  mitigates the risk that unauthorized individuals or processes may gain\n  unnecessary access to information or privileges.\n\n  System documentation should include a definition of the functionality\n  considered privileged.\n\n  Depending on circumstances, privileged functions can include, for example,\n  establishing accounts, performing system integrity checks, or administering\n  cryptographic key management activities. Non-privileged users are individuals\n  that do not possess appropriate authorizations. Circumventing intrusion\n  detection and prevention mechanisms or malicious code protection mechanisms are\n  examples of privileged functions that require protection from non-privileged\n  users.\n\n  A privileged function in Couchbase/database context is any operation that\n  modifies the structure of the database, its built-in logic, or its security\n  settings. This would include all Data Definition Language (DDL) statements and\n  all security-related statements. In an SQL environment, it encompasses, but is\n  not necessarily limited to:\n      CREATE\n      ALTER\n      DROP\n      GRANT\n      REVOKE\n      DENY\n\n  There may also be Data Manipulation Language (DML) statements that, subject\n  to context, should be regarded as privileged. Possible examples include:\n\n      TRUNCATE TABLE;\n      DELETE, or\n      DELETE affecting more than n rows, for some n, or\n      DELETE without a WHERE clause;\n\n      UPDATE or\n      UPDATE affecting more than n rows, for some n, or\n      UPDATE without a WHERE clause;\n\n  any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\n  table executed by other than a security principal.\n\n  Depending on the capabilities of Couchbase and the design of the database\n  and associated applications, the prevention of unauthorized use of privileged\n  functions may be achieved by means of Couchbase security features, database\n  triggers, other mechanisms, or a combination of these.","descriptions":[{"label":"default","data":"Preventing non-privileged users from executing privileged functions\n  mitigates the risk that unauthorized individuals or processes may gain\n  unnecessary access to information or privileges.\n\n  System documentation should include a definition of the functionality\n  considered privileged.\n\n  Depending on circumstances, privileged functions can include, for example,\n  establishing accounts, performing system integrity checks, or administering\n  cryptographic key management activities. Non-privileged users are individuals\n  that do not possess appropriate authorizations. Circumventing intrusion\n  detection and prevention mechanisms or malicious code protection mechanisms are\n  examples of privileged functions that require protection from non-privileged\n  users.\n\n  A privileged function in Couchbase/database context is any operation that\n  modifies the structure of the database, its built-in logic, or its security\n  settings. This would include all Data Definition Language (DDL) statements and\n  all security-related statements. In an SQL environment, it encompasses, but is\n  not necessarily limited to:\n      CREATE\n      ALTER\n      DROP\n      GRANT\n      REVOKE\n      DENY\n\n  There may also be Data Manipulation Language (DML) statements that, subject\n  to context, should be regarded as privileged. Possible examples include:\n\n      TRUNCATE TABLE;\n      DELETE, or\n      DELETE affecting more than n rows, for some n, or\n      DELETE without a WHERE clause;\n\n      UPDATE or\n      UPDATE affecting more than n rows, for some n, or\n      UPDATE without a WHERE clause;\n\n  any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\n  table executed by other than a security principal.\n\n  Depending on the capabilities of Couchbase and the design of the database\n  and associated applications, the prevention of unauthorized use of privileged\n  functions may be achieved by means of Couchbase security features, database\n  triggers, other mechanisms, or a combination of these."},{"label":"check","data":"Only a user with Full Admin and Security Admin roles can alter or\nreconfigure the security safeguards.\nAs the Full Admin, get a list of all RBAC users with the following command:\n$ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\nIf any users have the \"admin\" role or \"security_admin\" role that should\nnot, this is a finding."},{"label":"fix","data":"Remove users who should not have Full Admin or Security Admin role. To\nmanage the roles this can be done by running the following command (Note: Do\nnot include the \"admin\" or the \"security_admin\" role in command):\n$ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n-p <Password> --set --rbac-username <user> --rbac-password <password> \\\n--rbac-name <name> --roles <roles> \\\n--auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000340-DB-000304","gid":"V-58023","rid":"SV-72453r1_rule","stig_id":"SRG-APP-000340-DB-000304","fix_id":"F-63231r1_fix","cci":["CCI-002235"],"nist":["AC-6 (10)","Rev_4"]},"code":"control \"V-58023\" do\n  title \"Couchbase must prevent non-privileged users from executing privileged\n  functions, to include disabling, circumventing, or altering implemented\n  security safeguards/countermeasures.\"\n  desc  \"Preventing non-privileged users from executing privileged functions\n  mitigates the risk that unauthorized individuals or processes may gain\n  unnecessary access to information or privileges.\n\n  System documentation should include a definition of the functionality\n  considered privileged.\n\n  Depending on circumstances, privileged functions can include, for example,\n  establishing accounts, performing system integrity checks, or administering\n  cryptographic key management activities. Non-privileged users are individuals\n  that do not possess appropriate authorizations. Circumventing intrusion\n  detection and prevention mechanisms or malicious code protection mechanisms are\n  examples of privileged functions that require protection from non-privileged\n  users.\n\n  A privileged function in Couchbase/database context is any operation that\n  modifies the structure of the database, its built-in logic, or its security\n  settings. This would include all Data Definition Language (DDL) statements and\n  all security-related statements. In an SQL environment, it encompasses, but is\n  not necessarily limited to:\n      CREATE\n      ALTER\n      DROP\n      GRANT\n      REVOKE\n      DENY\n\n  There may also be Data Manipulation Language (DML) statements that, subject\n  to context, should be regarded as privileged. Possible examples include:\n\n      TRUNCATE TABLE;\n      DELETE, or\n      DELETE affecting more than n rows, for some n, or\n      DELETE without a WHERE clause;\n\n      UPDATE or\n      UPDATE affecting more than n rows, for some n, or\n      UPDATE without a WHERE clause;\n\n  any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\n  table executed by other than a security principal.\n\n  Depending on the capabilities of Couchbase and the design of the database\n  and associated applications, the prevention of unauthorized use of privileged\n  functions may be achieved by means of Couchbase security features, database\n  triggers, other mechanisms, or a combination of these.\n  \"\n  desc  \"check\", \"\n  Only a user with Full Admin and Security Admin roles can alter or\n  reconfigure the security safeguards.\n  As the Full Admin, get a list of all RBAC users with the following command:\n  $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n  <Password> --list\n  If any users have the \\\"admin\\\" role or \\\"security_admin\\\" role that should\n  not, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Remove users who should not have Full Admin or Security Admin role. To\n  manage the roles this can be done by running the following command (Note: Do\n  not include the \\\"admin\\\" or the \\\"security_admin\\\" role in command):\n  $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n  -p <Password> --set --rbac-username <user> --rbac-password <password> \\\\\n  --rbac-name <name> --roles <roles> \\\\\n  --auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000340-DB-000304\"\n  tag \"gid\": \"V-58023\"\n  tag \"rid\": \"SV-72453r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000340-DB-000304\"\n  tag \"fix_id\": \"F-63231r1_fix\"\n  tag \"cci\": [\"CCI-002235\"]\n  tag \"nist\": [\"AC-6 (10)\", \"Rev_4\"]\n\n  admin_users = []\n  json_output = command(\"couchbase-cli user-manage -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} --cluster #{input('cb_cluster_host')}:#{input('cb_cluster_port')} --list | grep -B7 -A3 '\\\"role\\\": \\\"admin\\\"' | grep 'id'\").stdout.split(\"\\n\")\n  \n  json_output.each do |output|\n    user = command(\"echo '#{output}' | awk -F '\\\"' '{print $4}'\").stdout.strip\n    admin_users.push(user)\n  end\n\n  admin_users.each do |user|\n    describe 'Each admin user in the list' do\n      subject { user }\n      it { should be_in input('cb_admin_users').uniq.flatten }\n    end\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58023.rb"},"waiver_data":{},"results":[]},{"id":"V-58163","title":"Couchbase must implement NIST FIPS 140-2 validated cryptographic\nmodules to protect unclassified information requiring confidentiality and\ncryptographic protection, in accordance with the data owners requirements.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant."},{"label":"check","data":"As the system administrator, run the following:\n$ openssl version\nIf \"fips\" is not included in the openssl version, this is a finding.\nRun the following command to check if the OS has FIPS enabled:\n$ cat /proc/sys/crypto/fips_enabled\nIf fips_enabled is not 1, this is a finding."},{"label":"fix","data":"Configure OpenSSL to meet FIPS Compliance.\n    To configure OpenSSL to be FIPS 140-2 compliant, see the official RHEL\nDocumentation:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000514-DB-000383","gid":"V-58163","rid":"SV-72593r1_rule","stig_id":"SRG-APP-000514-DB-000383","fix_id":"F-63371r2_fix","cci":["CCI-002450"],"nist":["SC-13","Rev_4"]},"code":"control \"V-58163\" do\n  title \"Couchbase must implement NIST FIPS 140-2 validated cryptographic\nmodules to protect unclassified information requiring confidentiality and\ncryptographic protection, in accordance with the data owners requirements.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    It is the responsibility of the data owner to assess the cryptography\nrequirements in light of applicable federal laws, Executive Orders, directives,\npolicies, regulations, and standards.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.\n  \"\n  desc \n  desc  \"check\", \"\n    As the system administrator, run the following:\n    $ openssl version\n    If \\\"fips\\\" is not included in the openssl version, this is a finding.\n    Run the following command to check if the OS has FIPS enabled:\n    $ cat /proc/sys/crypto/fips_enabled\n    If fips_enabled is not 1, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to meet FIPS Compliance.\n    To configure OpenSSL to be FIPS 140-2 compliant, see the official RHEL\nDocumentation:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000514-DB-000383\"\n  tag \"gid\": \"V-58163\"\n  tag \"rid\": \"SV-72593r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000514-DB-000383\"\n  tag \"fix_id\": \"F-63371r2_fix\"\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58163.rb"},"waiver_data":{},"results":[]},{"id":"V-32369","title":"Couchbase must produce audit records containing time stamps to\nestablish when the events occurred.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing when events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know the date and time when\nevents occurred.\n\n    Associating the date and time with detected events in the application and\naudit logs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhen specific actions were performed. This requires the date and time an audit\nrecord is referring to. If date and time information is not recorded and stored\nwith the audit record, the record itself is of very limited use.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing when events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know the date and time when\nevents occurred.\n\n    Associating the date and time with detected events in the application and\naudit logs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhen specific actions were performed. This requires the date and time an audit\nrecord is referring to. If date and time information is not recorded and stored\nwith the audit record, the record itself is of very limited use."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding when the events occurred.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000096-DB-000040","gid":"V-32369","rid":"SV-42706r3_rule","stig_id":"SRG-APP-000096-DB-000040","fix_id":"F-36284r3_fix","cci":["CCI-000131"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32369\" do\n  title \"Couchbase must produce audit records containing time stamps to\nestablish when the events occurred.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing when events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know the date and time when\nevents occurred.\n\n    Associating the date and time with detected events in the application and\naudit logs provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n\n    Database software is capable of a range of actions on data stored within\nthe database. It is important, for accurate forensic analysis, to know exactly\nwhen specific actions were performed. This requires the date and time an audit\nrecord is referring to. If date and time information is not recorded and stored\nwith the audit record, the record itself is of very limited use.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding when the events occurred.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000096-DB-000040\"\n  tag \"gid\": \"V-32369\"\n  tag \"rid\": \"SV-42706r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000096-DB-000040\"\n  tag \"fix_id\": \"F-36284r3_fix\"\n  tag \"cci\": [\"CCI-000131\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32369.rb"},"waiver_data":{},"results":[]},{"id":"V-58173","title":"Couchbase must maintain a separate execution domain for each executing\nprocess.","desc":"Database management systems can maintain separate execution domains\nfor each executing process by assigning each process a separate address space.\nEach process has a distinct address space so that communication between\nprocesses is controlled through the security functions, and one process cannot\nmodify the executing code of another process. Maintaining separate execution\ndomains for executing processes can be achieved, for example, by implementing\nseparate address spaces.","descriptions":[{"label":"default","data":"Database management systems can maintain separate execution domains\nfor each executing process by assigning each process a separate address space.\nEach process has a distinct address space so that communication between\nprocesses is controlled through the security functions, and one process cannot\nmodify the executing code of another process. Maintaining separate execution\ndomains for executing processes can be achieved, for example, by implementing\nseparate address spaces."},{"label":"check","data":"If Couchbase is running within a Docker container, this is not a finding.\n    Review Couchbase architecture to find out if and how it protects the\nprivate resources of one process (such as working memory, temporary tables,\nuncommitted data and, especially, executable code) from unauthorized access or\nmodification by another user or process.\n    If it is not capable of maintaining a separate execution domain for each\nexecuting process, this is a finding.\n    If Couchbase is capable of maintaining a separate execution domain for each\nexecuting process, but is configured not to do so, this is a finding."},{"label":"fix","data":"Ensure Couchbase is able to maintain a separate execution domain for each\nexecuting process.\n    If this is a configurable feature, configure Couchbase to implement it."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000431-DB-000388","gid":"V-58173","rid":"SV-72603r1_rule","stig_id":"SRG-APP-000431-DB-000388","fix_id":"F-63381r1_fix","cci":["CCI-002530"],"nist":["SC-39","Rev_4"]},"code":"control \"V-58173\" do\n  title \"Couchbase must maintain a separate execution domain for each executing\nprocess.\"\n  desc  \"Database management systems can maintain separate execution domains\nfor each executing process by assigning each process a separate address space.\nEach process has a distinct address space so that communication between\nprocesses is controlled through the security functions, and one process cannot\nmodify the executing code of another process. Maintaining separate execution\ndomains for executing processes can be achieved, for example, by implementing\nseparate address spaces.\"\n  desc  \"check\", \"\n    If Couchbase is running within a Docker container, this is not a finding.\n    Review Couchbase architecture to find out if and how it protects the\nprivate resources of one process (such as working memory, temporary tables,\nuncommitted data and, especially, executable code) from unauthorized access or\nmodification by another user or process.\n    If it is not capable of maintaining a separate execution domain for each\nexecuting process, this is a finding.\n    If Couchbase is capable of maintaining a separate execution domain for each\nexecuting process, but is configured not to do so, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Ensure Couchbase is able to maintain a separate execution domain for each\nexecuting process.\n    If this is a configurable feature, configure Couchbase to implement it.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000431-DB-000388\"\n  tag \"gid\": \"V-58173\"\n  tag \"rid\": \"SV-72603r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000431-DB-000388\"\n  tag \"fix_id\": \"F-63381r1_fix\"\n  tag \"cci\": [\"CCI-002530\"]\n  tag \"nist\": [\"SC-39\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58173.rb"},"waiver_data":{},"results":[]},{"id":"V-32442","title":"Couchbase must uniquely identify and authenticate organizational users\n(or processes acting on behalf of organizational users).","desc":"To assure accountability and prevent unauthenticated access,\norganizational users must be identified and authenticated to prevent potential\nmisuse and compromise of the system.\n\n    Organizational users include organizational employees or individuals the\norganization deems to have equivalent status of employees (e.g., contractors).\nOrganizational users (and any processes acting on behalf of users) must be\nuniquely identified and authenticated for all accesses, except the following:\n\n    (i) Accesses explicitly identified and documented by the organization.\nOrganizations document specific user actions that can be performed on the\ninformation system without identification or authentication; and\n    (ii) Accesses that occur through authorized use of group authenticators\nwithout individual authentication. Organizations may require unique\nidentification of individuals using shared accounts, for detailed\naccountability of individual activity.","descriptions":[{"label":"default","data":"To assure accountability and prevent unauthenticated access,\norganizational users must be identified and authenticated to prevent potential\nmisuse and compromise of the system.\n\n    Organizational users include organizational employees or individuals the\norganization deems to have equivalent status of employees (e.g., contractors).\nOrganizational users (and any processes acting on behalf of users) must be\nuniquely identified and authenticated for all accesses, except the following:\n\n    (i) Accesses explicitly identified and documented by the organization.\nOrganizations document specific user actions that can be performed on the\ninformation system without identification or authentication; and\n    (ii) Accesses that occur through authorized use of group authenticators\nwithout individual authentication. Organizations may require unique\nidentification of individuals using shared accounts, for detailed\naccountability of individual activity."},{"label":"check","data":"Review Couchbase settings to determine whether organizational users are\nuniquely identified and authenticated when logging on/connecting to the system.\n    As the Full Admin, list current users and roles using the following example\ncommand:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If organizational users are not uniquely identified and authenticated, this\nis a finding."},{"label":"fix","data":"Configure Couchbase settings to uniquely identify and authenticate all\norganizational users who log on/connect to the system.\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000148-DB-000103","gid":"V-32442","rid":"SV-42779r4_rule","stig_id":"SRG-APP-000148-DB-000103","fix_id":"F-36357r2_fix","cci":["CCI-000764"],"nist":["IA-2","Rev_4"]},"code":"control \"V-32442\" do\n  title \"Couchbase must uniquely identify and authenticate organizational users\n(or processes acting on behalf of organizational users).\"\n  desc  \"To assure accountability and prevent unauthenticated access,\norganizational users must be identified and authenticated to prevent potential\nmisuse and compromise of the system.\n\n    Organizational users include organizational employees or individuals the\norganization deems to have equivalent status of employees (e.g., contractors).\nOrganizational users (and any processes acting on behalf of users) must be\nuniquely identified and authenticated for all accesses, except the following:\n\n    (i) Accesses explicitly identified and documented by the organization.\nOrganizations document specific user actions that can be performed on the\ninformation system without identification or authentication; and\n    (ii) Accesses that occur through authorized use of group authenticators\nwithout individual authentication. Organizations may require unique\nidentification of individuals using shared accounts, for detailed\naccountability of individual activity.\n  \"\n  desc  \"check\", \"\n    Review Couchbase settings to determine whether organizational users are\nuniquely identified and authenticated when logging on/connecting to the system.\n    As the Full Admin, list current users and roles using the following example\ncommand:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If organizational users are not uniquely identified and authenticated, this\nis a finding.\n\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase settings to uniquely identify and authenticate all\norganizational users who log on/connect to the system.\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000148-DB-000103\"\n  tag \"gid\": \"V-32442\"\n  tag \"rid\": \"SV-42779r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000148-DB-000103\"\n  tag \"fix_id\": \"F-36357r2_fix\"\n  tag \"cci\": [\"CCI-000764\"]\n  tag \"nist\": [\"IA-2\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32442.rb"},"waiver_data":{},"results":[]},{"id":"V-58091","title":"Couchbase must generate audit records when security objects are\n  deleted.","desc":"The removal of security objects from the database/Couchbase would\n  seriously degrade a system's information assurance posture. If such an event\n  occurs, it must be logged.","descriptions":[{"label":"default","data":"The removal of security objects from the database/Couchbase would\n  seriously degrade a system's information assurance posture. If such an event\n  occurs, it must be logged."},{"label":"check","data":"If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\n    Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n    As the Full Admin, create a user account and grant the user the\ncluster_admin role by executing the following command:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n     --rbac-name \"John Doe\" --roles cluster_admin \\\n     --auth-domain local\n    As the John Doe user, create a bucket in the cluster by executing the\nfollowing command:\n      $ couchbase-cli bucket-create -c <host>:<port> --username jdoe --password\ncbpass --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\n    As the John Doe user, delete the bucket created by executing the following\ncommand:\n      $ couchbase-cli bucket-delete -c <host>:<port> --username jdoe --password\n      cbpass --bucket test-data\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n        Output:\n        {\"bucket_name\":\"test-data\",\"description\":\"Bucket was\n        deleted\",\"id\":8203,\"name\":\"delete bucket\",\"real_use\"\n        rid\"\":{\"domain\":\"local\",\"user\":\"jdoe\"},\"remote\":\n        {\"ip\":\"127.0.0.1\",\"port\":47336},\"timestamp\":\n        \"2020-08-20T21:17:06.409Z\"}\n  If the above steps cannot verify that audit records are produced when\n  security objects are deleted, this is a finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen security objects are delete.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000501-DB-000336","gid":"V-58091","rid":"SV-72521r1_rule","stig_id":"SRG-APP-000501-DB-000336","fix_id":"F-63299r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58091\" do\n  title \"Couchbase must generate audit records when security objects are\n  deleted.\"\n\n  desc  \"The removal of security objects from the database/Couchbase would\n  seriously degrade a system's information assurance posture. If such an event\n  occurs, it must be logged.\"\n  desc  \"check\", \"\n  If the Couchbase architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its\n  built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s), this is not a finding.\n      Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n      As the Full Admin, create a user account and grant the user the\n  cluster_admin role by executing the following command:\n        $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n       -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n       --rbac-name \\\"John Doe\\\" --roles cluster_admin \\\\\n       --auth-domain local\n      As the John Doe user, create a bucket in the cluster by executing the\n  following command:\n        $ couchbase-cli bucket-create -c <host>:<port> --username jdoe --password\n  cbpass --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\n      As the John Doe user, delete the bucket created by executing the following\n  command:\n        $ couchbase-cli bucket-delete -c <host>:<port> --username jdoe --password\n        cbpass --bucket test-data\n      Verify the events were logged with the following command:\n        $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n          Output:\n          {\\\"bucket_name\\\":\\\"test-data\\\",\\\"description\\\":\\\"Bucket was\n          deleted\\\",\\\"id\\\":8203,\\\"name\\\":\\\"delete bucket\\\",\\\"real_use\\\"\n          rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\\\"user\\\":\\\"jdoe\\\"},\\\"remote\\\":\n          {\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":47336},\\\"timestamp\\\":\n          \\\"2020-08-20T21:17:06.409Z\\\"}\n    If the above steps cannot verify that audit records are produced when\n    security objects are deleted, this is a finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when security objects are delete.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\"\n        \n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000501-DB-000336\"\n  tag \"gid\": \"V-58091\"\n  tag \"rid\": \"SV-72521r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000501-DB-000336\"\n  tag \"fix_id\": \"F-63299r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n\n  describe \"Create bucket. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli bucket-create \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Delete bucket. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli bucket-delete \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --bucket test-data\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'bucket' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match \"deleted\"}\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58091.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Create bucket. The exit_status is expected to eq 0","run_time":0.103113,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Delete bucket. The exit_status is expected to eq 0","run_time":0.097291,"start_time":"2020-09-28T22:09:08-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match \"deleted\"","run_time":0.020979,"start_time":"2020-09-28T22:09:09-04:00","message":"expected \"\" to match \"deleted\""}]},{"id":"V-32413","title":"Database software, including Couchbase  configuration files, must be\nstored in dedicated directories, or DASD pools, separate from the host OS and\nother applications.","desc":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can potentially have significant effects\non the overall security of the system.\n\n    Multiple applications can provide a cumulative negative effect. A\nvulnerability and subsequent exploit to one application can lead to an exploit\nof other applications sharing the same security context. For example, an\nexploit to a web server process that leads to unauthorized administrative\naccess to host system directories can most likely lead to a compromise of all\napplications hosted by the same system. Database software not installed using\ndedicated directories both threatens and is threatened by other hosted\napplications. Access controls defined for one application may by default\nprovide access to the other application's database objects or directories. Any\nmethod that provides any level of separation of security context assists in the\nprotection between applications.","descriptions":[{"label":"default","data":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can potentially have significant effects\non the overall security of the system.\n\n    Multiple applications can provide a cumulative negative effect. A\nvulnerability and subsequent exploit to one application can lead to an exploit\nof other applications sharing the same security context. For example, an\nexploit to a web server process that leads to unauthorized administrative\naccess to host system directories can most likely lead to a compromise of all\napplications hosted by the same system. Database software not installed using\ndedicated directories both threatens and is threatened by other hosted\napplications. Access controls defined for one application may by default\nprovide access to the other application's database objects or directories. Any\nmethod that provides any level of separation of security context assists in the\nprotection between applications."},{"label":"check","data":"If Couchbase is running within a Docker container, this is not a finding.\n    Review the Couchbase software library directory and note other root\ndirectories located on the same disk directory or any subdirectories.\n    If any non-Couchbase software directories exist on the disk directory,\nexamine or investigate their use. If any of the directories are used by other\napplications, including third-party applications that use Couchbase, this is a\nfinding.\n    Only applications that are required for the functioning and administration,\nnot use, of the Couchbase should be located in the same disk directory as the\nCouchbase software libraries.\n    If other applications are located in the same directory as Couchbase, this\nis a finding."},{"label":"fix","data":"Install all applications on directories separate from the\nCouchbase software library directory. Relocate any directories or reinstall\nother application software that currently shares the Couchbase software library\ndirectory."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000199","gid":"V-32413","rid":"SV-42750r3_rule","stig_id":"SRG-APP-000133-DB-000199","fix_id":"F-36328r2_fix","cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32413\" do\n  title \"Database software, including Couchbase  configuration files, must be\nstored in dedicated directories, or DASD pools, separate from the host OS and\nother applications.\"\n  desc  \"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can potentially have significant effects\non the overall security of the system.\n\n    Multiple applications can provide a cumulative negative effect. A\nvulnerability and subsequent exploit to one application can lead to an exploit\nof other applications sharing the same security context. For example, an\nexploit to a web server process that leads to unauthorized administrative\naccess to host system directories can most likely lead to a compromise of all\napplications hosted by the same system. Database software not installed using\ndedicated directories both threatens and is threatened by other hosted\napplications. Access controls defined for one application may by default\nprovide access to the other application's database objects or directories. Any\nmethod that provides any level of separation of security context assists in the\nprotection between applications.\n  \"\n  desc  \"check\", \"\n    If Couchbase is running within a Docker container, this is not a finding.\n    Review the Couchbase software library directory and note other root\ndirectories located on the same disk directory or any subdirectories.\n    If any non-Couchbase software directories exist on the disk directory,\nexamine or investigate their use. If any of the directories are used by other\napplications, including third-party applications that use Couchbase, this is a\nfinding.\n    Only applications that are required for the functioning and administration,\nnot use, of the Couchbase should be located in the same disk directory as the\nCouchbase software libraries.\n    If other applications are located in the same directory as Couchbase, this\nis a finding.\n  \"\n  desc  \"fix\", \"Install all applications on directories separate from the\nCouchbase software library directory. Relocate any directories or reinstall\nother application software that currently shares the Couchbase software library\ndirectory.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000199\"\n  tag \"gid\": \"V-32413\"\n  tag \"rid\": \"SV-42750r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000199\"\n  tag \"fix_id\": \"F-36328r2_fix\"\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32413.rb"},"waiver_data":{},"results":[]},{"id":"V-58147","title":"Couchbase must require users to re-authenticate when\norganization-defined circumstances or situations require re-authentication.","desc":"The DoD standard for authentication of an interactive user is the\npresentation of a Common Access Card (CAC) or other physical token bearing a\nvalid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled\nwith a Personal Identification Number (PIN) to be entered by the user at the\nbeginning of each session and whenever re-authentication is required.\n\n    Without re-authentication, users may access resources or perform tasks for\nwhich they do not have authorization.\n\n    When applications provide the capability to change security roles or\nescalate the functional capability of the application, it is critical the user\nre-authenticate.\n\n    In addition to the re-authentication requirements associated with session\nlocks, organizations may require re-authentication of individuals and/or\ndevices in other situations, including (but not limited to) the following\ncircumstances:\n\n    (i) When authenticators change;\n    (ii) When roles change;\n    (iii) When security categories of information systems change;\n    (iv) When the execution of privileged functions occurs;\n    (v) After a fixed period of time; or\n    (vi) Periodically.\n\n    Within the DoD, the minimum circumstances requiring re-authentication are\nprivilege escalation and role changes.","descriptions":[{"label":"default","data":"The DoD standard for authentication of an interactive user is the\npresentation of a Common Access Card (CAC) or other physical token bearing a\nvalid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled\nwith a Personal Identification Number (PIN) to be entered by the user at the\nbeginning of each session and whenever re-authentication is required.\n\n    Without re-authentication, users may access resources or perform tasks for\nwhich they do not have authorization.\n\n    When applications provide the capability to change security roles or\nescalate the functional capability of the application, it is critical the user\nre-authenticate.\n\n    In addition to the re-authentication requirements associated with session\nlocks, organizations may require re-authentication of individuals and/or\ndevices in other situations, including (but not limited to) the following\ncircumstances:\n\n    (i) When authenticators change;\n    (ii) When roles change;\n    (iii) When security categories of information systems change;\n    (iv) When the execution of privileged functions occurs;\n    (v) After a fixed period of time; or\n    (vi) Periodically.\n\n    Within the DoD, the minimum circumstances requiring re-authentication are\nprivilege escalation and role changes."},{"label":"check","data":"Review the organization-defined circumstances or situations\nand determine all situations where a user must re-authenticate. If there are\nany of these organization-defined circumstances under which a user is not\nrequired to re-authenticate, this is a finding."},{"label":"fix","data":"Modify and/or configure Couchbase and related applications and\ntools so that users are always required to re-authenticate when the specified\ncases needing reauthorization occur."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000389-DB-000372","gid":"V-58147","rid":"SV-72577r1_rule","stig_id":"SRG-APP-000389-DB-000372","fix_id":"F-63355r1_fix","cci":["CCI-002038"],"nist":["IA-11","Rev_4"]},"code":"control \"V-58147\" do\n  title \"Couchbase must require users to re-authenticate when\norganization-defined circumstances or situations require re-authentication.\"\n  desc  \"The DoD standard for authentication of an interactive user is the\npresentation of a Common Access Card (CAC) or other physical token bearing a\nvalid, current, DoD-issued Public Key Infrastructure (PKI) certificate, coupled\nwith a Personal Identification Number (PIN) to be entered by the user at the\nbeginning of each session and whenever re-authentication is required.\n\n    Without re-authentication, users may access resources or perform tasks for\nwhich they do not have authorization.\n\n    When applications provide the capability to change security roles or\nescalate the functional capability of the application, it is critical the user\nre-authenticate.\n\n    In addition to the re-authentication requirements associated with session\nlocks, organizations may require re-authentication of individuals and/or\ndevices in other situations, including (but not limited to) the following\ncircumstances:\n\n    (i) When authenticators change;\n    (ii) When roles change;\n    (iii) When security categories of information systems change;\n    (iv) When the execution of privileged functions occurs;\n    (v) After a fixed period of time; or\n    (vi) Periodically.\n\n    Within the DoD, the minimum circumstances requiring re-authentication are\nprivilege escalation and role changes.\n  \"\n  desc  \"check\", \"Review the organization-defined circumstances or situations\nand determine all situations where a user must re-authenticate. If there are\nany of these organization-defined circumstances under which a user is not\nrequired to re-authenticate, this is a finding.\"\n  desc  \"fix\", \"Modify and/or configure Couchbase and related applications and\ntools so that users are always required to re-authenticate when the specified\ncases needing reauthorization occur.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000389-DB-000372\"\n  tag \"gid\": \"V-58147\"\n  tag \"rid\": \"SV-72577r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000389-DB-000372\"\n  tag \"fix_id\": \"F-63355r1_fix\"\n  tag \"cci\": [\"CCI-002038\"]\n  tag \"nist\": [\"IA-11\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58147.rb"},"waiver_data":{},"results":[]},{"id":"V-32427","title":"Access to external executables must be disabled or restricted.","desc":"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.","descriptions":[{"label":"default","data":"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations."},{"label":"check","data":"Review the database for definitions of application executable objects\nstored external to the database.\n    Determine if there are methods to disable use or access, or to remove\ndefinitions for external executable objects.\n    Verify each application executable object listed is authorized by the ISSO.\nIf any are not, this is a finding."},{"label":"fix","data":"Disable use of or remove any external application executable\nobject definitions that are not authorized."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000093","gid":"V-32427","rid":"SV-42764r3_rule","stig_id":"SRG-APP-000141-DB-000093","fix_id":"F-36341r2_fix","cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32427\" do\n  title \"Access to external executables must be disabled or restricted.\"\n  desc  \"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.\n  \"\n  desc  \"check\", \"\n    Review the database for definitions of application executable objects\nstored external to the database.\n    Determine if there are methods to disable use or access, or to remove\ndefinitions for external executable objects.\n    Verify each application executable object listed is authorized by the ISSO.\nIf any are not, this is a finding.\n  \"\n  desc  \"fix\", \"Disable use of or remove any external application executable\nobject definitions that are not authorized.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000093\"\n  tag \"gid\": \"V-32427\"\n  tag \"rid\": \"SV-42764r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000093\"\n  tag \"fix_id\": \"F-36341r2_fix\"\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32427.rb"},"waiver_data":{},"results":[]},{"id":"V-32536","title":"Couchbase must isolate security functions from non-security functions.","desc":"An isolation boundary provides access control and protects the\n  integrity of the hardware, software, and firmware that perform security\n  functions.\n\n  Security functions are the hardware, software, and/or firmware of the\n  information system responsible for enforcing the system security policy and\n  supporting the isolation of code and data on which the protection is based.\n\n  Developers and implementers can increase the assurance in security\n  functions by employing well-defined security policy models; structured,\n  disciplined, and rigorous hardware and software development techniques; and\n  sound system/security engineering principles.\n\n  Database Management Systems typically separate security functionality from\n  non-security functionality via separate databases or schemas. Database objects\n  or code implementing security functionality should not be commingled with\n  objects or code implementing application logic. When security and non-security\n  functionality are commingled, users who have access to non-security\n  functionality may be able to access security functionality.","descriptions":[{"label":"default","data":"An isolation boundary provides access control and protects the\n  integrity of the hardware, software, and firmware that perform security\n  functions.\n\n  Security functions are the hardware, software, and/or firmware of the\n  information system responsible for enforcing the system security policy and\n  supporting the isolation of code and data on which the protection is based.\n\n  Developers and implementers can increase the assurance in security\n  functions by employing well-defined security policy models; structured,\n  disciplined, and rigorous hardware and software development techniques; and\n  sound system/security engineering principles.\n\n  Database Management Systems typically separate security functionality from\n  non-security functionality via separate databases or schemas. Database objects\n  or code implementing security functionality should not be commingled with\n  objects or code implementing application logic. When security and non-security\n  functionality are commingled, users who have access to non-security\n  functionality may be able to access security functionality."},{"label":"check","data":"Check Couchbase settings to determine whether objects or code implementing\nsecurity functionality are located in a separate security domain, such as a\nseparate database or schema created specifically for security functionality.\n\nIf security-related database objects or code are not kept separate, this is\na finding."},{"label":"fix","data":"Locate security-related database objects and code in a separate\n  database, schema, or other separate security domain from database objects and\n  code implementing application logic."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000233-DB-000124","gid":"V-32536","rid":"SV-42873r3_rule","stig_id":"SRG-APP-000233-DB-000124","fix_id":"F-36451r2_fix","cci":["CCI-001084"],"nist":["SC-3","Rev_4"]},"code":"control \"V-32536\" do\n  title \"Couchbase must isolate security functions from non-security functions.\"\n  desc  \"An isolation boundary provides access control and protects the\n  integrity of the hardware, software, and firmware that perform security\n  functions.\n\n  Security functions are the hardware, software, and/or firmware of the\n  information system responsible for enforcing the system security policy and\n  supporting the isolation of code and data on which the protection is based.\n\n  Developers and implementers can increase the assurance in security\n  functions by employing well-defined security policy models; structured,\n  disciplined, and rigorous hardware and software development techniques; and\n  sound system/security engineering principles.\n\n  Database Management Systems typically separate security functionality from\n  non-security functionality via separate databases or schemas. Database objects\n  or code implementing security functionality should not be commingled with\n  objects or code implementing application logic. When security and non-security\n  functionality are commingled, users who have access to non-security\n  functionality may be able to access security functionality.\n  \"\n  desc  \"check\", \"\n  Check Couchbase settings to determine whether objects or code implementing\n  security functionality are located in a separate security domain, such as a\n  separate database or schema created specifically for security functionality.\n  \n  If security-related database objects or code are not kept separate, this is\n  a finding.\n  \"\n  desc  \"fix\", \"Locate security-related database objects and code in a separate\n  database, schema, or other separate security domain from database objects and\n  code implementing application logic.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000233-DB-000124\"\n  tag \"gid\": \"V-32536\"\n  tag \"rid\": \"SV-42873r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000233-DB-000124\"\n  tag \"fix_id\": \"F-36451r2_fix\"\n  tag \"cci\": [\"CCI-001084\"]\n  tag \"nist\": [\"SC-3\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Check Couchbase settings to determine whether objects or code implementing\n  security functionality are located in a separate security domain.\" do\n    skip \"This test requires a Manual Review: Check Couchbase settings to determine whether objects or code implementing\n    security functionality are located in a separate security domain.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32536.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Check Couchbase settings to determine whether objects or code implementing\n  security functionality are located in a separate security domain.","run_time":3.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Check Couchbase settings to determine whether objects or code implementing\n    security functionality are located in a separate security domain."}]},{"id":"V-32476","title":"Couchbase must enforce authorized access to all PKI private keys\nstored/utilized by Couchbase.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\nPKI certificate-based authentication is performed by requiring the certificate\nholder to cryptographically prove possession of the corresponding private key.\n\n    If the private key is stolen, an attacker can use the private key(s) to\nimpersonate the certificate holder.  In cases where Couchbase-stored private\nkeys are used to authenticate Couchbase to the\nsystem‚Äôs clients, loss of the corresponding private\nkeys would allow an attacker to successfully perform undetected man in the\nmiddle attacks against Couchbase system and its clients.\n\n    Both the holder of a digital certificate and the issuing authority must\ntake careful measures to protect the corresponding private key. Private keys\nshould always be generated and protected in FIPS 140-2 validated cryptographic\nmodules.\n\n    All access to the private key(s) of Couchbase must be restricted to\nauthorized and authenticated users. If unauthorized users have access to one or\nmore of Couchbase's private keys, an attacker could gain access to the key(s)\nand use them to impersonate the database on the network or otherwise perform\nunauthorized actions.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\nPKI certificate-based authentication is performed by requiring the certificate\nholder to cryptographically prove possession of the corresponding private key.\n\n    If the private key is stolen, an attacker can use the private key(s) to\nimpersonate the certificate holder.  In cases where Couchbase-stored private\nkeys are used to authenticate Couchbase to the\nsystem‚Äôs clients, loss of the corresponding private\nkeys would allow an attacker to successfully perform undetected man in the\nmiddle attacks against Couchbase system and its clients.\n\n    Both the holder of a digital certificate and the issuing authority must\ntake careful measures to protect the corresponding private key. Private keys\nshould always be generated and protected in FIPS 140-2 validated cryptographic\nmodules.\n\n    All access to the private key(s) of Couchbase must be restricted to\nauthorized and authenticated users. If unauthorized users have access to one or\nmore of Couchbase's private keys, an attacker could gain access to the key(s)\nand use them to impersonate the database on the network or otherwise perform\nunauthorized actions."},{"label":"check","data":"If Couchbase is not using PKI-based authentication, this check is Not\nApplicable (NA).\n    Verify ownership, group ownership, and permissions on the file given for\nthe private key (default \"ca.key\").\n    Run following command and review its output:\n    ls -al <Private Key File Path>/ca.key\n    Example Output:\n    -rw------- 1 couchbase couchbase 566 Apr 26 20:20  <Private Key File\nPath>/ca.key\n    If the user owner and group owner are not both \"couchbase\", this is a\nfinding.\n    If the file is more permissive than \"600\", this is a finding.\n    Verify ownership, group ownership, and permissions on the file given for CA\nfile (default \"ca.pem\").\n    Run following command and review its output:\n    ls -al <CA File Path>/ca.pem\n    Example Output:\n    -rw------- 1 couchbase couchbase 566 Apr 26 20:20  <CA File Path>/ca.pem\n    If the user owner and group owner are not both \"couchbase\", this is a\nfinding.\n    If the file is more permissive than \"600\", this is a finding."},{"label":"fix","data":"Store all Couchbase PKI private keys in a FIPS 140-2 validated\ncryptographic module.\n    Ensure access to Couchbase PKI private keys is restricted to only\nauthenticated and authorized users.\n    As the root or sudo user, execute the following commands to set the\nownership and permissions of the private key and certificate files:\n    $ chown couchbase:couchbase <Private Key File Path>/ca.key\n    $ chmod 600 /etc/ssl/mongodb.pem\n    $ chown couchbase:couchbase <Private Key File Path>/ca.pem\n    $ chmod 600  <Private Key File Path>/ca.pem"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000176-DB-000068","gid":"V-32476","rid":"SV-42813r3_rule","stig_id":"SRG-APP-000176-DB-000068","fix_id":"F-36391r3_fix","cci":["CCI-000186"],"nist":["IA-5 (2) (b)","Rev_4"]},"code":"control \"V-32476\" do\n  title \"Couchbase must enforce authorized access to all PKI private keys\nstored/utilized by Couchbase.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\nPKI certificate-based authentication is performed by requiring the certificate\nholder to cryptographically prove possession of the corresponding private key.\n\n    If the private key is stolen, an attacker can use the private key(s) to\nimpersonate the certificate holder.  In cases where Couchbase-stored private\nkeys are used to authenticate Couchbase to the\nsystem\\xE2\\x80\\x9A\\xC3\\x84\\xC3\\xB4s clients, loss of the corresponding private\nkeys would allow an attacker to successfully perform undetected man in the\nmiddle attacks against Couchbase system and its clients.\n\n    Both the holder of a digital certificate and the issuing authority must\ntake careful measures to protect the corresponding private key. Private keys\nshould always be generated and protected in FIPS 140-2 validated cryptographic\nmodules.\n\n    All access to the private key(s) of Couchbase must be restricted to\nauthorized and authenticated users. If unauthorized users have access to one or\nmore of Couchbase's private keys, an attacker could gain access to the key(s)\nand use them to impersonate the database on the network or otherwise perform\nunauthorized actions.\n  \"\n  desc  \"check\", \"\n    If Couchbase is not using PKI-based authentication, this check is Not\nApplicable (NA).\n    Verify ownership, group ownership, and permissions on the file given for\nthe private key (default \\\"ca.key\\\").\n    Run following command and review its output:\n    ls -al <Private Key File Path>/ca.key\n    Example Output:\n    -rw------- 1 couchbase couchbase 566 Apr 26 20:20  <Private Key File\nPath>/ca.key\n    If the user owner and group owner are not both \\\"couchbase\\\", this is a\nfinding.\n    If the file is more permissive than \\\"600\\\", this is a finding.\n    Verify ownership, group ownership, and permissions on the file given for CA\nfile (default \\\"ca.pem\\\").\n    Run following command and review its output:\n    ls -al <CA File Path>/ca.pem\n    Example Output:\n    -rw------- 1 couchbase couchbase 566 Apr 26 20:20  <CA File Path>/ca.pem\n    If the user owner and group owner are not both \\\"couchbase\\\", this is a\nfinding.\n    If the file is more permissive than \\\"600\\\", this is a finding.\n  \"\n  desc  \"fix\", \"\n    Store all Couchbase PKI private keys in a FIPS 140-2 validated\ncryptographic module.\n    Ensure access to Couchbase PKI private keys is restricted to only\nauthenticated and authorized users.\n    As the root or sudo user, execute the following commands to set the\nownership and permissions of the private key and certificate files:\n    $ chown couchbase:couchbase <Private Key File Path>/ca.key\n    $ chmod 600 /etc/ssl/mongodb.pem\n    $ chown couchbase:couchbase <Private Key File Path>/ca.pem\n    $ chmod 600  <Private Key File Path>/ca.pem\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000176-DB-000068\"\n  tag \"gid\": \"V-32476\"\n  tag \"rid\": \"SV-42813r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000176-DB-000068\"\n  tag \"fix_id\": \"F-36391r3_fix\"\n  tag \"cci\": [\"CCI-000186\"]\n  tag \"nist\": [\"IA-5 (2) (b)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32476.rb"},"waiver_data":{},"results":[]},{"id":"V-58075","title":"Couchbase must generate audit records when privileges/permissions are\n  modified.","desc":"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, modifying permissions is typically done via the\n  GRANT, REVOKE, and DENY commands.","descriptions":[{"label":"default","data":"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, modifying permissions is typically done via the\n  GRANT, REVOKE, and DENY commands."},{"label":"check","data":"If there is no distinction in the Couchbase's security architecture between\nmodifying permissions on the one hand, and adding and deleting permissions on\nthe other hand, this is not a finding.\n  Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n  First, as the Full Admin, create a user account by executing the following\n  command:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n    -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n    --rbac-name \"John Doe\" --roles replication_admin \\\n    --auth-domain local\n  Then, as the Full Admin, grant the John Doe user a new role:\n    $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n    --script=\"GRANT cluster_admin TO jdoe\"\n  Verify the events were logged with the following command:\n    $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n    Output:\n    {\"description\":\"A N1QL GRANT ROLE statement was\n    executed\",\"id\":28685,\"isAdHoc\":true,\"metrics\":{\"elapsedTime\":\"163.459219ms\",\n    \"executionTime\":\"163.397491ms\",\"resultCount\":0,\"resultSize\":0},\"name\":\"GRANT\n    ROLE statement\",\"node\":\"127.0.0.1:8091\",\"real_use\"rid\"\":{\"domain\":\"local\",\n    \"user\":\"admin\"},\"remote\":{\"ip\":\"127.0.0.1\",\"port\":38110},\"requestId\":\n    \"a3344468-e5a2-44ba-af49-0fd858f20f7b\",\"statement\":\"GRANT cluster_admin TO\n    jdoe;;\",\"status\":\"success\",\"timestamp\":\"2020-08-21T16:37:40.312Z\",\"userAgent\":\n    \"Go-http-client/1.1 (CBQ/2.0)\"}\nIf the above steps cannot verify that audit records are produced when privileges/permissions/role \nmemberships are modified, this is a finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are modified.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n     $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n     --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n     --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n     $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n     --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n     604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Enable the required set of auditable events by doing the following:\n    As the Full Admin, log into the cluster and use  the following documentation to \n    enable all on the \"Query and Index Services Event:\n      - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000328","gid":"V-58075","rid":"SV-72505r2_rule","stig_id":"SRG-APP-000495-DB-000328","fix_id":"F-63283r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58075\" do\n  title \"Couchbase must generate audit records when privileges/permissions are\n  modified.\"\n  \n  desc  \"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, modifying permissions is typically done via the\n  GRANT, REVOKE, and DENY commands.\"\n\n  desc  \"check\", \"\n  If there is no distinction in the Couchbase's security architecture between\n  modifying permissions on the one hand, and adding and deleting permissions on\n  the other hand, this is not a finding.\n    Couchbase auditing is capable of logging all reads, creations,\n    modifications, and deletions.\n    First, as the Full Admin, create a user account by executing the following\n    command:\n      $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n      -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n      --rbac-name \\\"John Doe\\\" --roles replication_admin \\\\\n      --auth-domain local\n    Then, as the Full Admin, grant the John Doe user a new role:\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n      --script=\\\"GRANT cluster_admin TO jdoe\\\"\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:\n      {\\\"description\\\":\\\"A N1QL GRANT ROLE statement was\n      executed\\\",\\\"id\\\":28685,\\\"isAdHoc\\\":true,\\\"metrics\\\":{\\\"elapsedTime\\\":\\\"163.459219ms\\\",\n      \\\"executionTime\\\":\\\"163.397491ms\\\",\\\"resultCount\\\":0,\\\"resultSize\\\":0},\\\"name\\\":\\\"GRANT\n      ROLE statement\\\",\\\"node\\\":\\\"127.0.0.1:8091\\\",\\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\n      \\\"user\\\":\\\"admin\\\"},\\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":38110},\\\"requestId\\\":\n      \\\"a3344468-e5a2-44ba-af49-0fd858f20f7b\\\",\\\"statement\\\":\\\"GRANT cluster_admin TO\n      jdoe;;\\\",\\\"status\\\":\\\"success\\\",\\\"timestamp\\\":\\\"2020-08-21T16:37:40.312Z\\\",\\\"userAgent\\\":\n      \\\"Go-http-client/1.1 (CBQ/2.0)\\\"}\n  If the above steps cannot verify that audit records are produced when privileges/permissions/role \n  memberships are modified, this is a finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when privileges/permissions are modified.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n       --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n       --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n       --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n       604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable the required set of auditable events by doing the following:\n      As the Full Admin, log into the cluster and use  the following documentation to \n      enable all on the \\\"Query and Index Services Event:\n        - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\"\n        \n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000328\"\n  tag \"gid\": \"V-58075\"\n  tag \"rid\": \"SV-72505r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000328\"\n  tag \"fix_id\": \"F-63283r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Add the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Grant permissions to jdoe user. The\" do \n    subject { command(\"cbq -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --engine=http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}\n    --script='GRANT cluster_admin TO jdoe'\")}\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'A N1QL GRANT ROLE' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"success\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58075.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Add the jdoe user. The exit_status is expected to eq 0","run_time":0.100209,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Grant permissions to jdoe user. The exit_status is expected to eq 0","run_time":0.02402,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"success\"/","run_time":0.021351,"start_time":"2020-09-28T22:09:09-04:00","message":"expected \"\" to match /\"success\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"success\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.104977,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58135","title":"Couchbase must prohibit user installation of logic modules (stored\nprocedures, functions, triggers, views, etc.) without explicit privileged\nstatus.","desc":"Allowing regular users to install software, without explicit\nprivileges, creates the risk that untested or potentially malicious software\nwill be installed on the system. Explicit privileges (escalated or\nadministrative privileges) provide the regular user with explicit capabilities\nand control that exceed the rights of a regular user.\n\n    Couchbase functionality and the nature and requirements of databases will\nvary; so while users are not permitted to install unapproved software, there\nmay be instances where the organization allows the user to install approved\nsoftware packages such as from an approved software repository. The\nrequirements for production servers will be more restrictive than those used\nfor development and research.\n\n    Couchbase must enforce software installation by users based upon what types\nof software installations are permitted (e.g., updates and security patches to\nexisting software) and what types of installations are prohibited (e.g.,\nsoftware whose pedigree with regard to being potentially malicious is unknown\nor suspect) by the organization).\n\n    In the case of a database management system, this requirement covers stored\nprocedures, functions, triggers, views, etc.","descriptions":[{"label":"default","data":"Allowing regular users to install software, without explicit\nprivileges, creates the risk that untested or potentially malicious software\nwill be installed on the system. Explicit privileges (escalated or\nadministrative privileges) provide the regular user with explicit capabilities\nand control that exceed the rights of a regular user.\n\n    Couchbase functionality and the nature and requirements of databases will\nvary; so while users are not permitted to install unapproved software, there\nmay be instances where the organization allows the user to install approved\nsoftware packages such as from an approved software repository. The\nrequirements for production servers will be more restrictive than those used\nfor development and research.\n\n    Couchbase must enforce software installation by users based upon what types\nof software installations are permitted (e.g., updates and security patches to\nexisting software) and what types of installations are prohibited (e.g.,\nsoftware whose pedigree with regard to being potentially malicious is unknown\nor suspect) by the organization).\n\n    In the case of a database management system, this requirement covers stored\nprocedures, functions, triggers, views, etc."},{"label":"check","data":"If Couchbase supports only software development, experimentation and/or\ndeveloper-level testing (that is, excluding production systems, integration\ntesting, stress testing, and user acceptance testing), this is not a finding.\n    Review Couchbase and database security settings with respect to\nnon-administrative users ability to create, alter, or replace logic modules,\nto include but not necessarily only stored procedures, functions, triggers, and\nviews.\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If any such permissions exist and are not documented and approved, this is\na finding."},{"label":"fix","data":"Document and obtain approval for any non-administrative users who require\nthe ability to create, alter or replace logic modules.\n    Implement the approved permissions. Revoke any unapproved permissions.\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000378-DB-000365","gid":"V-58135","rid":"SV-72565r1_rule","stig_id":"SRG-APP-000378-DB-000365","fix_id":"F-63343r1_fix","cci":["CCI-001812"],"nist":["CM-11 (2)","Rev_4"]},"code":"control \"V-58135\" do\n  title \"Couchbase must prohibit user installation of logic modules (stored\nprocedures, functions, triggers, views, etc.) without explicit privileged\nstatus.\"\n  desc  \"Allowing regular users to install software, without explicit\nprivileges, creates the risk that untested or potentially malicious software\nwill be installed on the system. Explicit privileges (escalated or\nadministrative privileges) provide the regular user with explicit capabilities\nand control that exceed the rights of a regular user.\n\n    Couchbase functionality and the nature and requirements of databases will\nvary; so while users are not permitted to install unapproved software, there\nmay be instances where the organization allows the user to install approved\nsoftware packages such as from an approved software repository. The\nrequirements for production servers will be more restrictive than those used\nfor development and research.\n\n    Couchbase must enforce software installation by users based upon what types\nof software installations are permitted (e.g., updates and security patches to\nexisting software) and what types of installations are prohibited (e.g.,\nsoftware whose pedigree with regard to being potentially malicious is unknown\nor suspect) by the organization).\n\n    In the case of a database management system, this requirement covers stored\nprocedures, functions, triggers, views, etc.\n  \"\n  desc  \"check\", \"\n    If Couchbase supports only software development, experimentation and/or\ndeveloper-level testing (that is, excluding production systems, integration\ntesting, stress testing, and user acceptance testing), this is not a finding.\n    Review Couchbase and database security settings with respect to\nnon-administrative users ability to create, alter, or replace logic modules,\nto include but not necessarily only stored procedures, functions, triggers, and\nviews.\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If any such permissions exist and are not documented and approved, this is\na finding.\n  \"\n  desc  \"fix\", \"\n    Document and obtain approval for any non-administrative users who require\nthe ability to create, alter or replace logic modules.\n    Implement the approved permissions. Revoke any unapproved permissions.\n    To remove undocumented accounts, execute the following command:\n      $ couchbase-cli user-manage -u <Full Admin> -p <Password> --cluster\n<host>:<port> --set --delete --rbac-username <username> --auth-domain <domain>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000378-DB-000365\"\n  tag \"gid\": \"V-58135\"\n  tag \"rid\": \"SV-72565r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000378-DB-000365\"\n  tag \"fix_id\": \"F-63343r1_fix\"\n  tag \"cci\": [\"CCI-001812\"]\n  tag \"nist\": [\"CM-11 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58135.rb"},"waiver_data":{},"results":[]},{"id":"V-58101","title":"Couchbase must generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000498-DB-000347","gid":"V-58101","rid":"SV-72531r1_rule","stig_id":"SRG-APP-000498-DB-000347","fix_id":"F-63309r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58101\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\nmodify categories of information (e.g., classification levels/security levels)\noccur.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000498-DB-000347\"\n  tag \"gid\": \"V-58101\"\n  tag \"rid\": \"SV-72531r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000498-DB-000347\"\n  tag \"fix_id\": \"F-63309r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58101.rb"},"waiver_data":{},"results":[]},{"id":"V-58041","title":"Couchbase must associate organization-defined types of security labels\n  having organization-defined security label values with information in\n  transmission.","desc":"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code.","descriptions":[{"label":"default","data":"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code."},{"label":"check","data":"If security labeling is not required, this is not a finding.\nIf security labeling requirements have been specified, but the security\nlabeling is not implemented or does not reliably maintain labels on information\nin transmission, this is a finding."},{"label":"fix","data":"Enable Couchbase features, deploy third-party software, or add\n  custom data structures, data elements and application code, to provide reliable\n  security labeling of information in transmission."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000314-DB-000310","gid":"V-58041","rid":"SV-72471r1_rule","stig_id":"SRG-APP-000314-DB-000310","fix_id":"F-63249r1_fix","cci":["CCI-002264"],"nist":["AC-16 a","Rev_4"]},"code":"control \"V-58041\" do\n  title \"Couchbase must associate organization-defined types of security labels\n  having organization-defined security label values with information in\n  transmission.\"\n  desc  \"Without the association of security labels to information, there is no\n  basis for Couchbase to make security-related access-control decisions.\n\n  Security labels are abstractions representing the basic properties or\n  characteristics of an entity (e.g., subjects and objects) with respect to\n  safeguarding information.\n\n  These labels are typically associated with internal data structures (e.g.,\n  tables, rows) within the database and are used to enable the implementation of\n  access control and flow control policies, reflect special dissemination,\n  handling or distribution instructions, or support other aspects of the\n  information security policy.\n\n  One example includes marking data as classified or FOUO. These security\n  labels may be assigned manually or during data processing, but, either way, it\n  is imperative these assignments are maintained while the data is in storage. If\n  the security labels are lost when the data is stored, there is the risk of a\n  data compromise.\n\n  The mechanism used to support security labeling may be a feature of\n  Couchbase product, a third-party product, or custom application code.\n  \"\n  desc  \"check\", \"\n  If security labeling is not required, this is not a finding.\n  If security labeling requirements have been specified, but the security\n  labeling is not implemented or does not reliably maintain labels on information\n  in transmission, this is a finding.\n  \"\n  desc  \"fix\", \"Enable Couchbase features, deploy third-party software, or add\n  custom data structures, data elements and application code, to provide reliable\n  security labeling of information in transmission.\"\n    impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000314-DB-000310\"\n  tag \"gid\": \"V-58041\"\n  tag \"rid\": \"SV-72471r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000314-DB-000310\"\n  tag \"fix_id\": \"F-63249r1_fix\"\n  tag \"cci\": [\"CCI-002264\"]\n  tag \"nist\": [\"AC-16 a\", \"Rev_4\"]\n  \n  describe \"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58041.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required","run_time":4.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation and check if security labeling is required"}]},{"id":"V-32570","title":"Couchbase must provide non-privileged users with error messages that\n  provide information necessary for corrective actions without revealing\n  information that could be exploited by adversaries.","desc":"Any Couchbase or associated application providing too much information\n  in error messages on the screen or printout risks compromising the data and\n  security of the system. The structure and content of error messages need to be\n  carefully considered by the organization and development team.\n\n  Databases can inadvertently provide a wealth of information to an attacker\n  through improperly handled error messages. In addition to sensitive business or\n  personal information, database errors can provide host names, IP addresses,\n  user names, and other system information not required for troubleshooting but\n  very useful to someone targeting the system.\n\n  Carefully consider the structure/content of error messages. The extent to\n  which information systems are able to identify and handle error conditions is\n  guided by organizational policy and operational requirements. Information that\n  could be exploited by adversaries includes, for example, logon attempts with\n  passwords entered by mistake as the username, mission/business information that\n  can be derived from (if not stated explicitly by) information recorded, and\n  personal information, such as account numbers, social security numbers, and\n  credit card numbers.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"Any Couchbase or associated application providing too much information\n  in error messages on the screen or printout risks compromising the data and\n  security of the system. The structure and content of error messages need to be\n  carefully considered by the organization and development team.\n\n  Databases can inadvertently provide a wealth of information to an attacker\n  through improperly handled error messages. In addition to sensitive business or\n  personal information, database errors can provide host names, IP addresses,\n  user names, and other system information not required for troubleshooting but\n  very useful to someone targeting the system.\n\n  Carefully consider the structure/content of error messages. The extent to\n  which information systems are able to identify and handle error conditions is\n  guided by organizational policy and operational requirements. Information that\n  could be exploited by adversaries includes, for example, logon attempts with\n  passwords entered by mistake as the username, mission/business information that\n  can be derived from (if not stated explicitly by) information recorded, and\n  personal information, such as account numbers, social security numbers, and\n  credit card numbers.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered."},{"label":"check","data":"Check Couchbase settings and custom database code to verify that error\nmessages do not contain information beyond what is needed for troubleshooting\nthe issue.\n\nIf database errors contain PII data, sensitive business data, or\ninformation useful for identifying the host system or database structure, this\nis a finding."},{"label":"fix","data":"Configure Couchbase settings, custom database code, and\n  associated application code not to divulge sensitive information or information\n  useful for system identification in error messages."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-DB-000162","gid":"V-32570","rid":"SV-42907r4_rule","stig_id":"SRG-APP-000266-DB-000162","fix_id":"F-36485r2_fix","cci":["CCI-001312"],"nist":["SI-11 a","Rev_4"]},"code":"control \"V-32570\" do\n  title \"Couchbase must provide non-privileged users with error messages that\n  provide information necessary for corrective actions without revealing\n  information that could be exploited by adversaries.\"\n  desc  \"Any Couchbase or associated application providing too much information\n  in error messages on the screen or printout risks compromising the data and\n  security of the system. The structure and content of error messages need to be\n  carefully considered by the organization and development team.\n\n  Databases can inadvertently provide a wealth of information to an attacker\n  through improperly handled error messages. In addition to sensitive business or\n  personal information, database errors can provide host names, IP addresses,\n  user names, and other system information not required for troubleshooting but\n  very useful to someone targeting the system.\n\n  Carefully consider the structure/content of error messages. The extent to\n  which information systems are able to identify and handle error conditions is\n  guided by organizational policy and operational requirements. Information that\n  could be exploited by adversaries includes, for example, logon attempts with\n  passwords entered by mistake as the username, mission/business information that\n  can be derived from (if not stated explicitly by) information recorded, and\n  personal information, such as account numbers, social security numbers, and\n  credit card numbers.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n  Check Couchbase settings and custom database code to verify that error\n  messages do not contain information beyond what is needed for troubleshooting\n  the issue.\n\n  If database errors contain PII data, sensitive business data, or\n  information useful for identifying the host system or database structure, this\n  is a finding.\n  \"\n  desc  \"fix\", \"Configure Couchbase settings, custom database code, and\n  associated application code not to divulge sensitive information or information\n  useful for system identification in error messages.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000266-DB-000162\"\n  tag \"gid\": \"V-32570\"\n  tag \"rid\": \"SV-42907r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000266-DB-000162\"\n  tag \"fix_id\": \"F-36485r2_fix\"\n  tag \"cci\": [\"CCI-001312\"]\n  tag \"nist\": [\"SI-11 a\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Check Couchbase settings and custom database code to verify that error\n  messages do not contain information beyond what is needed for troubleshooting the issue.\" do\n    skip \"This test requires a Manual Review: Check Couchbase settings and custom database code to verify that error\n    messages do not contain information beyond what is needed for troubleshooting the issue.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32570.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Check Couchbase settings and custom database code to verify that error\n  messages do not contain information beyond what is needed for troubleshooting the issue.","run_time":2.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Check Couchbase settings and custom database code to verify that error\n    messages do not contain information beyond what is needed for troubleshooting the issue."}]},{"id":"V-58051","title":"Couchbase must provide centralized configuration of the content to be\n  captured in audit records generated by all components of the Couchbase.","desc":"If the configuration of Couchbase's auditing is spread across multiple\n  locations in the database management software, or across multiple commands,\n  only loosely related, it is harder to use and takes longer to reconfigure in\n  response to events.\n\n  Couchbase must provide a unified tool for audit configuration.","descriptions":[{"label":"default","data":"If the configuration of Couchbase's auditing is spread across multiple\n  locations in the database management software, or across multiple commands,\n  only loosely related, it is harder to use and takes longer to reconfigure in\n  response to events.\n\n  Couchbase must provide a unified tool for audit configuration."},{"label":"check","data":"Couchbase allows centralized configuration of auditing through the web\nconsole.\nVerify that the web console is not disabled.\nAs the Full Admin, verify that HTTPS access is not disabled with the\nfollowing command:\n$ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security\n\nReview the output of the command. If disableUIOverHttps is set to\ntrue, this is finding."},{"label":"fix","data":"Modify and configure each non-compliant application, tool, or feature\nassociated with Couchbase/database so that it does not display authentication\nsecrets.\nThe web console is available by default, unless both disableUIOverHttp\nand disableUIOverHttps are both set to true.\n\nIf disableUIOverHttps is set to true, as the Full Admin, change\nthis value to false with the following command:\n$  curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security -d disableUIOverHttps=false"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000356-DB-000315","gid":"V-58051","rid":"SV-72481r1_rule","stig_id":"SRG-APP-000356-DB-000315","fix_id":"F-63259r1_fix","cci":["CCI-001844"],"nist":["AU-3 (2)","Rev_4"]},"code":"control \"V-58051\" do\n  title \"Couchbase must provide centralized configuration of the content to be\n  captured in audit records generated by all components of the Couchbase.\"\n  desc  \"If the configuration of Couchbase's auditing is spread across multiple\n  locations in the database management software, or across multiple commands,\n  only loosely related, it is harder to use and takes longer to reconfigure in\n  response to events.\n\n  Couchbase must provide a unified tool for audit configuration.\n  \"\n  desc  \"check\", \"\n  Couchbase allows centralized configuration of auditing through the web\n  console.\n  Verify that the web console is not disabled.\n  As the Full Admin, verify that HTTPS access is not disabled with the\n  following command:\n  $ curl -v -X GET -u <Full Admin>:<Password>\n  http://<host>:<port>/settings/security\n  \n  Review the output of the command. If disableUIOverHttps is set to\n  true, this is finding.\n  \"\n  desc  \"fix\", \"\n  Modify and configure each non-compliant application, tool, or feature\n  associated with Couchbase/database so that it does not display authentication\n  secrets.\n  The web console is available by default, unless both disableUIOverHttp\n  and disableUIOverHttps are both set to true.\n  \n  If disableUIOverHttps is set to true, as the Full Admin, change\n  this value to false with the following command:\n  $  curl -v -X GET -u <Full Admin>:<Password>\n  http://<host>:<port>/settings/security -d disableUIOverHttps=false\n\n    \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000356-DB-000315\"\n  tag \"gid\": \"V-58051\"\n  tag \"rid\": \"SV-72481r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000356-DB-000315\"\n  tag \"fix_id\": \"F-63259r1_fix\"\n  tag \"cci\": [\"CCI-001844\"]\n  tag \"nist\": [\"AU-3 (2)\", \"Rev_4\"]\n\n\n  describe json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/security\") do\n    its('disableUIOverHttps') { should eq false }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58051.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"JSON from command: curl -v -X GET -u admin:@dminP@asswd2020 http://localhost:8091/settings/security disableUIOverHttps is expected to eq false","run_time":9.4e-05,"start_time":"2020-09-28T22:09:09-04:00"}]},{"id":"V-58111","title":"Couchbase must generate audit records showing starting and ending time\nfor user access to the database(s).","desc":"For completeness of forensic analysis, it is necessary to know how\nlong a user's (or other principal's) connection to Couchbase lasts. This can be\nachieved by recording disconnections, in addition to logons/connections, in the\naudit logs.\n\n    Disconnection may be initiated by the user or forced by the system (as in a\ntimeout) or result from a system or network failure. To the greatest extent\npossible, all disconnections must be logged.","descriptions":[{"label":"default","data":"For completeness of forensic analysis, it is necessary to know how\nlong a user's (or other principal's) connection to Couchbase lasts. This can be\nachieved by recording disconnections, in addition to logons/connections, in the\naudit logs.\n\n    Disconnection may be initiated by the user or forced by the system (as in a\ntimeout) or result from a system or network failure. To the greatest extent\npossible, all disconnections must be logged."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging\nlogins and logouts with timestamps by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen logins and logouts occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000505-DB-000352","gid":"V-58111","rid":"SV-72541r1_rule","stig_id":"SRG-APP-000505-DB-000352","fix_id":"F-63319r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58111\" do\n  title \"Couchbase must generate audit records showing starting and ending time\nfor user access to the database(s).\"\n  desc  \"For completeness of forensic analysis, it is necessary to know how\nlong a user's (or other principal's) connection to Couchbase lasts. This can be\nachieved by recording disconnections, in addition to logons/connections, in the\naudit logs.\n\n    Disconnection may be initiated by the user or forced by the system (as in a\ntimeout) or result from a system or network failure. To the greatest extent\npossible, all disconnections must be logged.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging\nlogins and logouts with timestamps by default.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce audit records\nwhen logins and logouts occur.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000505-DB-000352\"\n  tag \"gid\": \"V-58111\"\n  tag \"rid\": \"SV-72541r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000505-DB-000352\"\n  tag \"fix_id\": \"F-63319r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58111.rb"},"waiver_data":{},"results":[]},{"id":"V-32414","title":"Couchbase software installation account must be restricted to\nauthorized users.","desc":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can have significant effects on the\noverall security of the system.\n\n    If the system were to allow any user to make changes to software libraries,\nthen those changes might be implemented without undergoing the appropriate\ntesting and approvals that are part of a robust change management process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed\naccess to information system components for purposes of initiating changes,\nincluding upgrades and modifications.\n\n    DBA and other privileged administrative or application owner accounts are\ngranted privileges that allow actions that can have a great impact on database\nsecurity and operation. It is especially important to grant privileged access\nto only those persons who are qualified and authorized to use them.","descriptions":[{"label":"default","data":"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can have significant effects on the\noverall security of the system.\n\n    If the system were to allow any user to make changes to software libraries,\nthen those changes might be implemented without undergoing the appropriate\ntesting and approvals that are part of a robust change management process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed\naccess to information system components for purposes of initiating changes,\nincluding upgrades and modifications.\n\n    DBA and other privileged administrative or application owner accounts are\ngranted privileges that allow actions that can have a great impact on database\nsecurity and operation. It is especially important to grant privileged access\nto only those persons who are qualified and authorized to use them."},{"label":"check","data":"Review procedures for controlling, granting access to, and tracking use of\nthe Couchbase software installation account.\n    If access or use of this account is not restricted to the minimum number of\npersonnel required or if unauthorized access to the account has been granted,\nthis is a finding."},{"label":"fix","data":"Develop, document, and implement procedures to restrict and\ntrack use of the Couchbase software installation account."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000198","gid":"V-32414","rid":"SV-42751r3_rule","stig_id":"SRG-APP-000133-DB-000198","fix_id":"F-36329r2_fix","cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32414\" do\n  title \"Couchbase software installation account must be restricted to\nauthorized users.\"\n  desc  \"When dealing with change control issues, it should be noted any\nchanges to the hardware, software, and/or firmware components of the\ninformation system and/or application can have significant effects on the\noverall security of the system.\n\n    If the system were to allow any user to make changes to software libraries,\nthen those changes might be implemented without undergoing the appropriate\ntesting and approvals that are part of a robust change management process.\n\n    Accordingly, only qualified and authorized individuals shall be allowed\naccess to information system components for purposes of initiating changes,\nincluding upgrades and modifications.\n\n    DBA and other privileged administrative or application owner accounts are\ngranted privileges that allow actions that can have a great impact on database\nsecurity and operation. It is especially important to grant privileged access\nto only those persons who are qualified and authorized to use them.\n  \"\n  desc  \"check\", \"\n    Review procedures for controlling, granting access to, and tracking use of\nthe Couchbase software installation account.\n    If access or use of this account is not restricted to the minimum number of\npersonnel required or if unauthorized access to the account has been granted,\nthis is a finding.\n  \"\n  desc  \"fix\", \"Develop, document, and implement procedures to restrict and\ntrack use of the Couchbase software installation account.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000198\"\n  tag \"gid\": \"V-32414\"\n  tag \"rid\": \"SV-42751r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000198\"\n  tag \"fix_id\": \"F-36329r2_fix\"\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32414.rb"},"waiver_data":{},"results":[]},{"id":"V-58125","title":"Couchbase must enforce access restrictions associated with changes to\nthe configuration of Couchbase or database(s).","desc":"Failure to provide logical access restrictions associated with changes\nto configuration may have significant effects on the overall security of the\nsystem.\n\n    When dealing with access restrictions pertaining to change control, it\nshould be noted that any changes to the hardware, software, and/or firmware\ncomponents of the information system can potentially have significant effects\non the overall security of the system.\n\n    Accordingly, only qualified and authorized individuals should be allowed to\nobtain access to system components for the purposes of initiating changes,\nincluding upgrades and modifications.","descriptions":[{"label":"default","data":"Failure to provide logical access restrictions associated with changes\nto configuration may have significant effects on the overall security of the\nsystem.\n\n    When dealing with access restrictions pertaining to change control, it\nshould be noted that any changes to the hardware, software, and/or firmware\ncomponents of the information system can potentially have significant effects\non the overall security of the system.\n\n    Accordingly, only qualified and authorized individuals should be allowed to\nobtain access to system components for the purposes of initiating changes,\nincluding upgrades and modifications."},{"label":"check","data":"Review Couchbase vendor documentation with respect to its ability to\nenforce access restrictions associated with changes to the configuration of\nCouchbase or database(s).\n    If it is not able to do this, this is a finding.\n    Review the security configuration of Couchbase and database(s).\n    If it does not enforce access restrictions associated with changes to the\nconfiguration of Couchbase or database(s), this is a finding.\n    Obtain the list of users in those group(s)/roles:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    Identify the individuals authorized to modify configurations.\n    If unauthorized access to the configurations has been granted, this is a\nfinding."},{"label":"fix","data":"Ensure Couchbase is capable of enforcing access restrictions associated\nwith changes to the configuration of Couchbase or database(s).\n    Configure Couchbase to enforce access restrictions associated with changes\nto the configuration of Couchbase or database(s)."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000380-DB-000360","gid":"V-58125","rid":"SV-72555r1_rule","stig_id":"SRG-APP-000380-DB-000360","fix_id":"F-63333r1_fix","cci":["CCI-001813"],"nist":["CM-5 (1)","Rev_4"]},"code":"control \"V-58125\" do\n  title \"Couchbase must enforce access restrictions associated with changes to\nthe configuration of Couchbase or database(s).\"\n  desc  \"Failure to provide logical access restrictions associated with changes\nto configuration may have significant effects on the overall security of the\nsystem.\n\n    When dealing with access restrictions pertaining to change control, it\nshould be noted that any changes to the hardware, software, and/or firmware\ncomponents of the information system can potentially have significant effects\non the overall security of the system.\n\n    Accordingly, only qualified and authorized individuals should be allowed to\nobtain access to system components for the purposes of initiating changes,\nincluding upgrades and modifications.\n  \"\n  desc  \"check\", \"\n    Review Couchbase vendor documentation with respect to its ability to\nenforce access restrictions associated with changes to the configuration of\nCouchbase or database(s).\n    If it is not able to do this, this is a finding.\n    Review the security configuration of Couchbase and database(s).\n    If it does not enforce access restrictions associated with changes to the\nconfiguration of Couchbase or database(s), this is a finding.\n    Obtain the list of users in those group(s)/roles:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    Identify the individuals authorized to modify configurations.\n    If unauthorized access to the configurations has been granted, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    Ensure Couchbase is capable of enforcing access restrictions associated\nwith changes to the configuration of Couchbase or database(s).\n    Configure Couchbase to enforce access restrictions associated with changes\nto the configuration of Couchbase or database(s).\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000380-DB-000360\"\n  tag \"gid\": \"V-58125\"\n  tag \"rid\": \"SV-72555r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000380-DB-000360\"\n  tag \"fix_id\": \"F-63333r1_fix\"\n  tag \"cci\": [\"CCI-001813\"]\n  tag \"nist\": [\"CM-5 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58125.rb"},"waiver_data":{},"results":[]},{"id":"V-58065","title":"Couchbase must generate time stamps, for audit records and application\n  data, with a minimum granularity of one second.","desc":"Without sufficient granularity of time stamps, it is not possible to\n  adequately determine the chronological order of records.\n\n  Time stamps generated by Couchbase must include date and time. Granularity\n  of time measurements refers to the precision available in time stamp values.\n  Granularity coarser than one second is not sufficient for audit trail purposes.\n  Time stamp values are typically presented with three or more decimal places of\n  seconds; however, the actual granularity may be coarser than the apparent\n  precision. For example, SQL Server's GETDATE()/CURRENT_TMESTAMP values are\n  presented to three decimal places, but the granularity is not one millisecond:\n  it is about 1/300 of a second.\n\n  Some Couchbase products offer a data type called TIMESTAMP that is not a\n  representation of date and time. Rather, it is a database state counter and\n  does not correspond to calendar and clock time. This requirement does not refer\n  to that meaning of TIMESTAMP.","descriptions":[{"label":"default","data":"Without sufficient granularity of time stamps, it is not possible to\n  adequately determine the chronological order of records.\n\n  Time stamps generated by Couchbase must include date and time. Granularity\n  of time measurements refers to the precision available in time stamp values.\n  Granularity coarser than one second is not sufficient for audit trail purposes.\n  Time stamp values are typically presented with three or more decimal places of\n  seconds; however, the actual granularity may be coarser than the apparent\n  precision. For example, SQL Server's GETDATE()/CURRENT_TMESTAMP values are\n  presented to three decimal places, but the granularity is not one millisecond:\n  it is about 1/300 of a second.\n\n  Some Couchbase products offer a data type called TIMESTAMP that is not a\n  representation of date and time. Rather, it is a database state counter and\n  does not correspond to calendar and clock time. This requirement does not refer\n  to that meaning of TIMESTAMP."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n    - \"id\" - ID of Event\n    - \"name\" - Name of Event (can indicate success/failure)\n    - \"description\" - Event Description (can indicate success/failure)\n    - \"filtering_permitted\" - Whether the event is filterable\n    - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\n      format) and \"user\" fields\nNote that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n    - \"node_id\" - ID of Node\n    - \"session_id\" - ID of current Session\n    - \"ip\" - Remote IP address\n    - \"port\" - Remote port\n    - \"bucket_name\" - Name of Bucket\n  Couchbase Server 6.5.0 and earlier -\n    As root or a sudo user, verify that the \"audit.log\" file exists in the\n    var/lib/couchbase/logs directory of the Couchbase application home (example:\n    /opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n    Review the audit.log file. If it does not exist or not populated with\n    data captured, this is a finding.\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, verify that auditing is enabled by executing the\n    following command:\n      $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n      <Password> --get-settings\n    Review the output of the command. If \"Audit enabled\" is not set to\n    \"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to enable the use of\nsystem clocks to generate time stamps for audit records in UTC time and ISO\n8601 format, which offers a precision of at least one second.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000375-DB-000323","gid":"V-58065","rid":"SV-72495r1_rule","stig_id":"SRG-APP-000375-DB-000323","fix_id":"F-63273r1_fix","cci":["CCI-001889"],"nist":["AU-8 b","Rev_4"]},"code":"control \"V-58065\" do\n  title \"Couchbase must generate time stamps, for audit records and application\n  data, with a minimum granularity of one second.\"\n\n  desc  \"Without sufficient granularity of time stamps, it is not possible to\n  adequately determine the chronological order of records.\n\n  Time stamps generated by Couchbase must include date and time. Granularity\n  of time measurements refers to the precision available in time stamp values.\n  Granularity coarser than one second is not sufficient for audit trail purposes.\n  Time stamp values are typically presented with three or more decimal places of\n  seconds; however, the actual granularity may be coarser than the apparent\n  precision. For example, SQL Server's GETDATE()/CURRENT_TMESTAMP values are\n  presented to three decimal places, but the granularity is not one millisecond:\n  it is about 1/300 of a second.\n\n  Some Couchbase products offer a data type called TIMESTAMP that is not a\n  representation of date and time. Rather, it is a database state counter and\n  does not correspond to calendar and clock time. This requirement does not refer\n  to that meaning of TIMESTAMP.\"\n\n  desc  \"check\", \"\n  Once enabled on the cluster, Couchbase auditing provides the following\n  fields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\n        format) and \\\"user\\\" fields\n  Note that different event-types generate different field-subsets. Below are\n  some of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\n      var/lib/couchbase/logs directory of the Couchbase application home (example:\n      /opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\n      data captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\n      following command:\n        $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n        <Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n      \\\"true\\\", this is finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to enable the use of\n  system clocks to generate time stamps for audit records in UTC time and ISO\n  8601 format, which offers a precision of at least one second.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\"\n        \n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000375-DB-000323\"\n  tag \"gid\": \"V-58065\"\n  tag \"rid\": \"SV-72495r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000375-DB-000323\"\n  tag \"fix_id\": \"F-63273r1_fix\"\n  tag \"cci\": [\"CCI-001889\"]\n  tag \"nist\": [\"AU-8 b\", \"Rev_4\"]\n\n  describe \"Create the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'jdoe' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"timestamp\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58065.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Create the jdoe user. The exit_status is expected to eq 0","run_time":0.123375,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"timestamp\"/","run_time":0.026165,"start_time":"2020-09-28T22:09:09-04:00","message":"expected \"\" to match /\"timestamp\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"timestamp\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.107771,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58105","title":"Couchbase must generate audit records when unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000502-DB-000349","gid":"V-58105","rid":"SV-72535r1_rule","stig_id":"SRG-APP-000502-DB-000349","fix_id":"F-63313r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58105\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\ndelete categories of information (e.g., classification levels/security levels)\noccur.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000502-DB-000349\"\n  tag \"gid\": \"V-58105\"\n  tag \"rid\": \"SV-72535r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000502-DB-000349\"\n  tag \"fix_id\": \"F-63313r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58105.rb"},"waiver_data":{},"results":[]},{"id":"V-58071","title":"Couchbase must generate audit records when privileges/permissions are added.","desc":"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, adding permissions is typically done via the GRANT\n  command, or, in the negative, the DENY command.","descriptions":[{"label":"default","data":"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, adding permissions is typically done via the GRANT\n  command, or, in the negative, the DENY command."},{"label":"check","data":"Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\nFirst, as the Full Admin, create a user account by executing the following\ncommand:\n  $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n  -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n  --rbac-name \"John Doe\" --roles replication_admin \\\n  --auth-domain local\n  \nThen, as the Full Admin, grant the John Doe user a new role:\n  $couchbase-cli user-manage -c localhost:8091 -u admin -p password     --set --roles admin --rbac-username jdoe --auth-domain local\n\nIf the above steps cannot verify that audit records are produced when \nprivileges/permissions/role memberships are added, this is a finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen privileges/permissions are added.\nCouchbase Server 6.5.0 and earlier -\n  As the Full Admin, execute the following command to enable auditing:\n    $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n    --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n    --audit-log-path /opt/couchbase/var/lib/couchbase/logs\nCouchbase Server Version 6.5.1 and later -\n  As the Full Admin, execute the following command to enable auditing:\n    $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n    --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n    604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\nEnable the required set of auditable events by doing the following:\n  As the Full Admin, log into the cluster and use  the following documentation \n  to enable all on the \"Query and Index Services Event:\n  - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000495-DB-000326","gid":"V-58071","rid":"SV-72501r2_rule","stig_id":"SRG-APP-000495-DB-000326","fix_id":"F-63277r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58071\" do\n  title \"Couchbase must generate audit records when privileges/permissions are added.\"\n  desc  \"Changes in the permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized elevation or\n  restriction of privileges could go undetected. Elevated privileges give users\n  access to information and functionality that they should not have; restricted\n  privileges wrongly deny access to authorized users.\n\n  In an SQL environment, adding permissions is typically done via the GRANT\n  command, or, in the negative, the DENY command.\"\n\n  desc  \"check\", \"\n  Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n  First, as the Full Admin, create a user account by executing the following\n  command:\n    $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n    -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n    --rbac-name \\\"John Doe\\\" --roles replication_admin \\\\\n    --auth-domain local\n    \n  Then, as the Full Admin, grant the John Doe user a new role:\n    $couchbase-cli user-manage -c localhost:8091 -u admin -p password \\\n    --set --roles admin --rbac-username jdoe --auth-domain local\n\n  If the above steps cannot verify that audit records are produced when \n  privileges/permissions/role memberships are added, this is a finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when privileges/permissions are added.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Enable the required set of auditable events by doing the following:\n    As the Full Admin, log into the cluster and use  the following documentation \n    to enable all on the \\\"Query and Index Services Event:\n    - https://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\"\n\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000495-DB-000326\"\n  tag \"gid\": \"V-58071\"\n  tag \"rid\": \"SV-72501r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000495-DB-000326\"\n  tag \"fix_id\": \"F-63277r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Add the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --set --rbac-username jdoe --rbac-password cbpass --rbac-name 'John Doe' \\\n    --roles replication_admin --auth-domain local\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Grant permissions to jdoe user. The\" do \n    subject { command(\"cbq -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --engine=http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}\n    --script='GRANT cluster_admin TO jdoe'\")}\n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'A N1QL GRANT ROLE' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match /\"success\"/}\n  end\n\n  describe \"Delete the jdoe user. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli user-manage \\\n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --delete --rbac-username jdoe --auth-domain local\") }\n    its('exit_status') { should eq 0 }\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58071.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Add the jdoe user. The exit_status is expected to eq 0","run_time":0.103163,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Grant permissions to jdoe user. The exit_status is expected to eq 0","run_time":0.024561,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match /\"success\"/","run_time":0.021892,"start_time":"2020-09-28T22:09:09-04:00","message":"expected \"\" to match /\"success\"/\nDiff:\n@@ -1,2 +1,2 @@\n-/\"success\"/\n+\"\"\n"},{"status":"failed","code_desc":"Delete the jdoe user. The exit_status is expected to eq 0","run_time":0.109324,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 1\n\n(compared using ==)\n"}]},{"id":"V-58131","title":"Couchbase must be configured in accordance with the security\nconfiguration settings based on DoD security configuration and implementation\nguidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs.","desc":"Configuring Couchbase to implement organization-wide security\nimplementation guides and security checklists ensures compliance with federal\nstandards and establishes a common security baseline across DoD that reflects\nthe most restrictive security posture consistent with operational requirements.\n\n    In addition to this SRG, sources of guidance on security and information\nassurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs.\nCouchbase must be configured in compliance with guidance from all such relevant\nsources.","descriptions":[{"label":"default","data":"Configuring Couchbase to implement organization-wide security\nimplementation guides and security checklists ensures compliance with federal\nstandards and establishes a common security baseline across DoD that reflects\nthe most restrictive security posture consistent with operational requirements.\n\n    In addition to this SRG, sources of guidance on security and information\nassurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs.\nCouchbase must be configured in compliance with guidance from all such relevant\nsources."},{"label":"check","data":"Review the Couchbase documentation and configuration to determine if\nCouchbase is configured in accordance with DoD security configuration and\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs and IAVMs.\n    If Couchbase is not configured in accordance with security configuration\nsettings, this is a finding."},{"label":"fix","data":"Configure Couchbase in accordance with DoD security\nconfiguration and implementation guidance, including STIGs, NSA configuration\nguides, CTOs, and DTMs and IAVMs."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000516-DB-000363","gid":"V-58131","rid":"SV-72561r1_rule","stig_id":"SRG-APP-000516-DB-000363","fix_id":"F-63339r1_fix","cci":["CCI-000366"],"nist":["CM-6 b","Rev_4"]},"code":"control \"V-58131\" do\n  title \"Couchbase must be configured in accordance with the security\nconfiguration settings based on DoD security configuration and implementation\nguidance, including STIGs, NSA configuration guides, CTOs, DTMs, and IAVMs.\"\n  desc  \"Configuring Couchbase to implement organization-wide security\nimplementation guides and security checklists ensures compliance with federal\nstandards and establishes a common security baseline across DoD that reflects\nthe most restrictive security posture consistent with operational requirements.\n\n    In addition to this SRG, sources of guidance on security and information\nassurance exist. These include NSA configuration guides, CTOs, DTMs, and IAVMs.\nCouchbase must be configured in compliance with guidance from all such relevant\nsources.\n  \"\n  desc  \"check\", \"\n    Review the Couchbase documentation and configuration to determine if\nCouchbase is configured in accordance with DoD security configuration and\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs and IAVMs.\n    If Couchbase is not configured in accordance with security configuration\nsettings, this is a finding.\n  \"\n  desc  \"fix\", \"Configure Couchbase in accordance with DoD security\nconfiguration and implementation guidance, including STIGs, NSA configuration\nguides, CTOs, and DTMs and IAVMs.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000516-DB-000363\"\n  tag \"gid\": \"V-58131\"\n  tag \"rid\": \"SV-72561r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000516-DB-000363\"\n  tag \"fix_id\": \"F-63339r1_fix\"\n  tag \"cci\": [\"CCI-000366\"]\n  tag \"nist\": [\"CM-6 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58131.rb"},"waiver_data":{},"results":[]},{"id":"V-32399","title":"Couchbase must protect its audit features from unauthorized removal.","desc":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.","descriptions":[{"label":"default","data":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators."},{"label":"fix","data":"Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\"admin\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\n     --rbac-name <name> --roles <roles> \\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000123-DB-000204","gid":"V-32399","rid":"SV-42736r3_rule","stig_id":"SRG-APP-000123-DB-000204","fix_id":"F-36314r2_fix","cci":["CCI-001495"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32399\" do\n  title \"Couchbase must protect its audit features from unauthorized removal.\"\n  desc  \"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe deletion of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.\n  \"\n  desc  \"fix\", \"\n    Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\\\"admin\\\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\\\n     --rbac-name <name> --roles <roles> \\\\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000123-DB-000204\"\n  tag \"gid\": \"V-32399\"\n  tag \"rid\": \"SV-42736r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000123-DB-000204\"\n  tag \"fix_id\": \"F-36314r2_fix\"\n  tag \"cci\": [\"CCI-001495\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32399.rb"},"waiver_data":{},"results":[]},{"id":"V-58183","title":"When invalid inputs are received, Couchbase must behave in a\npredictable and documented manner that reflects organizational and system\nobjectives.","desc":"A common vulnerability is unplanned behavior when invalid inputs are\nreceived. This requirement guards against adverse or unintended system behavior\ncaused by invalid inputs, where information system responses to the invalid\ninput may be disruptive or cause the system to fail into an unsafe state.\n\n    The behavior will be derived from the organizational and system\nrequirements and includes, but is not limited to, notification of the\nappropriate personnel, creating an audit record, and rejecting invalid input.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"A common vulnerability is unplanned behavior when invalid inputs are\nreceived. This requirement guards against adverse or unintended system behavior\ncaused by invalid inputs, where information system responses to the invalid\ninput may be disruptive or cause the system to fail into an unsafe state.\n\n    The behavior will be derived from the organizational and system\nrequirements and includes, but is not limited to, notification of the\nappropriate personnel, creating an audit record, and rejecting invalid input.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Review system documentation to determine how input errors are to be handled\nin general and if any special handling is defined for specific circumstances.\n    Review the source code for database program objects (stored procedures,\nfunctions, triggers) and application source code to identify how the system\nresponds to invalid input.\n    As database administrator, make a small syntax error (missing key word FROM\nbefore dataset TestDatabase):\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n--script=\"SELECT * TestDatabase user\"\n    Verify the syntax error was logged by Couchbase (change the log file name\nand part to suit the circumstances).\n    $ cat /opt/couchbase/var/lib/couchbase/logs/event.log\n    If it does not implement the documented behavior, this is a finding."},{"label":"fix","data":"Configure Couchbase to generate audit records for all invalid inputs.\nEdit the configuration file and set all log components to the error level.\n  $ vi /opt/couchbase/etc/couchbase/static_config"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000447-DB-000393","gid":"V-58183","rid":"SV-72613r2_rule","stig_id":"SRG-APP-000447-DB-000393","fix_id":"F-63391r1_fix","cci":["CCI-002754"],"nist":["SI-10 (3)","Rev_4"]},"code":"control \"V-58183\" do\n  title \"When invalid inputs are received, Couchbase must behave in a\npredictable and documented manner that reflects organizational and system\nobjectives.\"\n  desc  \"A common vulnerability is unplanned behavior when invalid inputs are\nreceived. This requirement guards against adverse or unintended system behavior\ncaused by invalid inputs, where information system responses to the invalid\ninput may be disruptive or cause the system to fail into an unsafe state.\n\n    The behavior will be derived from the organizational and system\nrequirements and includes, but is not limited to, notification of the\nappropriate personnel, creating an audit record, and rejecting invalid input.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Review system documentation to determine how input errors are to be handled\nin general and if any special handling is defined for specific circumstances.\n    Review the source code for database program objects (stored procedures,\nfunctions, triggers) and application source code to identify how the system\nresponds to invalid input.\n    As database administrator, make a small syntax error (missing key word FROM\nbefore dataset TestDatabase):\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n--script=\\\"SELECT * TestDatabase user\\\"\n    Verify the syntax error was logged by Couchbase (change the log file name\nand part to suit the circumstances).\n    $ cat /opt/couchbase/var/lib/couchbase/logs/event.log\n    If it does not implement the documented behavior, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase to generate audit records for all invalid inputs.\n    Edit the configuration file and set all log components to the error level.\n      $ vi /opt/couchbase/etc/couchbase/static_config\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000447-DB-000393\"\n  tag \"gid\": \"V-58183\"\n  tag \"rid\": \"SV-72613r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000447-DB-000393\"\n  tag \"fix_id\": \"F-63391r1_fix\"\n  tag \"cci\": [\"CCI-002754\"]\n  tag \"nist\": [\"SI-10 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58183.rb"},"waiver_data":{},"results":[]},{"id":"V-58121","title":"Couchbase must generate audit records when unsuccessful accesses to\nobjects occur.","desc":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.","descriptions":[{"label":"default","data":"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones."},{"label":"check","data":"Review Couchbase documentation to verify that administrative users can\nspecify database objects for which access must be audited, and can specify\nwhich kinds of access must be audited.\n    If Couchbase is not capable of this, this is a finding.\n    Review Couchbase documentation to determine whether the application owner\nhas specified database objects (tables, views, procedures, functions, etc.) for\nwhich access must be audited.\n    Review the Couchbase/database security and audit settings to verify that\naudit records are created for unsuccessful attempts at the specified access to\nthe specified objects.\n    If not, this is a finding."},{"label":"fix","data":"Ensure couchbase is capable of producing the required audit records when\nobject access occurs.\n    Configure audit settings to create audit records when the specified access\nto the specified objects occurs."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000507-DB-000357","gid":"V-58121","rid":"SV-72551r1_rule","stig_id":"SRG-APP-000507-DB-000357","fix_id":"F-63329r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58121\" do\n  title \"Couchbase must generate audit records when unsuccessful accesses to\nobjects occur.\"\n  desc  \"Without tracking all or selected types of access to all or selected\nobjects (tables, views, procedures, functions, etc.), it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n  \"\n  desc  \"check\", \"\n    Review Couchbase documentation to verify that administrative users can\nspecify database objects for which access must be audited, and can specify\nwhich kinds of access must be audited.\n    If Couchbase is not capable of this, this is a finding.\n    Review Couchbase documentation to determine whether the application owner\nhas specified database objects (tables, views, procedures, functions, etc.) for\nwhich access must be audited.\n    Review the Couchbase/database security and audit settings to verify that\naudit records are created for unsuccessful attempts at the specified access to\nthe specified objects.\n    If not, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Ensure couchbase is capable of producing the required audit records when\nobject access occurs.\n    Configure audit settings to create audit records when the specified access\nto the specified objects occurs.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000507-DB-000357\"\n  tag \"gid\": \"V-58121\"\n  tag \"rid\": \"SV-72551r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000507-DB-000357\"\n  tag \"fix_id\": \"F-63329r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58121.rb"},"waiver_data":{},"results":[]},{"id":"V-58061","title":"Couchbase must be configurable to overwrite audit log records, oldest\n  first (First-In-First-Out - FIFO), in the event of unavailability of space for\n  more audit log records.","desc":"It is critical that when Couchbase is at risk of failing to process\n  audit logs as required, it take action to mitigate the failure. Audit\n  processing failures include: software/hardware errors; failures in the audit\n  capturing mechanisms; and audit storage capacity being reached or exceeded.\n  Responses to audit failure depend upon the nature of the failure mode.\n\n  When availability is an overriding concern, approved actions in response to\n  an audit failure are as follows:\n\n  (i) If the failure was caused by the lack of audit record storage capacity,\n  Couchbase must continue generating audit records, if possible (automatically\n  restarting the audit service if necessary), overwriting the oldest audit\n  records in a first-in-first-out manner.\n\n  (ii) If audit records are sent to a centralized collection server and\n  communication with this server is lost or the server fails, Couchbase must\n  queue audit records locally until communication is restored or until the audit\n  records are retrieved manually. Upon restoration of the connection to the\n  centralized collection server, action should be taken to synchronize the local\n  audit data with the collection server.\n\n  Systems where availability is paramount will most likely be MAC I; the\n  final determination is the prerogative of the application owner, subject to\n  Authorizing Official concurrence. In any case, sufficient auditing resources\n  must be allocated to avoid audit data loss in all but the most extreme\n  situations.","descriptions":[{"label":"default","data":"It is critical that when Couchbase is at risk of failing to process\n  audit logs as required, it take action to mitigate the failure. Audit\n  processing failures include: software/hardware errors; failures in the audit\n  capturing mechanisms; and audit storage capacity being reached or exceeded.\n  Responses to audit failure depend upon the nature of the failure mode.\n\n  When availability is an overriding concern, approved actions in response to\n  an audit failure are as follows:\n\n  (i) If the failure was caused by the lack of audit record storage capacity,\n  Couchbase must continue generating audit records, if possible (automatically\n  restarting the audit service if necessary), overwriting the oldest audit\n  records in a first-in-first-out manner.\n\n  (ii) If audit records are sent to a centralized collection server and\n  communication with this server is lost or the server fails, Couchbase must\n  queue audit records locally until communication is restored or until the audit\n  records are retrieved manually. Upon restoration of the connection to the\n  centralized collection server, action should be taken to synchronize the local\n  audit data with the collection server.\n\n  Systems where availability is paramount will most likely be MAC I; the\n  final determination is the prerogative of the application owner, subject to\n  Authorizing Official concurrence. In any case, sufficient auditing resources\n  must be allocated to avoid audit data loss in all but the most extreme\n  situations."},{"label":"check","data":"If the application owner has determined that the need for system\navailability does not outweigh the need for a complete audit trail, this is not\napplicable (NA).\nOnce enabled on the cluster, Couchbase auditing provides log rotation (i.e.\nRotate interval and Rotate size) option by default. This ensures that the audit\nlog does not consume too much disk space.\n\nCouchbase Server 6.5.0 and earlier -\n  As root or a sudo user, verify that the \"audit.log\" file exists in the\n  var/lib/couchbase/logs directory of the Couchbase application home (example:\n  /opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n  Review the audit.log file. If it does not exist or is not populated with\n  data captured, this is a finding.\nCouchbase Server Version 6.5.1 and later -\n  As the Full Admin, verify that auditing is enabled by executing the\n  following command:\n  $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n  <Password> --get-settings\n\nReview the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\nCouchbase Server 6.5.0 and earlier -\n  As the Full Admin, execute the following command to enable auditing:\n    $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n    --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n    --audit-log-path /opt/couchbase/var/lib/couchbase/logs\nCouchbase Server Version 6.5.1 and later -\n  As the Full Admin, execute the following command to enable auditing:\n    $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n    --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n    604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000109-DB-000321","gid":"V-58061","rid":"SV-72491r1_rule","stig_id":"SRG-APP-000109-DB-000321","fix_id":"F-63269r1_fix","cci":["CCI-000140"],"nist":["AU-5 b","Rev_4"]},"code":"control \"V-58061\" do\n  title \"Couchbase must be configurable to overwrite audit log records, oldest\n  first (First-In-First-Out - FIFO), in the event of unavailability of space for\n  more audit log records.\"\n  \n  desc  \"It is critical that when Couchbase is at risk of failing to process\n  audit logs as required, it take action to mitigate the failure. Audit\n  processing failures include: software/hardware errors; failures in the audit\n  capturing mechanisms; and audit storage capacity being reached or exceeded.\n  Responses to audit failure depend upon the nature of the failure mode.\n\n  When availability is an overriding concern, approved actions in response to\n  an audit failure are as follows:\n\n  (i) If the failure was caused by the lack of audit record storage capacity,\n  Couchbase must continue generating audit records, if possible (automatically\n  restarting the audit service if necessary), overwriting the oldest audit\n  records in a first-in-first-out manner.\n\n  (ii) If audit records are sent to a centralized collection server and\n  communication with this server is lost or the server fails, Couchbase must\n  queue audit records locally until communication is restored or until the audit\n  records are retrieved manually. Upon restoration of the connection to the\n  centralized collection server, action should be taken to synchronize the local\n  audit data with the collection server.\n\n  Systems where availability is paramount will most likely be MAC I; the\n  final determination is the prerogative of the application owner, subject to\n  Authorizing Official concurrence. In any case, sufficient auditing resources\n  must be allocated to avoid audit data loss in all but the most extreme\n  situations.\"\n\n  desc  \"check\", \"\n  If the application owner has determined that the need for system\n  availability does not outweigh the need for a complete audit trail, this is not\n  applicable (NA).\n  Once enabled on the cluster, Couchbase auditing provides log rotation (i.e.\n  Rotate interval and Rotate size) option by default. This ensures that the audit\n  log does not consume too much disk space.\n\n  Couchbase Server 6.5.0 and earlier -\n    As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\n    var/lib/couchbase/logs directory of the Couchbase application home (example:\n    /opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n    Review the audit.log file. If it does not exist or is not populated with\n    data captured, this is a finding.\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, verify that auditing is enabled by executing the\n    following command:\n    $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n    <Password> --get-settings\n\n  Review the output of the command. If \\\"Audit enabled\\\" is not set to\n  \\\"true\\\", this is finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\"\n      \n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000109-DB-000321\"\n  tag \"gid\": \"V-58061\"\n  tag \"rid\": \"SV-72491r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000109-DB-000321\"\n  tag \"fix_id\": \"F-63269r1_fix\"\n  tag \"cci\": [\"CCI-000140\"]\n  tag \"nist\": [\"AU-5 b\", \"Rev_4\"]\n  \n  describe \"Couchbase log auditing should be enabled.\" do\n    subject { json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} \\\n    http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/audit\") }\n    its('auditdEnabled') { should eq true }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58061.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Couchbase log auditing should be enabled. auditdEnabled is expected to eq true","run_time":0.03056,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: true\n     got: false\n\n(compared using ==)\n\nDiff:\n@@ -1,2 +1,2 @@\n-true\n+false\n"}]},{"id":"V-32475","title":"Couchbase, when utilizing PKI-based authentication, must validate\ncertificates by performing RFC 5280-compliant certification path validation.","desc":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    A certificate‚Äôs certification path is the path\nfrom the end entity certificate to a trusted root certification authority (CA).\n Certification path validation is necessary for a relying party to make an\ninformed decision regarding acceptance of an end entity certificate.\nCertification path validation includes checks such as certificate issuer trust,\ntime validity and revocation status for each certificate in the certification\npath.  Revocation status information for CA and subject certificates in a\ncertification path is commonly provided via certificate revocation lists (CRLs)\nor online certificate status protocol (OCSP) responses.\n\n    Database Management Systems that do not validate certificates by performing\nRFC 5280-compliant certification path validation are in danger of accepting\ncertificates that are invalid and/or counterfeit. This could allow unauthorized\naccess to the database.","descriptions":[{"label":"default","data":"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    A certificate‚Äôs certification path is the path\nfrom the end entity certificate to a trusted root certification authority (CA).\n Certification path validation is necessary for a relying party to make an\ninformed decision regarding acceptance of an end entity certificate.\nCertification path validation includes checks such as certificate issuer trust,\ntime validity and revocation status for each certificate in the certification\npath.  Revocation status information for CA and subject certificates in a\ncertification path is commonly provided via certificate revocation lists (CRLs)\nor online certificate status protocol (OCSP) responses.\n\n    Database Management Systems that do not validate certificates by performing\nRFC 5280-compliant certification path validation are in danger of accepting\ncertificates that are invalid and/or counterfeit. This could allow unauthorized\naccess to the database."},{"label":"check","data":"If Couchbase is not using PKI-based authentication, this check is Not\nApplicable (NA).\n    As the Full Admin, verify that that path validating is being performed with\nthe following command:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--client-auth --extended\n    Review the output. If it does not contain the \"path\" prefix, this is a\nfinding."},{"label":"fix","data":"As the Full Admin, configure Couchbase to validate certificates by\nperforming RFC 5280-compliant certification path validation with the following\ncommand:\n      $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Auth Config File>\n    Example:\n    {\n      \"state\": \"enable\",\n      \"prefixes\": [\n        {\n          \"path\": \"subject.cn\",\n          \"prefix\": \"www.cb-\",\n          \"delimiter\": \".\"\n        }\n      ]\n    }"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000175-DB-000067","gid":"V-32475","rid":"SV-42812r3_rule","stig_id":"SRG-APP-000175-DB-000067","fix_id":"F-36390r3_fix","cci":["CCI-000185"],"nist":["IA-5 (2) (a)","Rev_4"]},"code":"control \"V-32475\" do\n  title \"Couchbase, when utilizing PKI-based authentication, must validate\ncertificates by performing RFC 5280-compliant certification path validation.\"\n  desc  \"The DoD standard for authentication is DoD-approved PKI certificates.\n\n    A certificate\\xE2\\x80\\x9A\\xC3\\x84\\xC3\\xB4s certification path is the path\nfrom the end entity certificate to a trusted root certification authority (CA).\n Certification path validation is necessary for a relying party to make an\ninformed decision regarding acceptance of an end entity certificate.\nCertification path validation includes checks such as certificate issuer trust,\ntime validity and revocation status for each certificate in the certification\npath.  Revocation status information for CA and subject certificates in a\ncertification path is commonly provided via certificate revocation lists (CRLs)\nor online certificate status protocol (OCSP) responses.\n\n    Database Management Systems that do not validate certificates by performing\nRFC 5280-compliant certification path validation are in danger of accepting\ncertificates that are invalid and/or counterfeit. This could allow unauthorized\naccess to the database.\n  \"\n  desc  \"check\", \"\n    If Couchbase is not using PKI-based authentication, this check is Not\nApplicable (NA).\n    As the Full Admin, verify that that path validating is being performed with\nthe following command:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--client-auth --extended\n    Review the output. If it does not contain the \\\"path\\\" prefix, this is a\nfinding.\n  \"\n  desc  \"fix\", \"\n    As the Full Admin, configure Couchbase to validate certificates by\nperforming RFC 5280-compliant certification path validation with the following\ncommand:\n      $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Auth Config File>\n    Example:\n    {\n      \\\"state\\\": \\\"enable\\\",\n      \\\"prefixes\\\": [\n        {\n          \\\"path\\\": \\\"subject.cn\\\",\n          \\\"prefix\\\": \\\"www.cb-\\\",\n          \\\"delimiter\\\": \\\".\\\"\n        }\n      ]\n    }\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000175-DB-000067\"\n  tag \"gid\": \"V-32475\"\n  tag \"rid\": \"SV-42812r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000175-DB-000067\"\n  tag \"fix_id\": \"F-36390r3_fix\"\n  tag \"cci\": [\"CCI-000185\"]\n  tag \"nist\": [\"IA-5 (2) (a)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32475.rb"},"waiver_data":{},"results":[]},{"id":"V-32424","title":"Unused database components, Couchbase software, and database objects\nmust be removed.","desc":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.","descriptions":[{"label":"default","data":"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities."},{"label":"check","data":"Review the list of components and features installed with the Couchbase\ndatabase.\n    $ yum list installed | grep couchbase\n    If unused components are installed and are not documented and authorized,\nthis is a finding.\n    RPM can also be used to check to see what is installed:\n    $  rpm -qa | grep couchbase\n    If any packages displayed by this command are not being used, this is a\nfinding."},{"label":"fix","data":"Uninstall unused components or features that are installed and\ncan be uninstalled. Remove any database objects and applications that are\ninstalled to support them."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-DB-000091","gid":"V-32424","rid":"SV-42761r3_rule","stig_id":"SRG-APP-000141-DB-000091","fix_id":"F-36339r2_fix","cci":["CCI-000381"],"nist":["CM-7 a","Rev_4"]},"code":"control \"V-32424\" do\n  title \"Unused database components, Couchbase software, and database objects\nmust be removed.\"\n  desc  \"Information systems are capable of providing a wide variety of\nfunctions and services. Some of the functions and services, provided by\ndefault, may not be necessary to support essential organizational operations\n(e.g., key missions, functions).\n\n    It is detrimental for software products to provide, or install by default,\nfunctionality exceeding requirements or mission objectives.\n\n    Couchbases must adhere to the principles of least functionality by\nproviding only essential capabilities.\n  \"\n  desc  \"check\", \"\n    Review the list of components and features installed with the Couchbase\ndatabase.\n    $ yum list installed | grep couchbase\n    If unused components are installed and are not documented and authorized,\nthis is a finding.\n    RPM can also be used to check to see what is installed:\n    $  rpm -qa | grep couchbase\n    If any packages displayed by this command are not being used, this is a\nfinding.\n  \"\n  desc  \"fix\", \"Uninstall unused components or features that are installed and\ncan be uninstalled. Remove any database objects and applications that are\ninstalled to support them.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000141-DB-000091\"\n  tag \"gid\": \"V-32424\"\n  tag \"rid\": \"SV-42761r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000141-DB-000091\"\n  tag \"fix_id\": \"F-36339r2_fix\"\n  tag \"cci\": [\"CCI-000381\"]\n  tag \"nist\": [\"CM-7 a\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32424.rb"},"waiver_data":{},"results":[]},{"id":"V-58055","title":"Couchbase must off-load audit data to a separate log management\n  facility; this shall be continuous and in near real time for systems with a\n  network connection to the storage facility and weekly or more often for\n  stand-alone systems.","desc":"Information stored in one location is vulnerable to accidental or\n  incidental deletion or alteration.\n\n  Off-loading is a common process in information systems with limited audit\n  storage capacity.\n\n  Couchbase may write audit records to database tables, to files in the file\n  system, to other kinds of local repository, or directly to a centralized log\n  management system. Whatever the method used, it must be compatible with\n  off-loading the records to the centralized system.","descriptions":[{"label":"default","data":"Information stored in one location is vulnerable to accidental or\n  incidental deletion or alteration.\n\n  Off-loading is a common process in information systems with limited audit\n  storage capacity.\n\n  Couchbase may write audit records to database tables, to files in the file\n  system, to other kinds of local repository, or directly to a centralized log\n  management system. Whatever the method used, it must be compatible with\n  off-loading the records to the centralized system."},{"label":"check","data":"Review the system documentation for a description of how audit records are\noff-loaded.\n  \nIf Couchbase has a continuous network connection to the centralized log\nmanagement system, but Couchbase audit records are not written directly to the\ncentralized log management system or transferred in near-real-time, this is a\nfinding.\n   \nIf Couchbase does not have a continuous network connection to the\ncentralized log management system, and Couchbase  audit records are not\ntransferred to the centralized log management system weekly or more often, this\nis a finding."},{"label":"fix","data":"Configure Couchbase or deploy and configure software tools to\n  transfer audit records to a centralized log management system, continuously and\n  in near-real time where a continuous network connection to the log management\n  system exists, or at least weekly in the absence of such a connection."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000515-DB-000318","gid":"V-58055","rid":"SV-72485r1_rule","stig_id":"SRG-APP-000515-DB-000318","fix_id":"F-63263r1_fix","cci":["CCI-001851"],"nist":["AU-4 (1)","Rev_4"]},"code":"control \"V-58055\" do\n  title \"Couchbase must off-load audit data to a separate log management\n  facility; this shall be continuous and in near real time for systems with a\n  network connection to the storage facility and weekly or more often for\n  stand-alone systems.\"\n  desc  \"Information stored in one location is vulnerable to accidental or\n  incidental deletion or alteration.\n\n  Off-loading is a common process in information systems with limited audit\n  storage capacity.\n\n  Couchbase may write audit records to database tables, to files in the file\n  system, to other kinds of local repository, or directly to a centralized log\n  management system. Whatever the method used, it must be compatible with\n  off-loading the records to the centralized system.\n  \"\n  desc  \"check\", \"\n  Review the system documentation for a description of how audit records are\n  off-loaded.\n    \n  If Couchbase has a continuous network connection to the centralized log\n  management system, but Couchbase audit records are not written directly to the\n  centralized log management system or transferred in near-real-time, this is a\n  finding.\n     \n  If Couchbase does not have a continuous network connection to the\n  centralized log management system, and Couchbase  audit records are not\n  transferred to the centralized log management system weekly or more often, this\n  is a finding.\n  \"\n  desc  \"fix\", \"Configure Couchbase or deploy and configure software tools to\n  transfer audit records to a centralized log management system, continuously and\n  in near-real time where a continuous network connection to the log management\n  system exists, or at least weekly in the absence of such a connection.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000515-DB-000318\"\n  tag \"gid\": \"V-58055\"\n  tag \"rid\": \"SV-72485r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000515-DB-000318\"\n  tag \"fix_id\": \"F-63263r1_fix\"\n  tag \"cci\": [\"CCI-001851\"]\n  tag \"nist\": [\"AU-4 (1)\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review the system documentation for a description of how audit records are\n  off-loaded.\" do\n    skip \"This test requires a Manual Review: Review the system documentation for a description of how audit records are\n    off-loaded.\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58055.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review the system documentation for a description of how audit records are\n  off-loaded.","run_time":4.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Review the system documentation for a description of how audit records are\n    off-loaded."}]},{"id":"V-58115","title":"Couchbase must generate audit records for all privileged activities or\nother system-level access.","desc":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples in SQL include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of Couchbase and the design of the database\nand associated applications, audit logging may be achieved by means of\nCouchbase auditing features, database triggers, other mechanisms, or a\ncombination of these.\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.","descriptions":[{"label":"default","data":"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples in SQL include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of Couchbase and the design of the database\nand associated applications, audit logging may be achieved by means of\nCouchbase auditing features, database triggers, other mechanisms, or a\ncombination of these.\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing configuration includes\ncertain privilege events by default. The Full Admin can specify events that\nshould be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to configure required\nevents to be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable other events that should be audited:\n      As the Full Admin, log into the cluster and use  the following\ndocumentation to enable events:\n      -\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000504-DB-000354","gid":"V-58115","rid":"SV-72545r1_rule","stig_id":"SRG-APP-000504-DB-000354","fix_id":"F-63323r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58115\" do\n  title \"Couchbase must generate audit records for all privileged activities or\nother system-level access.\"\n  desc  \"Without tracking privileged activity, it would be difficult to\nestablish, correlate, and investigate the events relating to an incident or\nidentify those responsible for one.\n\n    System documentation should include a definition of the functionality\nconsidered privileged.\n\n    A privileged function in this context is any operation that modifies the\nstructure of the database, its built-in logic, or its security settings. This\nwould include all Data Definition Language (DDL) statements and all\nsecurity-related statements. In an SQL environment, it encompasses, but is not\nnecessarily limited to:\n    CREATE\n    ALTER\n    DROP\n    GRANT\n    REVOKE\n    DENY\n\n    There may also be Data Manipulation Language (DML) statements that, subject\nto context, should be regarded as privileged. Possible examples in SQL include:\n\n    TRUNCATE TABLE;\n    DELETE, or\n    DELETE affecting more than n rows, for some n, or\n    DELETE without a WHERE clause;\n\n    UPDATE or\n    UPDATE affecting more than n rows, for some n, or\n    UPDATE without a WHERE clause;\n\n    any SELECT, INSERT, UPDATE, or DELETE to an application-defined security\ntable executed by other than a security principal.\n\n    Depending on the capabilities of Couchbase and the design of the database\nand associated applications, audit logging may be achieved by means of\nCouchbase auditing features, database triggers, other mechanisms, or a\ncombination of these.\n\n    Note that it is particularly important to audit, and tightly control, any\naction that weakens the implementation of this requirement itself, since the\nobjective is to have a complete audit trail of all administrative activity.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing configuration includes\ncertain privilege events by default. The Full Admin can specify events that\nshould be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to configure required\nevents to be audited.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Enable other events that should be audited:\n      As the Full Admin, log into the cluster and use  the following\ndocumentation to enable events:\n      -\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-auditing.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000504-DB-000354\"\n  tag \"gid\": \"V-58115\"\n  tag \"rid\": \"SV-72545r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000504-DB-000354\"\n  tag \"fix_id\": \"F-63323r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58115.rb"},"waiver_data":{},"results":[]},{"id":"V-58155","title":"Couchbase must maintain the confidentiality and integrity of\ninformation during reception.","desc":"Information can be either unintentionally or maliciously disclosed or\nmodified during reception, including, for example, during aggregation, at\nprotocol transformation points, and during packing/unpacking. These\nunauthorized disclosures or modifications compromise the confidentiality or\nintegrity of the information.\n\n    This requirement applies only to those applications that are either\ndistributed or can allow access to data nonlocally. Use of this requirement\nwill be limited to situations where the data owner has a strict requirement for\nensuring data integrity and confidentiality is maintained at every step of the\ndata transfer and handling process.\n\n    When receiving data, Couchbase, associated applications, and infrastructure\nmust leverage protection mechanisms.","descriptions":[{"label":"default","data":"Information can be either unintentionally or maliciously disclosed or\nmodified during reception, including, for example, during aggregation, at\nprotocol transformation points, and during packing/unpacking. These\nunauthorized disclosures or modifications compromise the confidentiality or\nintegrity of the information.\n\n    This requirement applies only to those applications that are either\ndistributed or can allow access to data nonlocally. Use of this requirement\nwill be limited to situations where the data owner has a strict requirement for\nensuring data integrity and confidentiality is maintained at every step of the\ndata transfer and handling process.\n\n    When receiving data, Couchbase, associated applications, and infrastructure\nmust leverage protection mechanisms."},{"label":"check","data":"If Couchbase is deployed in an unclassified environment, this is not\napplicable (NA).\n    If Couchbase is not maintaining the confidentiality and integrity of\ninformation during receptions, this is a finding.\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <host>:<port>-u Administrator -p password\n--client-auth --extended\n    If the response does not show SSL is enabled, this is a finding."},{"label":"fix","data":"Implement protective measures against unauthorized disclosure and\nmodification during reception.\n    Configure Couchbase to enforce SSL:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Config File>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000442-DB-000379","gid":"V-58155","rid":"SV-72585r1_rule","stig_id":"SRG-APP-000442-DB-000379","fix_id":"F-63363r1_fix","cci":["CCI-002422"],"nist":["SC-8 (2)","Rev_4"]},"code":"control \"V-58155\" do\n  title \"Couchbase must maintain the confidentiality and integrity of\ninformation during reception.\"\n  desc  \"Information can be either unintentionally or maliciously disclosed or\nmodified during reception, including, for example, during aggregation, at\nprotocol transformation points, and during packing/unpacking. These\nunauthorized disclosures or modifications compromise the confidentiality or\nintegrity of the information.\n\n    This requirement applies only to those applications that are either\ndistributed or can allow access to data nonlocally. Use of this requirement\nwill be limited to situations where the data owner has a strict requirement for\nensuring data integrity and confidentiality is maintained at every step of the\ndata transfer and handling process.\n\n    When receiving data, Couchbase, associated applications, and infrastructure\nmust leverage protection mechanisms.\n  \"\n  desc  \"check\", \"\n    If Couchbase is deployed in an unclassified environment, this is not\napplicable (NA).\n    If Couchbase is not maintaining the confidentiality and integrity of\ninformation during receptions, this is a finding.\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <host>:<port>-u Administrator -p password\n--client-auth --extended\n    If the response does not show SSL is enabled, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Implement protective measures against unauthorized disclosure and\nmodification during reception.\n    Configure Couchbase to enforce SSL:\n    $ couchbase-cli ssl-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--set-client-auth <Config File>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000442-DB-000379\"\n  tag \"gid\": \"V-58155\"\n  tag \"rid\": \"SV-72585r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000442-DB-000379\"\n  tag \"fix_id\": \"F-63363r1_fix\"\n  tag \"cci\": [\"CCI-002422\"]\n  tag \"nist\": [\"SC-8 (2)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58155.rb"},"waiver_data":{},"results":[]},{"id":"V-58021","title":"Execution of software modules (to include stored procedures,\n  functions, and triggers) with elevated privileges must be restricted to\n  necessary cases only.","desc":"In certain situations, to provide required functionality, a Couchbase\n  needs to execute internal logic (stored procedures, functions, triggers, etc.)\n  and/or external code modules with elevated privileges. However, if the\n  privileges required for execution are at a higher level than the privileges\n  assigned to organizational users invoking the functionality\n  applications/programs, those users are indirectly provided with greater\n  privileges than assigned by organizations.\n\n  Privilege elevation must be utilized only where necessary and protected\n  from misuse.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"In certain situations, to provide required functionality, a Couchbase\n  needs to execute internal logic (stored procedures, functions, triggers, etc.)\n  and/or external code modules with elevated privileges. However, if the\n  privileges required for execution are at a higher level than the privileges\n  assigned to organizational users invoking the functionality\n  applications/programs, those users are indirectly provided with greater\n  privileges than assigned by organizations.\n\n  Privilege elevation must be utilized only where necessary and protected\n  from misuse.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered."},{"label":"check","data":"Review the system documentation, database and Couchbase security\nconfiguration, source code for Couchbase internal logic, source code of\nexternal modules invoked by Couchbase , and source code of the application(s)\nusing the database.\nIf elevation of Couchbase privileges is not utilized, this is not a finding.\nIf elevation of Couchbase privileges is utilized but not documented, this\nis a finding.\nIf elevation of Couchbase privileges is documented, but not implemented as\ndescribed in the documentation, this is a finding.\nIf the privilege-elevation logic can be invoked in ways other than\nintended, or in contexts other than intended, or by subjects/principals other\nthan intended, this is a finding."},{"label":"fix","data":"Determine where, when, how, and by what principals/subjects elevated\nprivilege is needed.\n   \nModify the database and Couchbase security configuration, Couchbase\ninternal logic, external modules invoked by Couchbase , and the application(s)\nusing the database, to ensure privilege elevation is used only as required."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000342-DB-000302","gid":"V-58021","rid":"SV-72451r2_rule","stig_id":"SRG-APP-000342-DB-000302","fix_id":"F-63229r1_fix","cci":["CCI-002233"],"nist":["AC-6 (8)","Rev_4"]},"code":"control \"V-58021\" do\n  title \"Execution of software modules (to include stored procedures,\n  functions, and triggers) with elevated privileges must be restricted to\n  necessary cases only.\"\n  desc  \"In certain situations, to provide required functionality, a Couchbase\n  needs to execute internal logic (stored procedures, functions, triggers, etc.)\n  and/or external code modules with elevated privileges. However, if the\n  privileges required for execution are at a higher level than the privileges\n  assigned to organizational users invoking the functionality\n  applications/programs, those users are indirectly provided with greater\n  privileges than assigned by organizations.\n\n  Privilege elevation must be utilized only where necessary and protected\n  from misuse.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n  Review the system documentation, database and Couchbase security\n  configuration, source code for Couchbase internal logic, source code of\n  external modules invoked by Couchbase , and source code of the application(s)\n  using the database.\n  If elevation of Couchbase privileges is not utilized, this is not a finding.\n  If elevation of Couchbase privileges is utilized but not documented, this\n  is a finding.\n  If elevation of Couchbase privileges is documented, but not implemented as\n  described in the documentation, this is a finding.\n  If the privilege-elevation logic can be invoked in ways other than\n  intended, or in contexts other than intended, or by subjects/principals other\n  than intended, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Determine where, when, how, and by what principals/subjects elevated\n  privilege is needed.\n     \n  Modify the database and Couchbase security configuration, Couchbase\n  internal logic, external modules invoked by Couchbase , and the application(s)\n  using the database, to ensure privilege elevation is used only as required.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000342-DB-000302\"\n  tag \"gid\": \"V-58021\"\n  tag \"rid\": \"SV-72451r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000342-DB-000302\"\n  tag \"fix_id\": \"F-63229r1_fix\"\n  tag \"cci\": [\"CCI-002233\"]\n  tag \"nist\": [\"AC-6 (8)\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review the system documentation, database and Couchbase security\n  configuration, source code for Couchbase internal logic, source code of external modules invoked by Couchbase , \n  and source code of the application(s) using the database.\" do\n    skip \"This test requires a Manual Review: Review the system documentation, database and Couchbase security\n    configuration, source code for Couchbase internal logic, source code of external modules invoked by Couchbase , \n    and source code of the application(s) using the database.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58021.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review the system documentation, database and Couchbase security\n  configuration, source code for Couchbase internal logic, source code of external modules invoked by Couchbase , \n  and source code of the application(s) using the database.","run_time":3.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Review the system documentation, database and Couchbase security\n    configuration, source code for Couchbase internal logic, source code of external modules invoked by Couchbase , \n    and source code of the application(s) using the database."}]},{"id":"V-58161","title":"Couchbase must implement NIST FIPS 140-2 validated cryptographic\nmodules to generate and validate cryptographic hashes.","desc":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.","descriptions":[{"label":"default","data":"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant."},{"label":"check","data":"As the system administrator, run the following:\n$ openssl version\nIf \"fips\" is not included in the openssl version, this is a finding.\nRun the following command to check if the OS has FIPS enabled:\n$ cat /proc/sys/crypto/fips_enabled\nIf fips_enabled is not 1, this is a finding."},{"label":"fix","data":"Configure OpenSSL to meet FIPS Compliance.\n    To configure OpenSSL to be FIPS 140-2 compliant, see the official RHEL\nDocumentation:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000514-DB-000382","gid":"V-58161","rid":"SV-72591r1_rule","stig_id":"SRG-APP-000514-DB-000382","fix_id":"F-63369r2_fix","cci":["CCI-002450"],"nist":["SC-13","Rev_4"]},"code":"control \"V-58161\" do\n  title \"Couchbase must implement NIST FIPS 140-2 validated cryptographic\nmodules to generate and validate cryptographic hashes.\"\n  desc  \"Use of weak or untested encryption algorithms undermines the purposes\nof utilizing encryption to protect data. The application must implement\ncryptographic modules adhering to the higher standards approved by the federal\ngovernment since this provides assurance they have been tested and validated.\n\n    For detailed information, refer to NIST FIPS Publication 140-2, Security\nRequirements For Cryptographic Modules. Note that the product's cryptographic\nmodules must be validated and certified by NIST as FIPS-compliant.\n  \"\n  desc  \"check\", \"\n    As the system administrator, run the following:\n    $ openssl version\n    If \\\"fips\\\" is not included in the openssl version, this is a finding.\n    Run the following command to check if the OS has FIPS enabled:\n    $ cat /proc/sys/crypto/fips_enabled\n    If fips_enabled is not 1, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure OpenSSL to meet FIPS Compliance.\n    To configure OpenSSL to be FIPS 140-2 compliant, see the official RHEL\nDocumentation:\nhttps://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Federal_Standards_And_Regulations-Federal_Information_Processing_Standard.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000514-DB-000382\"\n  tag \"gid\": \"V-58161\"\n  tag \"rid\": \"SV-72591r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000514-DB-000382\"\n  tag \"fix_id\": \"F-63369r2_fix\"\n  tag \"cci\": [\"CCI-002450\"]\n  tag \"nist\": [\"SC-13\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58161.rb"},"waiver_data":{},"results":[]},{"id":"V-58083","title":"Couchbase must be able to generate audit records when security objects\nare accessed.","desc":"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE","descriptions":[{"label":"default","data":"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE"},{"label":"check","data":"If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\n    Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n    As the Full Admin, create a user account and grant the user the\ncluster_admin role by executing the following command:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n     --rbac-name \"John Doe\" --roles cluster_admin \\\n     --auth-domain local\n    As the John Doe user, create a bucket in the cluster by executing the\nfollowing command:\n      $ couchbase-cli bucket-create -c <host>:<port> --username jdoe --password\ncbpass --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:  {\"bucket_name\":\"test-data\",\"description\":\"Bucket was\ncreated\",\"id\":8201,\"name\":\"create\nbucket\",\"props\":{\"compression_mode\":\"passive\",\"conflict_resolution_type\":\"seqno\",\"durability_min_level\":\"none\",\"eviction_policy\":\"value_only\",\"flush_enabled\":false,\"max_ttl\":0,\"num_threads\":3,\"ram_quota\":268435456,\"replica_index\":true,\"storage_mode\":\"couchstore\"},\"real_use\"rid\"\":{\"domain\":\"local\",\"user\":\"jdoe\"},\"remote\":{\"ip\":\"127.0.0.1\",\"port\":45934},\"timestamp\":\"2020-08-20T20:30:34.115Z\",\"type\":\"membase\"}\n    If the above steps cannot verify that audit records are produced when\nsecurity objects are accessed, this is a finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen security objects are accessed.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000492-DB-000332","gid":"V-58083","rid":"SV-72513r1_rule","stig_id":"SRG-APP-000492-DB-000332","fix_id":"F-63291r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58083\" do\n  title \"Couchbase must be able to generate audit records when security objects\nare accessed.\"\n  desc  \"Changes to the security configuration must be tracked.\n\n    This requirement applies to situations where security data is retrieved or\nmodified via data manipulation operations, as opposed to via specialized\nsecurity functionality.\n\n    In an SQL environment, types of access include, but are not necessarily\nlimited to:\n    SELECT\n    INSERT\n    UPDATE\n    DELETE\n    EXECUTE\n  \"\n  desc  \"check\", \"\n    If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\n    Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n    As the Full Admin, create a user account and grant the user the\ncluster_admin role by executing the following command:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n     -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n     --rbac-name \\\"John Doe\\\" --roles cluster_admin \\\\\n     --auth-domain local\n    As the John Doe user, create a bucket in the cluster by executing the\nfollowing command:\n      $ couchbase-cli bucket-create -c <host>:<port> --username jdoe --password\ncbpass --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:  {\\\"bucket_name\\\":\\\"test-data\\\",\\\"description\\\":\\\"Bucket was\ncreated\\\",\\\"id\\\":8201,\\\"name\\\":\\\"create\nbucket\\\",\\\"props\\\":{\\\"compression_mode\\\":\\\"passive\\\",\\\"conflict_resolution_type\\\":\\\"seqno\\\",\\\"durability_min_level\\\":\\\"none\\\",\\\"eviction_policy\\\":\\\"value_only\\\",\\\"flush_enabled\\\":false,\\\"max_ttl\\\":0,\\\"num_threads\\\":3,\\\"ram_quota\\\":268435456,\\\"replica_index\\\":true,\\\"storage_mode\\\":\\\"couchstore\\\"},\\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\\\"user\\\":\\\"jdoe\\\"},\\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":45934},\\\"timestamp\\\":\\\"2020-08-20T20:30:34.115Z\\\",\\\"type\\\":\\\"membase\\\"}\n    If the above steps cannot verify that audit records are produced when\nsecurity objects are accessed, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce audit records\nwhen security objects are accessed.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000492-DB-000332\"\n  tag \"gid\": \"V-58083\"\n  tag \"rid\": \"SV-72513r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000492-DB-000332\"\n  tag \"fix_id\": \"F-63291r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  couchbase_version = command('couchbase-server -v').stdout\n\n  if couchbase_version.include?(\"6.5.1\") || couchbase_version.include?(\"6.6.0\")\n    describe command(\"couchbase-cli setting-audit -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} --cluster #{input('cb_cluster_host')}:#{input('cb_cluster_port')} --get-settings | grep 'Audit enabled:'\") do\n      its('stdout') { should include \"True\" }\n    end \n  else\n    describe json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/audit\") do\n      its('auditdEnabled') { should eq true }\n    end \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58083.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"JSON from command: curl -v -X GET -u admin:@dminP@asswd2020 http://localhost:8091/settings/audit auditdEnabled is expected to eq true","run_time":0.000191,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: true\n     got: false\n\n(compared using ==)\n\nDiff:\n@@ -1,2 +1,2 @@\n-true\n+false\n"}]},{"id":"V-32398","title":"Couchbase must protect its audit configuration from unauthorized\nmodification.","desc":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe modification of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.","descriptions":[{"label":"default","data":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe modification of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators."},{"label":"fix","data":"Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\"admin\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\n     --rbac-name <name> --roles <roles> \\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000122-DB-000203","gid":"V-32398","rid":"SV-42735r3_rule","stig_id":"SRG-APP-000122-DB-000203","fix_id":"F-36312r2_fix","cci":["CCI-001494"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32398\" do\n  title \"Couchbase must protect its audit configuration from unauthorized\nmodification.\"\n  desc  \"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data. Therefore, protecting audit tools\nis necessary to prevent unauthorized operation on audit data.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe modification of audit tools.\n\n    Audit tools include, but are not limited to, vendor-provided and open\nsource audit tools needed to successfully view and manipulate audit information\nsystem activity and records. Audit tools include custom queries and report\ngenerators.\n  \"\n  desc  \"fix\", \"\n    Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\\\"admin\\\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\\\n     --rbac-name <name> --roles <roles> \\\\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000122-DB-000203\"\n  tag \"gid\": \"V-32398\"\n  tag \"rid\": \"SV-42735r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000122-DB-000203\"\n  tag \"fix_id\": \"F-36312r2_fix\"\n  tag \"cci\": [\"CCI-001494\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32398.rb"},"waiver_data":{},"results":[]},{"id":"V-58093","title":"Couchbase must generate audit records when unsuccessful attempts to\n  delete security objects occur.","desc":"The removal of security objects from the database/Couchbase would\n  seriously degrade a system's information assurance posture. If such an action\n  is attempted, it must be logged.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"The removal of security objects from the database/Couchbase would\n  seriously degrade a system's information assurance posture. If such an action\n  is attempted, it must be logged.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\n    \nReview Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to drop security objects.\nIf Couchbase is not capable of this, this is a finding.\n    \nReview Couchbase security and audit configurations to verify that audit\nrecords are produced when the system denies attempts to drop security objects.\nIf they are not produced, this is a finding.\n    \nReview Couchbase security and audit configurations to verify that audit\nrecords are produced when other errors prevent attempts to drop security\nobjects.\nIf they are not produced, this is a finding."},{"label":"fix","data":"Deploy Couchbase database capable of producing the required audit records\nwhen it denies or fails to complete attempts to delete security objects.\n    \nConfigure Couchbase to produce audit records when it denies attempts to\ndelete security objects.\n    \nConfigure Couchbase to produce audit records when other errors prevent\nattempts to delete security objects."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000501-DB-000337","gid":"V-58093","rid":"SV-72523r1_rule","stig_id":"SRG-APP-000501-DB-000337","fix_id":"F-63301r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58093\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\n  delete security objects occur.\"\n  desc  \"The removal of security objects from the database/Couchbase would\n  seriously degrade a system's information assurance posture. If such an action\n  is attempted, it must be logged.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\n  \"\n  desc  \"check\", \"\n  If the Couchbase architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its\n  built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s), this is not a finding.\n      \n  Review Couchbase documentation to verify that audit records can be produced\n  when the system denies or fails to complete attempts to drop security objects.\n  If Couchbase is not capable of this, this is a finding.\n      \n  Review Couchbase security and audit configurations to verify that audit\n  records are produced when the system denies attempts to drop security objects.\n  If they are not produced, this is a finding.\n      \n  Review Couchbase security and audit configurations to verify that audit\n  records are produced when other errors prevent attempts to drop security\n  objects.\n  If they are not produced, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Deploy Couchbase database capable of producing the required audit records\n  when it denies or fails to complete attempts to delete security objects.\n      \n  Configure Couchbase to produce audit records when it denies attempts to\n  delete security objects.\n      \n  Configure Couchbase to produce audit records when other errors prevent\n  attempts to delete security objects.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000501-DB-000337\"\n  tag \"gid\": \"V-58093\"\n  tag \"rid\": \"SV-72523r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000501-DB-000337\"\n  tag \"fix_id\": \"F-63301r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n  \n  describe \"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s).\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n    the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n    security objects in the database(s).\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58093.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s).","run_time":3.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n    the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n    security objects in the database(s)."}]},{"id":"V-58171","title":"Couchbase must implement cryptographic mechanisms preventing the\nunauthorized disclosure of organization-defined information at rest on\norganization-defined information system components.","desc":"Couchbases handling data requiring \"data at rest\" protections must\nemploy cryptographic mechanisms to prevent unauthorized disclosure and\nmodification of the information at rest. These cryptographic mechanisms may be\nnative to Couchbase or implemented via additional software or operating\nsystem/file system settings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.","descriptions":[{"label":"default","data":"Couchbases handling data requiring \"data at rest\" protections must\nemploy cryptographic mechanisms to prevent unauthorized disclosure and\nmodification of the information at rest. These cryptographic mechanisms may be\nnative to Couchbase or implemented via additional software or operating\nsystem/file system settings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides."},{"label":"check","data":"Review the system documentation to determine whether the organization has\ndefined the information to prevent the unauthorized disclosure of\norganization-defined information at rest on organization-defined information\nsystem components.\n    If the documentation indicates no information requires such protections,\nthis is not a finding.\n    If any of the information defined as requiring protection is not encrypted\nin a manner that provides the required level of protection and is not\nphysically secured to the required level, this is a finding.\n    If an encryption at rest is required but the encryption tool is not\ninstalled on the server, this is a finding."},{"label":"fix","data":"Configure Couchbase to provide the required level of cryptographic\nprotection for information requiring cryptographic protection against\ndisclosure.\n    Secure the premises, equipment, and media to provide the required level of\nphysical protection.\n    Review  documentation to set up 3rd party encryption tools.\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-connections-and-disks.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000429-DB-000387","gid":"V-58171","rid":"SV-72601r1_rule","stig_id":"SRG-APP-000429-DB-000387","fix_id":"F-63379r1_fix","cci":["CCI-002476"],"nist":["SC-28 (1)","Rev_4"]},"code":"control \"V-58171\" do\n  title \"Couchbase must implement cryptographic mechanisms preventing the\nunauthorized disclosure of organization-defined information at rest on\norganization-defined information system components.\"\n  desc  \"Couchbases handling data requiring \\\"data at rest\\\" protections must\nemploy cryptographic mechanisms to prevent unauthorized disclosure and\nmodification of the information at rest. These cryptographic mechanisms may be\nnative to Couchbase or implemented via additional software or operating\nsystem/file system settings, as appropriate to the situation.\n\n    Selection of a cryptographic mechanism is based on the need to protect the\nintegrity of organizational information. The strength of the mechanism is\ncommensurate with the security category and/or classification of the\ninformation. Organizations have the flexibility to either encrypt all\ninformation on storage devices (i.e., full disk encryption) or encrypt specific\ndata structures (e.g., files, records, or fields).\n\n    The decision whether and what to encrypt rests with the data owner and is\nalso influenced by the physical measures taken to secure the equipment and\nmedia on which the information resides.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to determine whether the organization has\ndefined the information to prevent the unauthorized disclosure of\norganization-defined information at rest on organization-defined information\nsystem components.\n    If the documentation indicates no information requires such protections,\nthis is not a finding.\n    If any of the information defined as requiring protection is not encrypted\nin a manner that provides the required level of protection and is not\nphysically secured to the required level, this is a finding.\n    If an encryption at rest is required but the encryption tool is not\ninstalled on the server, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase to provide the required level of cryptographic\nprotection for information requiring cryptographic protection against\ndisclosure.\n    Secure the premises, equipment, and media to provide the required level of\nphysical protection.\n    Review  documentation to set up 3rd party encryption tools.\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-connections-and-disks.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000429-DB-000387\"\n  tag \"gid\": \"V-58171\"\n  tag \"rid\": \"SV-72601r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000429-DB-000387\"\n  tag \"fix_id\": \"F-63379r1_fix\"\n  tag \"cci\": [\"CCI-002476\"]\n  tag \"nist\": [\"SC-28 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58171.rb"},"waiver_data":{},"results":[]},{"id":"V-32534","title":"Couchbase must protect the confidentiality and integrity of all\n  information at rest.","desc":"This control is intended to address the confidentiality and integrity\n  of information at rest in non-mobile devices and covers user information and\n  system information. Information at rest refers to the state of information when\n  it is located on a secondary storage device (e.g., disk drive, tape drive)\n  within an organizational information system. Applications and application users\n  generate information throughout the course of their application use.\n\n  User data generated, as well as application-specific configuration data,\n  needs to be protected. Organizations may choose to employ different mechanisms\n  to achieve confidentiality and integrity protections, as appropriate.\n\n  If the confidentiality and integrity of application data is not protected,\n  the data will be open to compromise and unauthorized modification.","descriptions":[{"label":"default","data":"This control is intended to address the confidentiality and integrity\n  of information at rest in non-mobile devices and covers user information and\n  system information. Information at rest refers to the state of information when\n  it is located on a secondary storage device (e.g., disk drive, tape drive)\n  within an organizational information system. Applications and application users\n  generate information throughout the course of their application use.\n\n  User data generated, as well as application-specific configuration data,\n  needs to be protected. Organizations may choose to employ different mechanisms\n  to achieve confidentiality and integrity protections, as appropriate.\n\n  If the confidentiality and integrity of application data is not protected,\n  the data will be open to compromise and unauthorized modification."},{"label":"check","data":"If the application owner and Authorizing Official have determined that\nencryption of data at rest is NOT required, this is not a finding.\n\nIf an encryption at rest is required but the encryption tool is not\ninstalled on the server, this is a finding."},{"label":"fix","data":"Apply appropriate controls to protect the confidentiality and integrity of\ndata at rest in the database.\nReview  documentation to set up 3rd party encryption tools.\nhttps://docs.couchbase.com/server/current/manage/manage-security/manage-connections-and-disks.html"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000231-DB-000154","gid":"V-32534","rid":"SV-42871r4_rule","stig_id":"SRG-APP-000231-DB-000154","fix_id":"F-36449r2_fix","cci":["CCI-001199"],"nist":["SC-28","Rev_4"]},"code":"control \"V-32534\" do\n  title \"Couchbase must protect the confidentiality and integrity of all\n  information at rest.\"\n  desc  \"This control is intended to address the confidentiality and integrity\n  of information at rest in non-mobile devices and covers user information and\n  system information. Information at rest refers to the state of information when\n  it is located on a secondary storage device (e.g., disk drive, tape drive)\n  within an organizational information system. Applications and application users\n  generate information throughout the course of their application use.\n\n  User data generated, as well as application-specific configuration data,\n  needs to be protected. Organizations may choose to employ different mechanisms\n  to achieve confidentiality and integrity protections, as appropriate.\n\n  If the confidentiality and integrity of application data is not protected,\n  the data will be open to compromise and unauthorized modification.\n  \"\n  desc  \"check\", \"\n  If the application owner and Authorizing Official have determined that\n  encryption of data at rest is NOT required, this is not a finding.\n  \n  If an encryption at rest is required but the encryption tool is not\n  installed on the server, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Apply appropriate controls to protect the confidentiality and integrity of\n  data at rest in the database.\n  Review  documentation to set up 3rd party encryption tools.\n  https://docs.couchbase.com/server/current/manage/manage-security/manage-connections-and-disks.html\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000231-DB-000154\"\n  tag \"gid\": \"V-32534\"\n  tag \"rid\": \"SV-42871r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000231-DB-000154\"\n  tag \"fix_id\": \"F-36449r2_fix\"\n  tag \"cci\": [\"CCI-001199\"]\n  tag \"nist\": [\"SC-28\", \"Rev_4\"]\n  \n  describe \"This test requires a Manual Review: Review the system documentation to determine whether the organization has protected\n   the defined confidentiality and integrity of all information at rest.\" do\n    skip \"This test requires a Manual Review: Review the system documentation to determine whether the organization has protected\n   the defined confidentiality and integrity of all information at rest.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32534.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review the system documentation to determine whether the organization has protected\n   the defined confidentiality and integrity of all information at rest.","run_time":3.0e-06,"start_time":"2020-09-28T22:09:09-04:00","resource":"","skip_message":"This test requires a Manual Review: Review the system documentation to determine whether the organization has protected\n   the defined confidentiality and integrity of all information at rest."}]},{"id":"V-58025","title":"Couchbase must automatically terminate a user session after\n  organization-defined conditions or trigger events requiring session disconnect.","desc":"This addresses the termination of user-initiated logical sessions in\n  contrast to the termination of network connections that are associated with\n  communications sessions (i.e., network disconnect). A logical session (for\n  local, network, and remote access) is initiated whenever a user (or process\n  acting on behalf of a user) accesses an organizational information system. Such\n  user sessions can be terminated (and thus terminate user access) without\n  terminating network sessions.\n\n  ession termination ends all processes associated with a user's logical\n  session except those batch processes/jobs that are specifically created by the\n  user (i.e., session owner) to continue after the session is terminated.\n\n  Conditions or trigger events requiring automatic session termination can\n  include, for example, organization-defined periods of user inactivity, targeted\n  responses to certain types of incidents, and time-of-day restrictions on\n  information system use.\n\n  This capability is typically reserved for specific cases where the system\n  owner, data owner, or organization requires additional assurance.","descriptions":[{"label":"default","data":"This addresses the termination of user-initiated logical sessions in\n  contrast to the termination of network connections that are associated with\n  communications sessions (i.e., network disconnect). A logical session (for\n  local, network, and remote access) is initiated whenever a user (or process\n  acting on behalf of a user) accesses an organizational information system. Such\n  user sessions can be terminated (and thus terminate user access) without\n  terminating network sessions.\n\n  ession termination ends all processes associated with a user's logical\n  session except those batch processes/jobs that are specifically created by the\n  user (i.e., session owner) to continue after the session is terminated.\n\n  Conditions or trigger events requiring automatic session termination can\n  include, for example, organization-defined periods of user inactivity, targeted\n  responses to certain types of incidents, and time-of-day restrictions on\n  information system use.\n\n  This capability is typically reserved for specific cases where the system\n  owner, data owner, or organization requires additional assurance."},{"label":"check","data":"Review system documentation to obtain the organization's definition of\ncircumstances requiring automatic session termination. If the documentation\nexplicitly states that such termination is not required or is prohibited, this\nis not a finding.\n\nAs the Full Admin, get the current security settings with the following\ncommand:\n$ curl -v -X GET -u <Full Admin>:<Password>\nhttp://<host>:<port>/settings/security\nReview the output of the command. If uiSessionTimeout does not have a\nvalue, this is a finding."},{"label":"fix","data":"Configure Couchbase to automatically terminate a user session after\norganization-defined conditions or trigger events requiring session termination.\nAs the Full Admin, configure session timeout:\n$ curl -X POST -u  <Full Admin>:<Password>\\\nhttp://<host>:<port>/settings/security \\ -d \"uiSessionTimeout=600\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000295-DB-000305","gid":"V-58025","rid":"SV-72455r1_rule","stig_id":"SRG-APP-000295-DB-000305","fix_id":"F-63233r1_fix","cci":["CCI-002361"],"nist":["AC-12","Rev_4"]},"code":"control \"V-58025\" do\n  title \"Couchbase must automatically terminate a user session after\n  organization-defined conditions or trigger events requiring session disconnect.\"\n  desc  \"This addresses the termination of user-initiated logical sessions in\n  contrast to the termination of network connections that are associated with\n  communications sessions (i.e., network disconnect). A logical session (for\n  local, network, and remote access) is initiated whenever a user (or process\n  acting on behalf of a user) accesses an organizational information system. Such\n  user sessions can be terminated (and thus terminate user access) without\n  terminating network sessions.\n\n  ession termination ends all processes associated with a user's logical\n  session except those batch processes/jobs that are specifically created by the\n  user (i.e., session owner) to continue after the session is terminated.\n\n  Conditions or trigger events requiring automatic session termination can\n  include, for example, organization-defined periods of user inactivity, targeted\n  responses to certain types of incidents, and time-of-day restrictions on\n  information system use.\n\n  This capability is typically reserved for specific cases where the system\n  owner, data owner, or organization requires additional assurance.\n  \"\n  desc  \"check\", \"\n  Review system documentation to obtain the organization's definition of\n  circumstances requiring automatic session termination. If the documentation\n  explicitly states that such termination is not required or is prohibited, this\n  is not a finding.\n\n  As the Full Admin, get the current security settings with the following\n  command:\n  $ curl -v -X GET -u <Full Admin>:<Password>\n  http://<host>:<port>/settings/security\n  Review the output of the command. If uiSessionTimeout does not have a\n  value, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n  Configure Couchbase to automatically terminate a user session after\n  organization-defined conditions or trigger events requiring session termination.\n  As the Full Admin, configure session timeout:\n  $ curl -X POST -u  <Full Admin>:<Password>\\\\\n  http://<host>:<port>/settings/security \\\\ -d \\\"uiSessionTimeout=600\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000295-DB-000305\"\n  tag \"gid\": \"V-58025\"\n  tag \"rid\": \"SV-72455r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000295-DB-000305\"\n  tag \"fix_id\": \"F-63233r1_fix\"\n  tag \"cci\": [\"CCI-002361\"]\n  tag \"nist\": [\"AC-12\", \"Rev_4\"]\n\n  describe json( command: \"curl -v -X GET -u #{input('cb_full_admin')}:#{input('cb_full_admin_password')} http://#{input('cb_cluster_host')}:#{input('cb_cluster_port')}/settings/security\") do\n    its('uiSessionTimeout') { should be > 0 }\n  end \nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58025.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"JSON from command: curl -v -X GET -u admin:@dminP@asswd2020 http://localhost:8091/settings/security uiSessionTimeout is expected to be > 0","run_time":0.000123,"start_time":"2020-09-28T22:09:09-04:00","message":"expected: > 0\n     got:   nil"}]},{"id":"V-58165","title":"Couchbase must maintain the authenticity of communications sessions by\nguarding against man-in-the-middle attacks that guess at Session ID values.","desc":"One class of man-in-the-middle, or session hijacking, attack involves\nthe adversary guessing at valid session identifiers based on patterns in\nidentifiers already known.\n\n    The preferred technique for thwarting guesses at Session IDs is the\ngeneration of unique session identifiers using a FIPS 140-2 approved random\nnumber generator.\n\n    However, it is recognized that available Couchbase products do not all\nimplement the preferred technique yet may have other protections against\nsession hijacking. Therefore, other techniques are acceptable, provided they\nare demonstrated to be effective.","descriptions":[{"label":"default","data":"One class of man-in-the-middle, or session hijacking, attack involves\nthe adversary guessing at valid session identifiers based on patterns in\nidentifiers already known.\n\n    The preferred technique for thwarting guesses at Session IDs is the\ngeneration of unique session identifiers using a FIPS 140-2 approved random\nnumber generator.\n\n    However, it is recognized that available Couchbase products do not all\nimplement the preferred technique yet may have other protections against\nsession hijacking. Therefore, other techniques are acceptable, provided they\nare demonstrated to be effective."},{"label":"check","data":"Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <localhost>:<port> -u <Full Admin> \\-p\n<Password> --client-auth --extended\n    If Couchbase does not have SSL enabled, this is a finding.\n    Review Couchbase settings to determine whether protections against\nman-in-the-middle attacks that guess at session identifier values are enabled.\n    If they are not, this is a finding."},{"label":"fix","data":"To make authorization mandatory run the following command:\n    $ couchbase-cli ssl-manage -c <localhost>:<port> -u <Full Admin>\\ -p\n<Password> --set-client-auth mandatory"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000224-DB-000384","gid":"V-58165","rid":"SV-72595r1_rule","stig_id":"SRG-APP-000224-DB-000384","fix_id":"F-63373r1_fix","cci":["CCI-001188"],"nist":["SC-23 (3)","Rev_4"]},"code":"control \"V-58165\" do\n  title \"Couchbase must maintain the authenticity of communications sessions by\nguarding against man-in-the-middle attacks that guess at Session ID values.\"\n  desc  \"One class of man-in-the-middle, or session hijacking, attack involves\nthe adversary guessing at valid session identifiers based on patterns in\nidentifiers already known.\n\n    The preferred technique for thwarting guesses at Session IDs is the\ngeneration of unique session identifiers using a FIPS 140-2 approved random\nnumber generator.\n\n    However, it is recognized that available Couchbase products do not all\nimplement the preferred technique yet may have other protections against\nsession hijacking. Therefore, other techniques are acceptable, provided they\nare demonstrated to be effective.\n  \"\n  desc  \"check\", \"\n    Verify Couchbase has SSL enabled:\n    $ couchbase-cli ssl-manage -c <localhost>:<port> -u <Full Admin> \\\\-p\n<Password> --client-auth --extended\n    If Couchbase does not have SSL enabled, this is a finding.\n    Review Couchbase settings to determine whether protections against\nman-in-the-middle attacks that guess at session identifier values are enabled.\n    If they are not, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    To make authorization mandatory run the following command:\n    $ couchbase-cli ssl-manage -c <localhost>:<port> -u <Full Admin>\\\\ -p\n<Password> --set-client-auth mandatory\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000224-DB-000384\"\n  tag \"gid\": \"V-58165\"\n  tag \"rid\": \"SV-72595r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000224-DB-000384\"\n  tag \"fix_id\": \"F-63373r1_fix\"\n  tag \"cci\": [\"CCI-001188\"]\n  tag \"nist\": [\"SC-23 (3)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58165.rb"},"waiver_data":{},"results":[]},{"id":"V-32514","title":"Couchbase must separate user functionality (including user interface\nservices) from database management functionality.","desc":"Information system management functionality includes functions\nnecessary to administer databases, network components, workstations, or servers\nand typically requires privileged user access.\n\n    The separation of user functionality from information system management\nfunctionality is either physical or logical and is accomplished by using\ndifferent computers, different central processing units, different instances of\nthe operating system, different network addresses, combinations of these\nmethods, or other methods, as appropriate.\n\n    An example of this type of separation is observed in web administrative\ninterfaces that use separate authentication methods for users of any other\ninformation system resources.\n\n    This may include isolating the administrative interface on a different\ndomain and with additional access controls.\n\n    If administrative functionality or information regarding Couchbase\nmanagement is presented on an interface available for users, information on\nCouchbase settings may be inadvertently made available to the user.","descriptions":[{"label":"default","data":"Information system management functionality includes functions\nnecessary to administer databases, network components, workstations, or servers\nand typically requires privileged user access.\n\n    The separation of user functionality from information system management\nfunctionality is either physical or logical and is accomplished by using\ndifferent computers, different central processing units, different instances of\nthe operating system, different network addresses, combinations of these\nmethods, or other methods, as appropriate.\n\n    An example of this type of separation is observed in web administrative\ninterfaces that use separate authentication methods for users of any other\ninformation system resources.\n\n    This may include isolating the administrative interface on a different\ndomain and with additional access controls.\n\n    If administrative functionality or information regarding Couchbase\nmanagement is presented on an interface available for users, information on\nCouchbase settings may be inadvertently made available to the user."},{"label":"check","data":"Check Couchbase settings and vendor documentation to verify that\nadministrative functionality is separate from user functionality.\n    As the Full Admin, list current users and roles using the following example\ncommand:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If any non-administrative account has the roles \"admin\" and\n\"cluster_admin\", this is a finding.\n    If administrator and general user functionality are not separated either\nphysically or logically, this is a finding."},{"label":"fix","data":"Configure Couchbase to separate database administration and general user\nfunctionality.\n    As the Full Admin, remove unauthorized roles from a user with the following\ncommand:\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n--script=\"REVOKE <role> FROM <username>\""}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000211-DB-000122","gid":"V-32514","rid":"SV-42851r3_rule","stig_id":"SRG-APP-000211-DB-000122","fix_id":"F-36429r2_fix","cci":["CCI-001082"],"nist":["SC-2","Rev_4"]},"code":"control \"V-32514\" do\n  title \"Couchbase must separate user functionality (including user interface\nservices) from database management functionality.\"\n  desc  \"Information system management functionality includes functions\nnecessary to administer databases, network components, workstations, or servers\nand typically requires privileged user access.\n\n    The separation of user functionality from information system management\nfunctionality is either physical or logical and is accomplished by using\ndifferent computers, different central processing units, different instances of\nthe operating system, different network addresses, combinations of these\nmethods, or other methods, as appropriate.\n\n    An example of this type of separation is observed in web administrative\ninterfaces that use separate authentication methods for users of any other\ninformation system resources.\n\n    This may include isolating the administrative interface on a different\ndomain and with additional access controls.\n\n    If administrative functionality or information regarding Couchbase\nmanagement is presented on an interface available for users, information on\nCouchbase settings may be inadvertently made available to the user.\n  \"\n  desc  \"check\", \"\n    Check Couchbase settings and vendor documentation to verify that\nadministrative functionality is separate from user functionality.\n    As the Full Admin, list current users and roles using the following example\ncommand:\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> -p <Password>\n--list\n    If any non-administrative account has the roles \\\"admin\\\" and\n\\\"cluster_admin\\\", this is a finding.\n    If administrator and general user functionality are not separated either\nphysically or logically, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Configure Couchbase to separate database administration and general user\nfunctionality.\n    As the Full Admin, remove unauthorized roles from a user with the following\ncommand:\n      $ cbq -u <Full Admin> -p <Password> -engine=http://<host>:<port>/\n--script=\\\"REVOKE <role> FROM <username>\\\"\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000211-DB-000122\"\n  tag \"gid\": \"V-32514\"\n  tag \"rid\": \"SV-42851r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000211-DB-000122\"\n  tag \"fix_id\": \"F-36429r2_fix\"\n  tag \"cci\": [\"CCI-001082\"]\n  tag \"nist\": [\"SC-2\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32514.rb"},"waiver_data":{},"results":[]},{"id":"V-58087","title":"Couchbase must generate audit records when security objects are\n  modified.","desc":"Changes in the database objects (tables, views, procedures, functions)\n  that record and control permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized changes to the\n  security subsystem could go undetected. The database could be severely\n  compromised or rendered inoperative.","descriptions":[{"label":"default","data":"Changes in the database objects (tables, views, procedures, functions)\n  that record and control permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized changes to the\n  security subsystem could go undetected. The database could be severely\n  compromised or rendered inoperative."},{"label":"check","data":"If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\n    Couchbase auditing is capable of logging all reads, creations,\nmodifications, and deletions.\n    As the Full Admin, create a user account and grant the user the\ncluster_admin role by executing the following command:\n      $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\n     --rbac-name \"John Doe\" --roles cluster_admin \\\n     --auth-domain local\n    As the John Doe user, create a bucket in the cluster by executing the\nfollowing command:\n      $ couchbase-cli bucket-create -c <host>:<port> --username jdoe --password\ncbpass --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\n    As the John Doe user, edit memory allocated for the bucket created by\nexecuting the following command:\n      $ couchbase-cli bucket-edit -c <host>:<port> --username jdoe \\\n     --password cbpass  --bucket test-data --bucket-ramsize 100\n  Verify the events were logged with the following command:\n    $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n    Output:\n    {\"bucket_name\":\"test-data\",\"description\":\"Bucket was\n    modified\",\"id\":8202,\"name\":\"modify bucket\",\"props\"\n    :{\"ram_quota\":104857600,\"storage_mode\":\"couchstore\"},\n    \"real_use\"rid\"\":{\"domain\":\"local\",\"user\":\"jdoe\"},\n    \"remote\":{\"ip\":\"127.0.0.1\",\"port\":46976},\"timestamp\"\n    :\"2020-08-20T21:06:09.746Z\",\"type\":\"membase\"}\n  If the above steps cannot verify that audit records are produced when\n  security objects are modified, this is a finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce audit records\nwhen security objects are modified.\n  Couchbase Server 6.5.0 and earlier -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n      --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  Couchbase Server Version 6.5.1 and later -\n    As the Full Admin, execute the following command to enable auditing:\n      $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n      --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n      604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000496-DB-000334","gid":"V-58087","rid":"SV-72517r1_rule","stig_id":"SRG-APP-000496-DB-000334","fix_id":"F-63295r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58087\" do\n  title \"Couchbase must generate audit records when security objects are\n  modified.\"\n\n  desc  \"Changes in the database objects (tables, views, procedures, functions)\n  that record and control permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized changes to the\n  security subsystem could go undetected. The database could be severely\n  compromised or rendered inoperative.\"\n  desc  \"check\", \"\n  If the Couchbase architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its\n  built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s), this is not a finding.\n      Couchbase auditing is capable of logging all reads, creations,\n  modifications, and deletions.\n      As the Full Admin, create a user account and grant the user the\n  cluster_admin role by executing the following command:\n        $couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n       -p <Password> --set --rbac-username jdoe --rbac-password cbpass \\\\\n       --rbac-name \\\"John Doe\\\" --roles cluster_admin \\\\\n       --auth-domain local\n      As the John Doe user, create a bucket in the cluster by executing the\n  following command:\n        $ couchbase-cli bucket-create -c <host>:<port> --username jdoe --password\n  cbpass --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\n      As the John Doe user, edit memory allocated for the bucket created by\n  executing the following command:\n        $ couchbase-cli bucket-edit -c <host>:<port> --username jdoe \\\\\n       --password cbpass  --bucket test-data --bucket-ramsize 100\n    Verify the events were logged with the following command:\n      $ cat <Couchbase Home>/var/lib/couchbase/logs/audit.log\n      Output:\n      {\\\"bucket_name\\\":\\\"test-data\\\",\\\"description\\\":\\\"Bucket was\n      modified\\\",\\\"id\\\":8202,\\\"name\\\":\\\"modify bucket\\\",\\\"props\\\"\n      :{\\\"ram_quota\\\":104857600,\\\"storage_mode\\\":\\\"couchstore\\\"},\n      \\\"real_use\\\"rid\\\"\\\":{\\\"domain\\\":\\\"local\\\",\\\"user\\\":\\\"jdoe\\\"},\n      \\\"remote\\\":{\\\"ip\\\":\\\"127.0.0.1\\\",\\\"port\\\":46976},\\\"timestamp\\\"\n      :\\\"2020-08-20T21:06:09.746Z\\\",\\\"type\\\":\\\"membase\\\"}\n    If the above steps cannot verify that audit records are produced when\n    security objects are modified, this is a finding.\"\n\n  desc  \"fix\", \"\n  Enable session auditing on the Couchbase cluster to produce audit records\n  when security objects are modified.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n        --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n        $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n        --password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n        604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\"\n\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000496-DB-000334\"\n  tag \"gid\": \"V-58087\"\n  tag \"rid\": \"SV-72517r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000496-DB-000334\"\n  tag \"fix_id\": \"F-63295r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"Create bucket. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli bucket-create \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --bucket test-data --bucket-type couchbase  --bucket-ramsize 256\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"Edit bucket. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli bucket-edit \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --bucket test-data --bucket-ramsize 100\") } \n    its('exit_status') { should eq 0 }\n  end\n\n  describe \"The logged event should contain required fields. The\" do\n    subject { command(\"grep 'bucket' #{input('cb_audit_log')} | tail -1\") }\n    its('stdout') { should match \"modified\"}\n  end\n\n  describe \"Edit bucket. The\" do \n    subject { command(\"#{input('cb_bin_dir')}/couchbase-cli bucket-delete \\ \n    -c #{input('cb_cluster_host')}:#{input('cb_cluster_port')} \\\n    -u #{input('cb_full_admin')} -p #{input('cb_full_admin_password')} \\\n    --bucket test-data\") } \n    its('exit_status') { should eq 0 }\n  end\nend","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58087.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Create bucket. The exit_status is expected to eq 0","run_time":0.107108,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"Edit bucket. The exit_status is expected to eq 0","run_time":0.099928,"start_time":"2020-09-28T22:09:09-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"},{"status":"failed","code_desc":"The logged event should contain required fields. The stdout is expected to match \"modified\"","run_time":0.02189,"start_time":"2020-09-28T22:09:10-04:00","message":"expected \"\" to match \"modified\""},{"status":"failed","code_desc":"Edit bucket. The exit_status is expected to eq 0","run_time":0.100222,"start_time":"2020-09-28T22:09:10-04:00","message":"\nexpected: 0\n     got: 127\n\n(compared using ==)\n"}]},{"id":"V-58151","title":"Access to database files must be limited to relevant processes and to\nauthorized, administrative users.","desc":"Applications, including Couchbases, must prevent unauthorized and\nunintended information transfer via shared system resources. Permitting only\nCouchbase processes and authorized, administrative users to have access to the\nfiles where the database resides helps ensure that those files are not shared\ninappropriately and are not open to backdoor access and manipulation.","descriptions":[{"label":"default","data":"Applications, including Couchbases, must prevent unauthorized and\nunintended information transfer via shared system resources. Permitting only\nCouchbase processes and authorized, administrative users to have access to the\nfiles where the database resides helps ensure that those files are not shared\ninappropriately and are not open to backdoor access and manipulation."},{"label":"check","data":"Review the permissions granted to users by the operating system/file system\non the database files, database log files and database backup files.\n    To verify that all files are owned by the database administrator and have\nthe correct permissions, run the following:\n    $ ls -lR /opt/couchbase/var/lib/couchbase/data\n    $ ls -lR /opt/couchbase/etc/couchbase/static_config\n    $ ls -IR /opt/couchbase/var/lib/couchbase/logs\n    If any files are not owned by couchbase or allow anyone but the couchbase\nto read/write/execute, this is a finding.\n    If any user/role who is not an authorized system administrator with a need\nto know or database administrator with a need to know, or a system account for\nrunning Couchbase processes, is permitted to read/view any of these files, this\nis a finding."},{"label":"fix","data":"Configure the permissions granted by the operating system/file system on\nthe database files, database log files, and database backup files so that only\nrelevant system accounts and authorized system administrators and database\nadministrators with a need to know are permitted to read/view these files.\n    Any files (for example: extra configuration files) created in the\ninstallation directories must be owned by the authorized system accounts, with\nonly owner permissions to read, write, and execute.\n    Couchbase configuration files directory:\n    chown couchbase:couchbase /opt/couchbase/etc/couchbase\n    chmod 700 /opt/couchbase/etc/couchbase\n    Couchbase default directory (contains data and logs):\n    chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase\n    chmod -R 700 /opt/couchbase/var/lib/couchbase"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000243-DB-000374","gid":"V-58151","rid":"SV-72581r1_rule","stig_id":"SRG-APP-000243-DB-000374","fix_id":"F-63359r1_fix","cci":["CCI-001090"],"nist":["SC-4","Rev_4"]},"code":"control \"V-58151\" do\n  title \"Access to database files must be limited to relevant processes and to\nauthorized, administrative users.\"\n  desc  \"Applications, including Couchbases, must prevent unauthorized and\nunintended information transfer via shared system resources. Permitting only\nCouchbase processes and authorized, administrative users to have access to the\nfiles where the database resides helps ensure that those files are not shared\ninappropriately and are not open to backdoor access and manipulation.\"\n  desc  \"check\", \"\n    Review the permissions granted to users by the operating system/file system\non the database files, database log files and database backup files.\n    To verify that all files are owned by the database administrator and have\nthe correct permissions, run the following:\n    $ ls -lR /opt/couchbase/var/lib/couchbase/data\n    $ ls -lR /opt/couchbase/etc/couchbase/static_config\n    $ ls -IR /opt/couchbase/var/lib/couchbase/logs\n    If any files are not owned by couchbase or allow anyone but the couchbase\nto read/write/execute, this is a finding.\n    If any user/role who is not an authorized system administrator with a need\nto know or database administrator with a need to know, or a system account for\nrunning Couchbase processes, is permitted to read/view any of these files, this\nis a finding.\n  \"\n  desc  \"fix\", \"\n    Configure the permissions granted by the operating system/file system on\nthe database files, database log files, and database backup files so that only\nrelevant system accounts and authorized system administrators and database\nadministrators with a need to know are permitted to read/view these files.\n    Any files (for example: extra configuration files) created in the\ninstallation directories must be owned by the authorized system accounts, with\nonly owner permissions to read, write, and execute.\n    Couchbase configuration files directory:\n    chown couchbase:couchbase /opt/couchbase/etc/couchbase\n    chmod 700 /opt/couchbase/etc/couchbase\n    Couchbase default directory (contains data and logs):\n    chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase\n    chmod -R 700 /opt/couchbase/var/lib/couchbase\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000243-DB-000374\"\n  tag \"gid\": \"V-58151\"\n  tag \"rid\": \"SV-72581r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000243-DB-000374\"\n  tag \"fix_id\": \"F-63359r1_fix\"\n  tag \"cci\": [\"CCI-001090\"]\n  tag \"nist\": [\"SC-4\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58151.rb"},"waiver_data":{},"results":[]},{"id":"V-32571","title":"Couchbase must reveal detailed error messages only to the ISSO, ISSM,\nSA and DBA.","desc":"If Couchbase provides too much information in error logs and\nadministrative messages to the screen, this could lead to compromise. The\nstructure and content of error messages need to be carefully considered by the\norganization and development team. The extent to which the information system\nis able to identify and handle error conditions is guided by organizational\npolicy and operational requirements.\n\n    Some default Couchbase error messages can contain information that could\naid an attacker in, among others things, identifying the database type, host\naddress, or state of the database. Custom errors may contain sensitive customer\ninformation.\n\n    It is important that detailed error messages be visible only to those who\nare authorized to view them; that general users receive only generalized\nacknowledgment that errors have occurred; and that these generalized messages\nappear only when relevant to the user's task. For example, a message along the\nlines of, \"An error has occurred. Unable to save your changes. If this problem\npersists, please contact your help desk\" would be relevant. A message such as\n\"Warning: your transaction generated a large number of page splits\" would\nlikely not be relevant.\n\n    Administrative users authorized to review detailed error messages typically\nare the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified\naccording to organization-specific needs, with appropriate approval.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"If Couchbase provides too much information in error logs and\nadministrative messages to the screen, this could lead to compromise. The\nstructure and content of error messages need to be carefully considered by the\norganization and development team. The extent to which the information system\nis able to identify and handle error conditions is guided by organizational\npolicy and operational requirements.\n\n    Some default Couchbase error messages can contain information that could\naid an attacker in, among others things, identifying the database type, host\naddress, or state of the database. Custom errors may contain sensitive customer\ninformation.\n\n    It is important that detailed error messages be visible only to those who\nare authorized to view them; that general users receive only generalized\nacknowledgment that errors have occurred; and that these generalized messages\nappear only when relevant to the user's task. For example, a message along the\nlines of, \"An error has occurred. Unable to save your changes. If this problem\npersists, please contact your help desk\" would be relevant. A message such as\n\"Warning: your transaction generated a large number of page splits\" would\nlikely not be relevant.\n\n    Administrative users authorized to review detailed error messages typically\nare the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified\naccording to organization-specific needs, with appropriate approval.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered."},{"label":"check","data":"Check Couchbase settings and custom database code to determine if detailed\nerror messages are ever displayed to unauthorized individuals.\n    Review the ownership and permissions of the audit logs:\n      $ ls –ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \"couchbase\" user and group, this is\na finding. If the file permission are not 600, this is a finding."},{"label":"fix","data":"As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n      $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n      $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n      $ chmod 600 /opt/couchbase/var/lib/couchbase/*.logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000267-DB-000163","gid":"V-32571","rid":"SV-42908r5_rule","stig_id":"SRG-APP-000267-DB-000163","fix_id":"F-36486r2_fix","cci":["CCI-001314"],"nist":["SI-11 b","Rev_4"]},"code":"control \"V-32571\" do\n  title \"Couchbase must reveal detailed error messages only to the ISSO, ISSM,\nSA and DBA.\"\n  desc  \"If Couchbase provides too much information in error logs and\nadministrative messages to the screen, this could lead to compromise. The\nstructure and content of error messages need to be carefully considered by the\norganization and development team. The extent to which the information system\nis able to identify and handle error conditions is guided by organizational\npolicy and operational requirements.\n\n    Some default Couchbase error messages can contain information that could\naid an attacker in, among others things, identifying the database type, host\naddress, or state of the database. Custom errors may contain sensitive customer\ninformation.\n\n    It is important that detailed error messages be visible only to those who\nare authorized to view them; that general users receive only generalized\nacknowledgment that errors have occurred; and that these generalized messages\nappear only when relevant to the user's task. For example, a message along the\nlines of, \\\"An error has occurred. Unable to save your changes. If this problem\npersists, please contact your help desk\\\" would be relevant. A message such as\n\\\"Warning: your transaction generated a large number of page splits\\\" would\nlikely not be relevant.\n\n    Administrative users authorized to review detailed error messages typically\nare the ISSO, ISSM, SA, and DBA. Other individuals or roles may be specified\naccording to organization-specific needs, with appropriate approval.\n\n    This calls for inspection of application source code, which will require\ncollaboration with the application developers. It is recognized that in many\ncases, the database administrator (DBA) is organizationally separate from the\napplication developers, and may have limited, if any, access to source code.\nNevertheless, protections of this type are so important to the secure operation\nof databases that they must not be ignored. At a minimum, the DBA must attempt\nto obtain assurances from the development organization that this issue has been\naddressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n    Check Couchbase settings and custom database code to determine if detailed\nerror messages are ever displayed to unauthorized individuals.\n    Review the ownership and permissions of the audit logs:\n      $ ls \\xE2\\x80\\x93ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \\\"couchbase\\\" user and group, this is\na finding. If the file permission are not 600, this is a finding.\n  \"\n  desc  \"fix\", \"\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n      $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n      $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n      $ chmod 600 /opt/couchbase/var/lib/couchbase/*.logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000267-DB-000163\"\n  tag \"gid\": \"V-32571\"\n  tag \"rid\": \"SV-42908r5_rule\"\n  tag \"stig_id\": \"SRG-APP-000267-DB-000163\"\n  tag \"fix_id\": \"F-36486r2_fix\"\n  tag \"cci\": [\"CCI-001314\"]\n  tag \"nist\": [\"SI-11 b\", \"Rev_4\"]\n\n  if file(input('cb_audit_log')).exist?\n    describe file(input('cb_audit_log')) do\n      its ('mode') { should be 0640 }\n      its ('owner') { should eq input('couchdb_owner') }\n    end\n  else\n    describe \"The #{input('cb_audit_log')} file is missing, we cannot test this control\" do\n    skip \"The input('cb_audit_log') file is missing, please restore the file and rerun the test\"\n    end\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32571.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"The /opt/couchbase/var/lib/couchbase/logs/audit.log file is missing, we cannot test this control","run_time":3.0e-06,"start_time":"2020-09-28T22:09:10-04:00","resource":"","skip_message":"The input('cb_audit_log') file is missing, please restore the file and rerun the test"}]},{"id":"V-58097","title":"Couchbase must generate audit records when unsuccessful attempts to\naccess categories of information (e.g., classification levels/security levels)\noccur.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"Review Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to access categories of\ninformation, such access to include reads, creations, modifications and\ndeletions.\n    If Couchbase is not capable of this, this is a finding.\n    Review the Couchbase security and audit configurations to verify that audit\nrecords are produced when the system denies attempts to access categories of\ninformation, such access to include reads, creations, modifications and\ndeletions.\n    If they are not produced, this is a finding.\n    Review the Couchbase security and audit configurations to verify that audit\nrecords are produced when other errors prevent attempts to access categories of\ninformation, such access to include reads, creations, modifications and\ndeletions.\n    If they are not produced, this is a finding."},{"label":"fix","data":"Deploy Couchbase database capable of producing the required audit records\nwhen it denies or fails to complete access to categories of information.\n    Configure Couchbase to produce audit records when it denies access to\ncategories of information, such access to include reads, creations,\nmodifications and deletions.\n    Configure Couchbase to produce audit records when other errors prevent\naccess to categories of information, such access to include reads, creations,\nmodifications and deletions."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000494-DB-000345","gid":"V-58097","rid":"SV-72527r1_rule","stig_id":"SRG-APP-000494-DB-000345","fix_id":"F-63305r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58097\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\naccess categories of information (e.g., classification levels/security levels)\noccur.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    To aid in diagnosis, it is necessary to keep track of failed attempts in\naddition to the successful ones.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    Review Couchbase documentation to verify that audit records can be produced\nwhen the system denies or fails to complete attempts to access categories of\ninformation, such access to include reads, creations, modifications and\ndeletions.\n    If Couchbase is not capable of this, this is a finding.\n    Review the Couchbase security and audit configurations to verify that audit\nrecords are produced when the system denies attempts to access categories of\ninformation, such access to include reads, creations, modifications and\ndeletions.\n    If they are not produced, this is a finding.\n    Review the Couchbase security and audit configurations to verify that audit\nrecords are produced when other errors prevent attempts to access categories of\ninformation, such access to include reads, creations, modifications and\ndeletions.\n    If they are not produced, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Deploy Couchbase database capable of producing the required audit records\nwhen it denies or fails to complete access to categories of information.\n    Configure Couchbase to produce audit records when it denies access to\ncategories of information, such access to include reads, creations,\nmodifications and deletions.\n    Configure Couchbase to produce audit records when other errors prevent\naccess to categories of information, such access to include reads, creations,\nmodifications and deletions.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000494-DB-000345\"\n  tag \"gid\": \"V-58097\"\n  tag \"rid\": \"SV-72527r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000494-DB-000345\"\n  tag \"fix_id\": \"F-63305r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58097.rb"},"waiver_data":{},"results":[]},{"id":"V-32415","title":"Couchbase must limit privileges to change software modules, to include\nstored procedures, functions and triggers, and links to software external to\nCouchbase.","desc":"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.","descriptions":[{"label":"default","data":"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations."},{"label":"check","data":"Only a user with Full Admin role can change database configuration.\n    As the Full Admin, get a list of all RBAC users with the following command:\n    $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\n    If any users have the \"admin\" role that should not, this is a finding.\n    Couchbase configuration files directory -\n     $ ls -la /opt/couchbase/etc/couchbase\n    If the owner and group are not both \"couchbase\" for the configuration\nfiles, this is a finding.\n    If the file permissions are more permissive than \"600\", this is a finding."},{"label":"fix","data":"Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\"admin\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\n     --rbac-name <name> --roles <roles> \\\n     --auth-domain <domain>\n    As the root or sudo user, change the permission of the following\ndirectories:\n    Couchbase configuration files directory:\n      $ chown -R couchbase:couchbase /opt/couchbase/etc/couchbase\n      $ chmod 600 /opt/couchbase/etc/couchbase/*"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000133-DB-000179","gid":"V-32415","rid":"SV-42752r3_rule","stig_id":"SRG-APP-000133-DB-000179","fix_id":"F-36330r2_fix","cci":["CCI-001499"],"nist":["CM-5 (6)","Rev_4"]},"code":"control \"V-32415\" do\n  title \"Couchbase must limit privileges to change software modules, to include\nstored procedures, functions and triggers, and links to software external to\nCouchbase.\"\n  desc  \"If the system were to allow any user to make changes to software\nlibraries, then those changes might be implemented without undergoing the\nappropriate testing and approvals that are part of a robust change management\nprocess.\n\n    Accordingly, only qualified and authorized individuals shall be allowed to\nobtain access to information system components for purposes of initiating\nchanges, including upgrades and modifications.\n\n    Unmanaged changes that occur to the database software libraries or\nconfiguration can lead to unauthorized or compromised installations.\n  \"\n  desc  \"check\", \"\n    Only a user with Full Admin role can change database configuration.\n    As the Full Admin, get a list of all RBAC users with the following command:\n    $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\n    If any users have the \\\"admin\\\" role that should not, this is a finding.\n    Couchbase configuration files directory -\n     $ ls -la /opt/couchbase/etc/couchbase\n    If the owner and group are not both \\\"couchbase\\\" for the configuration\nfiles, this is a finding.\n    If the file permissions are more permissive than \\\"600\\\", this is a finding.\n  \"\n  desc  \"fix\", \"\n    Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\\\"admin\\\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\\\n     --rbac-name <name> --roles <roles> \\\\\n     --auth-domain <domain>\n    As the root or sudo user, change the permission of the following\ndirectories:\n    Couchbase configuration files directory:\n      $ chown -R couchbase:couchbase /opt/couchbase/etc/couchbase\n      $ chmod 600 /opt/couchbase/etc/couchbase/*\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000133-DB-000179\"\n  tag \"gid\": \"V-32415\"\n  tag \"rid\": \"SV-42752r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000133-DB-000179\"\n  tag \"fix_id\": \"F-36330r2_fix\"\n  tag \"cci\": [\"CCI-001499\"]\n  tag \"nist\": [\"CM-5 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32415.rb"},"waiver_data":{},"results":[]},{"id":"V-32555","title":"Couchbase must check the validity of all data inputs except those\n  specifically identified by the organization.","desc":"Invalid user input occurs when a user inserts data or characters into\n  an application's data entry fields and the application is unprepared to process\n  that data. This results in unanticipated application behavior, potentially\n  leading to an application or information system compromise. Invalid user input\n  is one of the primary methods employed when attempting to compromise an\n  application.\n\n  With respect to database management systems, one class of threat is known\n  as SQL Injection, or more generally, code injection. It takes advantage of the\n  dynamic execution capabilities of various programming languages, including\n  dialects of SQL. Potentially, the attacker can gain unauthorized access to\n  data, including security settings, and severely corrupt or destroy the database.\n\n  Even when no such hijacking takes place, invalid input that gets recorded\n  in the database, whether accidental or malicious, reduces the reliability and\n  usability of the system. Available protections include data types, referential\n  constraints, uniqueness constraints, range checking, and application-specific\n  logic. Application-specific logic can be implemented within the database in\n  stored procedures and triggers, where appropriate.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered.","descriptions":[{"label":"default","data":"Invalid user input occurs when a user inserts data or characters into\n  an application's data entry fields and the application is unprepared to process\n  that data. This results in unanticipated application behavior, potentially\n  leading to an application or information system compromise. Invalid user input\n  is one of the primary methods employed when attempting to compromise an\n  application.\n\n  With respect to database management systems, one class of threat is known\n  as SQL Injection, or more generally, code injection. It takes advantage of the\n  dynamic execution capabilities of various programming languages, including\n  dialects of SQL. Potentially, the attacker can gain unauthorized access to\n  data, including security settings, and severely corrupt or destroy the database.\n\n  Even when no such hijacking takes place, invalid input that gets recorded\n  in the database, whether accidental or malicious, reduces the reliability and\n  usability of the system. Available protections include data types, referential\n  constraints, uniqueness constraints, range checking, and application-specific\n  logic. Application-specific logic can be implemented within the database in\n  stored procedures and triggers, where appropriate.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered."},{"label":"check","data":"Review Couchbase code (stored procedures, functions, and triggers),\napplication code, settings, column and field definitions, and constraints to\ndetermine whether the database is protected against invalid input.\n\nIf code exists that allows invalid data to be acted upon or input into the\ndatabase, this is a finding.\nIf column/field definitions do not exist in the database, this is a finding.\nIf columns/fields do not contain constraints and validity checking where\nrequired, this is a finding.\n\nWhere a column/field is noted in the system documentation as necessarily\nfree-form, even though its name and context suggest that it should be strongly\ntyped and constrained, the absence of these protections is not a finding.\nWhere a column/field is clearly identified by name, caption or context as\nNotes, Comments, Description, Text, etc., the absence of these protections is\nnot a finding."},{"label":"fix","data":"Modify database code to properly validate data before it is put into the\ndatabase or acted upon by the database.\nModify the database to contain column/field definitions for each\ncolumn/field in the database.\nModify the database to contain constraints and validity checking on\ndatabase columns and tables that require them for data integrity."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000251-DB-000160","gid":"V-32555","rid":"SV-42892r4_rule","stig_id":"SRG-APP-000251-DB-000160","fix_id":"F-36470r3_fix","cci":["CCI-001310"],"nist":["SI-10","Rev_4"]},"code":"control \"V-32555\" do\n  title \"Couchbase must check the validity of all data inputs except those\n  specifically identified by the organization.\"\n  desc  \"Invalid user input occurs when a user inserts data or characters into\n  an application's data entry fields and the application is unprepared to process\n  that data. This results in unanticipated application behavior, potentially\n  leading to an application or information system compromise. Invalid user input\n  is one of the primary methods employed when attempting to compromise an\n  application.\n\n  With respect to database management systems, one class of threat is known\n  as SQL Injection, or more generally, code injection. It takes advantage of the\n  dynamic execution capabilities of various programming languages, including\n  dialects of SQL. Potentially, the attacker can gain unauthorized access to\n  data, including security settings, and severely corrupt or destroy the database.\n\n  Even when no such hijacking takes place, invalid input that gets recorded\n  in the database, whether accidental or malicious, reduces the reliability and\n  usability of the system. Available protections include data types, referential\n  constraints, uniqueness constraints, range checking, and application-specific\n  logic. Application-specific logic can be implemented within the database in\n  stored procedures and triggers, where appropriate.\n\n  This calls for inspection of application source code, which will require\n  collaboration with the application developers. It is recognized that in many\n  cases, the database administrator (DBA) is organizationally separate from the\n  application developers, and may have limited, if any, access to source code.\n  Nevertheless, protections of this type are so important to the secure operation\n  of databases that they must not be ignored. At a minimum, the DBA must attempt\n  to obtain assurances from the development organization that this issue has been\n  addressed, and must document what has been discovered.\n  \"\n  desc  \"check\", \"\n  Review Couchbase code (stored procedures, functions, and triggers),\n  application code, settings, column and field definitions, and constraints to\n  determine whether the database is protected against invalid input.\n\n  If code exists that allows invalid data to be acted upon or input into the\n  database, this is a finding.\n  If column/field definitions do not exist in the database, this is a finding.\n  If columns/fields do not contain constraints and validity checking where\n  required, this is a finding.\n\n  Where a column/field is noted in the system documentation as necessarily\n  free-form, even though its name and context suggest that it should be strongly\n  typed and constrained, the absence of these protections is not a finding.\n  Where a column/field is clearly identified by name, caption or context as\n  Notes, Comments, Description, Text, etc., the absence of these protections is\n  not a finding.\n  \"\n  desc  \"fix\", \"\n  Modify database code to properly validate data before it is put into the\n  database or acted upon by the database.\n  Modify the database to contain column/field definitions for each\n  column/field in the database.\n  Modify the database to contain constraints and validity checking on\n  database columns and tables that require them for data integrity.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000251-DB-000160\"\n  tag \"gid\": \"V-32555\"\n  tag \"rid\": \"SV-42892r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000251-DB-000160\"\n  tag \"fix_id\": \"F-36470r3_fix\"\n  tag \"cci\": [\"CCI-001310\"]\n  tag \"nist\": [\"SI-10\", \"Rev_4\"]\n\n    describe \"This test requires a Manual Review: Review Couchbase code, application code, settings, column and field definitions, and constraints to\n    determine whether the database is protected against invalid input.\" do\n      skip \"This test requires a Manual Review: Review Couchbase code, application code, settings, column and field definitions, and constraints to\n      determine whether the database is protected against invalid input.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32555.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase code, application code, settings, column and field definitions, and constraints to\n    determine whether the database is protected against invalid input.","run_time":3.0e-06,"start_time":"2020-09-28T22:09:10-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase code, application code, settings, column and field definitions, and constraints to\n      determine whether the database is protected against invalid input."}]},{"id":"V-58175","title":"When updates are applied to Couchbase, any software components that\nhave been replaced or made unnecessary must be removed.","desc":"Previous versions of Couchbase components that are not removed from\nthe information system after updates have been installed may be exploited by\nadversaries.\n\n    Some Couchbases' installation tools may remove older versions of software\nautomatically from the information system. In other cases, manual review and\nremoval will be required. In planning installations and upgrades, organizations\nmust include steps (automated, manual, or both) to identify and remove the\noutdated modules.\n\n    A transition period may be necessary when both the old and the new software\nare required. This should be taken into account in the planning.","descriptions":[{"label":"default","data":"Previous versions of Couchbase components that are not removed from\nthe information system after updates have been installed may be exploited by\nadversaries.\n\n    Some Couchbases' installation tools may remove older versions of software\nautomatically from the information system. In other cases, manual review and\nremoval will be required. In planning installations and upgrades, organizations\nmust include steps (automated, manual, or both) to identify and remove the\noutdated modules.\n\n    A transition period may be necessary when both the old and the new software\nare required. This should be taken into account in the planning."},{"label":"check","data":"Review the list of components and features installed with the Couchbase.\n    If unused components are installed and are not documented and authorized,\nthis is a finding.\n    List the currently installed Couchbase packages:\n    $ yum list installed | grep couchbase\n    If any packages displayed by this command are not being used, this is a\nfinding.\n    If software components that have been replaced or made unnecessary are not\nremoved, this is a finding."},{"label":"fix","data":"To remove unnecessary software use the following command:\n#yum remove <package-name>"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000454-DB-000389","gid":"V-58175","rid":"SV-72605r1_rule","stig_id":"SRG-APP-000454-DB-000389","fix_id":"F-63383r1_fix","cci":["CCI-002617"],"nist":["SI-2 (6)","Rev_4"]},"code":"control \"V-58175\" do\n  title \"When updates are applied to Couchbase, any software components that\nhave been replaced or made unnecessary must be removed.\"\n  desc  \"Previous versions of Couchbase components that are not removed from\nthe information system after updates have been installed may be exploited by\nadversaries.\n\n    Some Couchbases' installation tools may remove older versions of software\nautomatically from the information system. In other cases, manual review and\nremoval will be required. In planning installations and upgrades, organizations\nmust include steps (automated, manual, or both) to identify and remove the\noutdated modules.\n\n    A transition period may be necessary when both the old and the new software\nare required. This should be taken into account in the planning.\n  \"\n  desc  \"check\", \"\n    Review the list of components and features installed with the Couchbase.\n    If unused components are installed and are not documented and authorized,\nthis is a finding.\n    List the currently installed Couchbase packages:\n    $ yum list installed | grep couchbase\n    If any packages displayed by this command are not being used, this is a\nfinding.\n    If software components that have been replaced or made unnecessary are not\nremoved, this is a finding.\n  \"\n  desc  \"fix\", \"\n    To remove unnecessary software use the following command:\n    #yum remove <package-name>\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000454-DB-000389\"\n  tag \"gid\": \"V-58175\"\n  tag \"rid\": \"SV-72605r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000454-DB-000389\"\n  tag \"fix_id\": \"F-63383r1_fix\"\n  tag \"cci\": [\"CCI-002617\"]\n  tag \"nist\": [\"SI-2 (6)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58175.rb"},"waiver_data":{},"results":[]},{"id":"V-58035","title":"Couchbase must provide logout functionality to allow the user to\n  manually terminate a session initiated by that user.","desc":"If a user cannot explicitly end a Couchbase session, the session may\n  remain open and be exploited by an attacker; this is referred to as a zombie\n  session.\n\n  Such logout may be explicit or implicit. Examples of explicit are: clicking\n  on a \"Log Out\" link or button in the application window; clicking the Windows\n  Start button and selecting \"Log Out\" or \"Shut Down.\" Examples of implicit\n  logout are: closing the application's (main) window; powering off the\n  workstation without invoking the OS shutdown.\n\n  Both the explicit and implicit logouts must be detected by Couchbase.\n\n  In all cases, Couchbase must ensure that the user's Couchbase session and\n  all processes owned by the session are terminated.\n\n  This should not, however, interfere with batch processes/jobs initiated by\n  the user during his/her online session: these should be permitted to run to\n  completion.","descriptions":[{"label":"default","data":"If a user cannot explicitly end a Couchbase session, the session may\n  remain open and be exploited by an attacker; this is referred to as a zombie\n  session.\n\n  Such logout may be explicit or implicit. Examples of explicit are: clicking\n  on a \"Log Out\" link or button in the application window; clicking the Windows\n  Start button and selecting \"Log Out\" or \"Shut Down.\" Examples of implicit\n  logout are: closing the application's (main) window; powering off the\n  workstation without invoking the OS shutdown.\n\n  Both the explicit and implicit logouts must be detected by Couchbase.\n\n  In all cases, Couchbase must ensure that the user's Couchbase session and\n  all processes owned by the session are terminated.\n\n  This should not, however, interfere with batch processes/jobs initiated by\n  the user during his/her online session: these should be permitted to run to\n  completion."},{"label":"check","data":"Determine, by reviewing Couchbase documentation and/or inquiring of the\nvendor's technical support staff, whether the Couchbase satisfies this\nrequirement; and, if it does, determine whether this is inherent, unchangeable\nbehavior, or a configurable feature.\nIf Couchbase does not satisfy the requirement, this is a permanent finding.\nIf the behavior is inherent, this is permanently not a finding.\nIf the behavior is configurable, and the current configuration does not\nenforce it, this is a finding."},{"label":"fix","data":"Where relevant, modify the configuration to allow the user to\n  manually terminate a session initiated by that user."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000296-DB-000306","gid":"V-58035","rid":"SV-72465r1_rule","stig_id":"SRG-APP-000296-DB-000306","fix_id":"F-63243r1_fix","cci":["CCI-002363"],"nist":["AC-12 (1)","Rev_4"]},"code":"control \"V-58035\" do\n  title \"Couchbase must provide logout functionality to allow the user to\n  manually terminate a session initiated by that user.\"\n  desc  \"If a user cannot explicitly end a Couchbase session, the session may\n  remain open and be exploited by an attacker; this is referred to as a zombie\n  session.\n\n  Such logout may be explicit or implicit. Examples of explicit are: clicking\n  on a \\\"Log Out\\\" link or button in the application window; clicking the Windows\n  Start button and selecting \\\"Log Out\\\" or \\\"Shut Down.\\\" Examples of implicit\n  logout are: closing the application's (main) window; powering off the\n  workstation without invoking the OS shutdown.\n\n  Both the explicit and implicit logouts must be detected by Couchbase.\n\n  In all cases, Couchbase must ensure that the user's Couchbase session and\n  all processes owned by the session are terminated.\n\n  This should not, however, interfere with batch processes/jobs initiated by\n  the user during his/her online session: these should be permitted to run to\n  completion.\n  \"\n  desc  \"check\", \"\n  Determine, by reviewing Couchbase documentation and/or inquiring of the\n  vendor's technical support staff, whether the Couchbase satisfies this\n  requirement; and, if it does, determine whether this is inherent, unchangeable\n  behavior, or a configurable feature.\n  If Couchbase does not satisfy the requirement, this is a permanent finding.\n  If the behavior is inherent, this is permanently not a finding.\n  If the behavior is configurable, and the current configuration does not\n  enforce it, this is a finding.\n  \"\n  desc  \"fix\", \"Where relevant, modify the configuration to allow the user to\n  manually terminate a session initiated by that user.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000296-DB-000306\"\n  tag \"gid\": \"V-58035\"\n  tag \"rid\": \"SV-72465r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000296-DB-000306\"\n  tag \"fix_id\": \"F-63243r1_fix\"\n  tag \"cci\": [\"CCI-002363\"]\n  tag \"nist\": [\"AC-12 (1)\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review Couchbase documentation and/or inquiring of the\n  vendor's technical support staff, whether the Couchbase satisfies this\n  requirement; and, if it does, determine whether this is inherent, unchangeable\n  behavior, or a configurable feature.\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation and/or inquiring of the\n    vendor's technical support staff, whether the Couchbase satisfies this\n    requirement; and, if it does, determine whether this is inherent, unchangeable\n    behavior, or a configurable feature.\"\n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58035.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation and/or inquiring of the\n  vendor's technical support staff, whether the Couchbase satisfies this\n  requirement; and, if it does, determine whether this is inherent, unchangeable\n  behavior, or a configurable feature.","run_time":2.0e-06,"start_time":"2020-09-28T22:09:10-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation and/or inquiring of the\n    vendor's technical support staff, whether the Couchbase satisfies this\n    requirement; and, if it does, determine whether this is inherent, unchangeable\n    behavior, or a configurable feature."}]},{"id":"V-32374","title":"Couchbase must produce audit records containing sufficient information\nto establish the identity of any user/subject or process associated with the\nevent.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without information that establishes the identity of the\nsubjects (i.e., users or processes acting on behalf of users) associated with\nthe events, security personnel cannot determine responsibility for the\npotentially harmful event.\n\n    Identifiers (if authenticated or otherwise known) include, but are not\nlimited to, user database tables, primary key values, user names, or process\nidentifiers.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without information that establishes the identity of the\nsubjects (i.e., users or processes acting on behalf of users) associated with\nthe events, security personnel cannot determine responsibility for the\npotentially harmful event.\n\n    Identifiers (if authenticated or otherwise known) include, but are not\nlimited to, user database tables, primary key values, user names, or process\nidentifiers."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the user/subject or process associated with the event.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000100-DB-000201","gid":"V-32374","rid":"SV-42711r3_rule","stig_id":"SRG-APP-000100-DB-000201","fix_id":"F-36288r3_fix","cci":["CCI-001487"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32374\" do\n  title \"Couchbase must produce audit records containing sufficient information\nto establish the identity of any user/subject or process associated with the\nevent.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without information that establishes the identity of the\nsubjects (i.e., users or processes acting on behalf of users) associated with\nthe events, security personnel cannot determine responsibility for the\npotentially harmful event.\n\n    Identifiers (if authenticated or otherwise known) include, but are not\nlimited to, user database tables, primary key values, user names, or process\nidentifiers.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the user/subject or process associated with the event.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000100-DB-000201\"\n  tag \"gid\": \"V-32374\"\n  tag \"rid\": \"SV-42711r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000100-DB-000201\"\n  tag \"fix_id\": \"F-36288r3_fix\"\n  tag \"cci\": [\"CCI-001487\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32374.rb"},"waiver_data":{},"results":[]},{"id":"V-32364","title":"Couchbase must be able to generate audit records when\nprivileges/permissions are retrieved.","desc":"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. Couchbases typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that Couchbase continually performs to\ndetermine if any and every action on the database is permitted.","descriptions":[{"label":"default","data":"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. Couchbases typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that Couchbase continually performs to\ndetermine if any and every action on the database is permitted."},{"label":"check","data":"Review Couchbase documentation to verify that audit records can be produced\nwhen privileges/permissions/role memberships are retrieved.\n    If Couchbase is not capable of this, this is a finding.\n    If Couchbase is currently required to audit the retrieval of\nprivilege/permission/role membership information, review the Couchbase/database\nsecurity and audit configurations to verify that audit records are produced\nwhen privileges/permissions/role memberships are retrieved.\n    If they are not produced, this is a finding."},{"label":"fix","data":"Deploy a Couchbase database capable of producing the required audit records\nwhen privileges/permissions/role memberships are retrieved.\n    If currently required, configure Couchbase to produce audit records when\nprivileges/permissions/role memberships are retrieved."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000091-DB-000066","gid":"V-32364","rid":"SV-42701r3_rule","stig_id":"SRG-APP-000091-DB-000066","fix_id":"F-36279r2_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-32364\" do\n  title \"Couchbase must be able to generate audit records when\nprivileges/permissions are retrieved.\"\n  desc  \"Under some circumstances, it may be useful to monitor who/what is\nreading privilege/permission/role information. Therefore, it must be possible\nto configure auditing to do this. Couchbases typically make such information\navailable through views or functions.\n\n    This requirement addresses explicit requests for privilege/permission/role\nmembership information. It does not refer to the implicit retrieval of\nprivileges/permissions/role memberships that Couchbase continually performs to\ndetermine if any and every action on the database is permitted.\n  \"\n  desc  \"check\", \"\n    Review Couchbase documentation to verify that audit records can be produced\nwhen privileges/permissions/role memberships are retrieved.\n    If Couchbase is not capable of this, this is a finding.\n    If Couchbase is currently required to audit the retrieval of\nprivilege/permission/role membership information, review the Couchbase/database\nsecurity and audit configurations to verify that audit records are produced\nwhen privileges/permissions/role memberships are retrieved.\n    If they are not produced, this is a finding.\n  \"\n  desc  \"fix\", \"\n    Deploy a Couchbase database capable of producing the required audit records\nwhen privileges/permissions/role memberships are retrieved.\n    If currently required, configure Couchbase to produce audit records when\nprivileges/permissions/role memberships are retrieved.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000091-DB-000066\"\n  tag \"gid\": \"V-32364\"\n  tag \"rid\": \"SV-42701r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000091-DB-000066\"\n  tag \"fix_id\": \"F-36279r2_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32364.rb"},"waiver_data":{},"results":[]},{"id":"V-32397","title":"Couchbase must protect its audit features from unauthorized access.","desc":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data.\n\n    Depending upon the log format and application, system and application log\ntools may provide the only means to manipulate and manage application and\nsystem log data. It is, therefore, imperative that access to audit tools be\ncontrolled and protected from unauthorized access.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe access to audit tools.\n\n    Audit tools include, but are not limited to, OS-provided audit tools,\nvendor-provided audit tools, and open source audit tools needed to successfully\nview and manipulate audit information system activity and records.\n\n    If an attacker were to gain access to audit tools, he could analyze audit\nlogs for system weaknesses or weaknesses in the auditing itself. An attacker\ncould also manipulate logs to hide evidence of malicious activity.","descriptions":[{"label":"default","data":"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data.\n\n    Depending upon the log format and application, system and application log\ntools may provide the only means to manipulate and manage application and\nsystem log data. It is, therefore, imperative that access to audit tools be\ncontrolled and protected from unauthorized access.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe access to audit tools.\n\n    Audit tools include, but are not limited to, OS-provided audit tools,\nvendor-provided audit tools, and open source audit tools needed to successfully\nview and manipulate audit information system activity and records.\n\n    If an attacker were to gain access to audit tools, he could analyze audit\nlogs for system weaknesses or weaknesses in the auditing itself. An attacker\ncould also manipulate logs to hide evidence of malicious activity."},{"label":"check","data":"Only a user with Full Admin role can change auditing controls.\n    As the Full Admin, get a list of all RBAC users with the following command:\n    $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\n    If any users have the \"admin\" role that should not, this is a finding.\n    Additionally, the permissions of the config file should also be verified.\nThis can be done by running the following command:\n     $ ls -la /opt/couchbase/etc/couchbase/static_config\n    Review the ownership and permissions. If anyone other than couchbase is the\nowner and group owner, this is a finding. If permissions are not set to 600,\nthis is a finding."},{"label":"fix","data":"Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\"admin\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\n     --rbac-name <name> --roles <roles> \\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000121-DB-000202","gid":"V-32397","rid":"SV-42734r3_rule","stig_id":"SRG-APP-000121-DB-000202","fix_id":"F-36311r2_fix","cci":["CCI-001493"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32397\" do\n  title \"Couchbase must protect its audit features from unauthorized access.\"\n  desc  \"Protecting audit data also includes identifying and protecting the\ntools used to view and manipulate log data.\n\n    Depending upon the log format and application, system and application log\ntools may provide the only means to manipulate and manage application and\nsystem log data. It is, therefore, imperative that access to audit tools be\ncontrolled and protected from unauthorized access.\n\n    Applications providing tools to interface with audit data will leverage\nuser permissions and roles identifying the user accessing the tools and the\ncorresponding rights the user enjoys in order make access decisions regarding\nthe access to audit tools.\n\n    Audit tools include, but are not limited to, OS-provided audit tools,\nvendor-provided audit tools, and open source audit tools needed to successfully\nview and manipulate audit information system activity and records.\n\n    If an attacker were to gain access to audit tools, he could analyze audit\nlogs for system weaknesses or weaknesses in the auditing itself. An attacker\ncould also manipulate logs to hide evidence of malicious activity.\n  \"\n  desc  \"check\", \"\n    Only a user with Full Admin role can change auditing controls.\n    As the Full Admin, get a list of all RBAC users with the following command:\n    $ couchbase-cli user-manage -c  <localhost>:<port>  -u <Full Admin> -p\n<Password> --list\n    If any users have the \\\"admin\\\" role that should not, this is a finding.\n    Additionally, the permissions of the config file should also be verified.\nThis can be done by running the following command:\n     $ ls -la /opt/couchbase/etc/couchbase/static_config\n    Review the ownership and permissions. If anyone other than couchbase is the\nowner and group owner, this is a finding. If permissions are not set to 600,\nthis is a finding.\n  \"\n  desc  \"fix\", \"\n    Remove users who should not have Full Admin role. To manage the roles this\ncan be done by running the following command (Note: Do not include the\n\\\"admin\\\" role in command):\n    $ couchbase-cli user-manage -c <host>:<port> -u <Full Admin> \\\\\n     -p <Password> --set --rbac-username <user> --rbac-password <password> \\\\\n     --rbac-name <name> --roles <roles> \\\\\n     --auth-domain <domain>\n    As the root or sudo user, assign the correct permissions to the config file\nfun the following commands:\n      $ sudo chown -R couchbase:couchbase\n/opt/couchbase/etc/couchbase/static_config\n      $ sudo chmod 600 /opt/couchbase/etc/couchbase/static_config\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000121-DB-000202\"\n  tag \"gid\": \"V-32397\"\n  tag \"rid\": \"SV-42734r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000121-DB-000202\"\n  tag \"fix_id\": \"F-36311r2_fix\"\n  tag \"cci\": [\"CCI-001493\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32397.rb"},"waiver_data":{},"results":[]},{"id":"V-32383","title":"Couchbase must by default shut down upon audit failure, to include the\nunavailability of space for more audit log records; or must be configurable to\nshut down upon audit failure.","desc":"It is critical that when Couchbase is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When the need for system availability does not outweigh the need for a\ncomplete audit trail, Couchbase should shut down immediately, rolling back all\nin-flight transactions.\n\n    Systems where audit trail completeness is paramount will most likely be at\na lower MAC level than MAC I; the final determination is the prerogative of the\napplication owner, subject to Authorizing Official concurrence. In any case,\nsufficient auditing resources must be allocated to avoid a shutdown in all but\nthe most extreme situations.","descriptions":[{"label":"default","data":"It is critical that when Couchbase is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When the need for system availability does not outweigh the need for a\ncomplete audit trail, Couchbase should shut down immediately, rolling back all\nin-flight transactions.\n\n    Systems where audit trail completeness is paramount will most likely be at\na lower MAC level than MAC I; the final determination is the prerogative of the\napplication owner, subject to Authorizing Official concurrence. In any case,\nsufficient auditing resources must be allocated to avoid a shutdown in all but\nthe most extreme situations."},{"label":"check","data":"If the application owner has determined that the need for system\navailability outweighs the need for a complete audit trail, this is not\napplicable (NA).\n    Review Couchbase, OS, or third-party logging application settings and/or\ndocumentation to determine whether the system is capable of shutting down,\nrolling back all in-flight transactions, in the case of an auditing failure. If\nit is not, this is a finding.\n    If the system is capable of shutting down upon audit failure but is not\nconfigured to do so, this is a finding."},{"label":"fix","data":"Configure the system to shut down, rolling back all in-flight\ntransactions, in the case of an auditing failure."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000109-DB-000049","gid":"V-32383","rid":"SV-42720r3_rule","stig_id":"SRG-APP-000109-DB-000049","fix_id":"F-36298r2_fix","cci":["CCI-000140"],"nist":["AU-5 b","Rev_4"]},"code":"control \"V-32383\" do\n  title \"Couchbase must by default shut down upon audit failure, to include the\nunavailability of space for more audit log records; or must be configurable to\nshut down upon audit failure.\"\n  desc  \"It is critical that when Couchbase is at risk of failing to process\naudit logs as required, it take action to mitigate the failure. Audit\nprocessing failures include: software/hardware errors; failures in the audit\ncapturing mechanisms; and audit storage capacity being reached or exceeded.\nResponses to audit failure depend upon the nature of the failure mode.\n\n    When the need for system availability does not outweigh the need for a\ncomplete audit trail, Couchbase should shut down immediately, rolling back all\nin-flight transactions.\n\n    Systems where audit trail completeness is paramount will most likely be at\na lower MAC level than MAC I; the final determination is the prerogative of the\napplication owner, subject to Authorizing Official concurrence. In any case,\nsufficient auditing resources must be allocated to avoid a shutdown in all but\nthe most extreme situations.\n  \"\n  desc  \"check\", \"\n    If the application owner has determined that the need for system\navailability outweighs the need for a complete audit trail, this is not\napplicable (NA).\n    Review Couchbase, OS, or third-party logging application settings and/or\ndocumentation to determine whether the system is capable of shutting down,\nrolling back all in-flight transactions, in the case of an auditing failure. If\nit is not, this is a finding.\n    If the system is capable of shutting down upon audit failure but is not\nconfigured to do so, this is a finding.\n  \"\n  desc  \"fix\", \"Configure the system to shut down, rolling back all in-flight\ntransactions, in the case of an auditing failure.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000109-DB-000049\"\n  tag \"gid\": \"V-32383\"\n  tag \"rid\": \"SV-42720r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000109-DB-000049\"\n  tag \"fix_id\": \"F-36298r2_fix\"\n  tag \"cci\": [\"CCI-000140\"]\n  tag \"nist\": [\"AU-5 b\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32383.rb"},"waiver_data":{},"results":[]},{"id":"V-32370","title":"Couchbase must produce audit records containing sufficient information\nto establish where the events occurred.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing where events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    Associating information about where the event occurred within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing where events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    Associating information about where the event occurred within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding where the events occurred.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000097-DB-000041","gid":"V-32370","rid":"SV-42707r3_rule","stig_id":"SRG-APP-000097-DB-000041","fix_id":"F-36285r3_fix","cci":["CCI-000132"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32370\" do\n  title \"Couchbase must produce audit records containing sufficient information\nto establish where the events occurred.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing where events occurred, it is impossible\nto establish, correlate, and investigate the events relating to an incident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    Associating information about where the event occurred within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding where the events occurred.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000097-DB-000041\"\n  tag \"gid\": \"V-32370\"\n  tag \"rid\": \"SV-42707r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000097-DB-000041\"\n  tag \"fix_id\": \"F-36285r3_fix\"\n  tag \"cci\": [\"CCI-000132\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32370.rb"},"waiver_data":{},"results":[]},{"id":"V-61407","title":"If Couchbase authentication, using passwords, is employed, Couchbase\nmust enforce the DoD standards for password complexity and lifetime","desc":"OS/enterprise authentication and identification must be used\n(SRG-APP-000023-DB-000001).  Native Couchbase authentication may be used only\nwhen circumstances make it unavoidable; and must be documented and AO-approved.\n\n    The DoD standard for authentication is DoD-approved PKI certificates.\nAuthentication based on User ID and Password may be used only when it is not\npossible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, the DoD standards for password complexity and lifetime must\nbe implemented.  Couchbase products that can inherit the rules for these from\nthe operating system or access control program (e.g., Microsoft Active\nDirectory) must be configured to do so.  For other Couchbases, the rules must\nbe enforced using available configuration parameters or custom code.","descriptions":[{"label":"default","data":"OS/enterprise authentication and identification must be used\n(SRG-APP-000023-DB-000001).  Native Couchbase authentication may be used only\nwhen circumstances make it unavoidable; and must be documented and AO-approved.\n\n    The DoD standard for authentication is DoD-approved PKI certificates.\nAuthentication based on User ID and Password may be used only when it is not\npossible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, the DoD standards for password complexity and lifetime must\nbe implemented.  Couchbase products that can inherit the rules for these from\nthe operating system or access control program (e.g., Microsoft Active\nDirectory) must be configured to do so.  For other Couchbases, the rules must\nbe enforced using available configuration parameters or custom code."},{"label":"check","data":"If Couchbase password authentication is not used, this is not a finding.\n    As the Full Admin, review the password policy set using the following\ncommand:\n    $ couchbase-cli setting-password-policy -c <host>:<port> -u <Full Admin> -p\n<Password> --get\n    Review the output. If \"minLength\" is not equal to 15, this is a finding.\nIf \"enforceDigits\", \"enforceLowercase\", enforceSpecialChars\", and\n\"enforceUppercase\" are not set to \"true\", this is a finding."},{"label":"fix","data":"Change password policy settings to be compliant.\n    Couchbase Server 6.0.x and earlier -\n    As the Full Admin, change the password policy to an approved setting with\nthe following command:\n    $ couchbase-cli setting-password-policy -c <host>:<port> -u <Full Admin> -p\n<Password> --set --min-length 15 --uppercase --lowercase --digit --special-char\n    Couchbase Server Version 6.5.x and later -\n    As the Full Admin, change the password policy to an approved setting with\nthe following command:\n      $ couchbase-cli setting-password-policy -c <host>:<port> -u <Full Admin>\n-p <Password> --set --min-length 15 --uppercase 1 --lowercase 1 --digit 1\n--special-char 1"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000164-DB-000401","gid":"V-61407","rid":"SV-75897r3_rule","stig_id":"SRG-APP-000164-DB-000401","fix_id":"F-67323r7_fix","cci":["CCI-000192"],"nist":["IA-5 (1) (a)","Rev_4"]},"code":"control \"V-61407\" do\n  title \"If Couchbase authentication, using passwords, is employed, Couchbase\nmust enforce the DoD standards for password complexity and lifetime\"\n  desc  \"OS/enterprise authentication and identification must be used\n(SRG-APP-000023-DB-000001).  Native Couchbase authentication may be used only\nwhen circumstances make it unavoidable; and must be documented and AO-approved.\n\n    The DoD standard for authentication is DoD-approved PKI certificates.\nAuthentication based on User ID and Password may be used only when it is not\npossible to employ a PKI certificate, and requires AO approval.\n\n    In such cases, the DoD standards for password complexity and lifetime must\nbe implemented.  Couchbase products that can inherit the rules for these from\nthe operating system or access control program (e.g., Microsoft Active\nDirectory) must be configured to do so.  For other Couchbases, the rules must\nbe enforced using available configuration parameters or custom code.\n  \"\n  desc  \"check\", \"\n    If Couchbase password authentication is not used, this is not a finding.\n    As the Full Admin, review the password policy set using the following\ncommand:\n    $ couchbase-cli setting-password-policy -c <host>:<port> -u <Full Admin> -p\n<Password> --get\n    Review the output. If \\\"minLength\\\" is not equal to 15, this is a finding.\nIf \\\"enforceDigits\\\", \\\"enforceLowercase\\\", enforceSpecialChars\\\", and\n\\\"enforceUppercase\\\" are not set to \\\"true\\\", this is a finding.\n  \"\n  desc  \"fix\", \"\n    Change password policy settings to be compliant.\n    Couchbase Server 6.0.x and earlier -\n    As the Full Admin, change the password policy to an approved setting with\nthe following command:\n    $ couchbase-cli setting-password-policy -c <host>:<port> -u <Full Admin> -p\n<Password> --set --min-length 15 --uppercase --lowercase --digit --special-char\n    Couchbase Server Version 6.5.x and later -\n    As the Full Admin, change the password policy to an approved setting with\nthe following command:\n      $ couchbase-cli setting-password-policy -c <host>:<port> -u <Full Admin>\n-p <Password> --set --min-length 15 --uppercase 1 --lowercase 1 --digit 1\n--special-char 1\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000164-DB-000401\"\n  tag \"gid\": \"V-61407\"\n  tag \"rid\": \"SV-75897r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000164-DB-000401\"\n  tag \"fix_id\": \"F-67323r7_fix\"\n  tag \"cci\": [\"CCI-000192\"]\n  tag \"nist\": [\"IA-5 (1) (a)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-61407.rb"},"waiver_data":{},"results":[]},{"id":"V-32393","title":"The audit information produced by Couchbase must be protected from\nunauthorized read access.","desc":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is difficult, if not impossible, to achieve. In addition, access to\naudit records provides information an attacker could potentially use to his or\nher advantage.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from any and all unauthorized\naccess. This includes read, write, copy, etc.\n\n    This requirement can be achieved through multiple methods which will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions utilizing file\nsystem protections and limiting log data location.\n\n    Additionally, applications with user interfaces to audit records should not\nallow for the unfettered manipulation of or access to those records via the\napplication. If the application provides access to the audit data, the\napplication becomes accountable for ensuring that audit information is\nprotected from unauthorized access.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.","descriptions":[{"label":"default","data":"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is difficult, if not impossible, to achieve. In addition, access to\naudit records provides information an attacker could potentially use to his or\nher advantage.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from any and all unauthorized\naccess. This includes read, write, copy, etc.\n\n    This requirement can be achieved through multiple methods which will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions utilizing file\nsystem protections and limiting log data location.\n\n    Additionally, applications with user interfaces to audit records should not\nallow for the unfettered manipulation of or access to those records via the\napplication. If the application provides access to the audit data, the\napplication becomes accountable for ensuring that audit information is\nprotected from unauthorized access.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity."},{"label":"check","data":"Review locations of audit logs, both internal to the database and database\naudit logs located at the operating system level.\n    Review the ownership and permissions of the audit logs:\n    $ ls –ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \"couchbase\" user and group, this is\na finding. If the file permission are not 600, this is a finding."},{"label":"fix","data":"Apply controls and modify permissions to protect database audit log data\nfrom unauthorized read access, whether stored in the database itself or at the\nOS level.\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n    $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 660 /opt/couchbase/var/lib/couchbase/*.logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000118-DB-000059","gid":"V-32393","rid":"SV-42730r3_rule","stig_id":"SRG-APP-000118-DB-000059","fix_id":"F-36308r2_fix","cci":["CCI-000162"],"nist":["AU-9","Rev_4"]},"code":"control \"V-32393\" do\n  title \"The audit information produced by Couchbase must be protected from\nunauthorized read access.\"\n  desc  \"If audit data were to become compromised, then competent forensic\nanalysis and discovery of the true source of potentially malicious system\nactivity is difficult, if not impossible, to achieve. In addition, access to\naudit records provides information an attacker could potentially use to his or\nher advantage.\n\n    To ensure the veracity of audit data, the information system and/or the\napplication must protect audit information from any and all unauthorized\naccess. This includes read, write, copy, etc.\n\n    This requirement can be achieved through multiple methods which will depend\nupon system architecture and design. Some commonly employed methods include\nensuring log files enjoy the proper file system permissions utilizing file\nsystem protections and limiting log data location.\n\n    Additionally, applications with user interfaces to audit records should not\nallow for the unfettered manipulation of or access to those records via the\napplication. If the application provides access to the audit data, the\napplication becomes accountable for ensuring that audit information is\nprotected from unauthorized access.\n\n    Audit information includes all information (e.g., audit records, audit\nsettings, and audit reports) needed to successfully audit information system\nactivity.\n  \"\n  desc  \"check\", \"\n    Review locations of audit logs, both internal to the database and database\naudit logs located at the operating system level.\n    Review the ownership and permissions of the audit logs:\n    $ ls \\xE2\\x80\\x93ald /opt/couchbase/var/lib/couchbase/logs\n    If the logs are not owned by both the \\\"couchbase\\\" user and group, this is\na finding. If the file permission are not 600, this is a finding.\n\n  \"\n  desc  \"fix\", \"\n    Apply controls and modify permissions to protect database audit log data\nfrom unauthorized read access, whether stored in the database itself or at the\nOS level.\n    As the root or sudo user, change the permissions/ownership of the logs\nusing the following commands:\n    $ chown -R couchbase:couchbase /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 700 /opt/couchbase/var/lib/couchbase/logs\n    $ chmod 660 /opt/couchbase/var/lib/couchbase/*.logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000118-DB-000059\"\n  tag \"gid\": \"V-32393\"\n  tag \"rid\": \"SV-42730r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000118-DB-000059\"\n  tag \"fix_id\": \"F-36308r2_fix\"\n  tag \"cci\": [\"CCI-000162\"]\n  tag \"nist\": [\"AU-9\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32393.rb"},"waiver_data":{},"results":[]},{"id":"V-32371","title":"Couchbase must produce audit records containing sufficient information\nto establish the sources (origins) of the events.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing the source of the event, it is\nimpossible to establish, correlate, and investigate the events relating to an\nincident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    In addition to logging where events occur within the application, the\napplication must also produce audit records that identify the application\nitself as the source of the event.\n\n    Associating information about the source of the event within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing the source of the event, it is\nimpossible to establish, correlate, and investigate the events relating to an\nincident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    In addition to logging where events occur within the application, the\napplication must also produce audit records that identify the application\nitself as the source of the event.\n\n    Associating information about the source of the event within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication."},{"label":"check","data":"Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \"id\" - ID of Event\n      - \"name\" - Name of Event (can indicate success/failure)\n      - \"description\" - Event Description (can indicate success/failure)\n      - \"filtering_permitted\" - Whether the event is filterable\n      - \"mandatory_fields\" - Includes \"timestamp\" (UTC time and ISO 8601\nformat) and \"user\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \"node_id\" - ID of Node\n      - \"session_id\" - ID of current Session\n      - \"ip\" - Remote IP address\n      - \"port\" - Remote port\n      - \"bucket_name\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the sources (origins) of the events.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000098-DB-000042","gid":"V-32371","rid":"SV-42708r3_rule","stig_id":"SRG-APP-000098-DB-000042","fix_id":"F-36286r3_fix","cci":["CCI-000133"],"nist":["AU-3","Rev_4"]},"code":"control \"V-32371\" do\n  title \"Couchbase must produce audit records containing sufficient information\nto establish the sources (origins) of the events.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Without establishing the source of the event, it is\nimpossible to establish, correlate, and investigate the events relating to an\nincident.\n\n    In order to compile an accurate risk assessment and provide forensic\nanalysis, it is essential for security personnel to know where events occurred,\nsuch as application components, modules, session identifiers, filenames, host\nnames, and functionality.\n\n    In addition to logging where events occur within the application, the\napplication must also produce audit records that identify the application\nitself as the source of the event.\n\n    Associating information about the source of the event within the\napplication provides a means of investigating an attack; recognizing resource\nutilization or capacity thresholds; or identifying an improperly configured\napplication.\n  \"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase auditing provides the following\nfields by default:\n      - \\\"id\\\" - ID of Event\n      - \\\"name\\\" - Name of Event (can indicate success/failure)\n      - \\\"description\\\" - Event Description (can indicate success/failure)\n      - \\\"filtering_permitted\\\" - Whether the event is filterable\n      - \\\"mandatory_fields\\\" - Includes \\\"timestamp\\\" (UTC time and ISO 8601\nformat) and \\\"user\\\" fields\n    Note that different event-types generate different field-subsets. Below are\nsome of the fields provided:\n      - \\\"node_id\\\" - ID of Node\n      - \\\"session_id\\\" - ID of current Session\n      - \\\"ip\\\" - Remote IP address\n      - \\\"port\\\" - Remote port\n      - \\\"bucket_name\\\" - Name of Bucket\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster to produce sufficient\ninformation regarding the sources (origins) of the events.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.51 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000098-DB-000042\"\n  tag \"gid\": \"V-32371\"\n  tag \"rid\": \"SV-42708r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000098-DB-000042\"\n  tag \"fix_id\": \"F-36286r3_fix\"\n  tag \"cci\": [\"CCI-000133\"]\n  tag \"nist\": [\"AU-3\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32371.rb"},"waiver_data":{},"results":[]},{"id":"V-58089","title":"Couchbase must generate audit records when unsuccessful attempts to\n  modify security objects occur.","desc":"Changes in the database objects (tables, views, procedures, functions)\n  that record and control permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized changes to the\n  security subsystem could go undetected. The database could be severely\n  compromised or rendered inoperative.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.","descriptions":[{"label":"default","data":"Changes in the database objects (tables, views, procedures, functions)\n  that record and control permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized changes to the\n  security subsystem could go undetected. The database could be severely\n  compromised or rendered inoperative.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones."},{"label":"check","data":"If the Couchbase architecture makes it impossible for any user, even with\nthe highest privileges, to directly view or directly modify the contents of its\nbuilt-in security objects, and if there are no additional, locally-defined\nsecurity objects in the database(s), this is not a finding.\nIf Couchbase is not capable of this, this is a finding.\n    \nReview Couchbase security and audit configurations to verify that audit\nrecords are produced when the system denies attempts to modify security objects.\nIf they are not produced, this is a finding.\n    \nReview Couchbase security and audit configurations to verify that audit\nrecords are produced when other errors prevent attempts to modify security\nobjects.\nIf they are not produced, this is a finding."},{"label":"fix","data":"Deploy a Couchbase database capable of producing the required audit records\nwhen it denies or fails to complete attempts to modify security objects, such\nas tables, views, procedures, and functions.\n    \nConfigure Couchbase to produce audit records when it denies attempts to\nmodify security objects, to include reads, creations, modifications, and\ndeletions.\n   \nConfigure Couchbase to produce audit records when other errors prevent\nattempts to modify security objects, to include reads, creations,\nmodifications, and deletions."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000496-DB-000335","gid":"V-58089","rid":"SV-72519r1_rule","stig_id":"SRG-APP-000496-DB-000335","fix_id":"F-63297r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58089\" do\n  title \"Couchbase must generate audit records when unsuccessful attempts to\n  modify security objects occur.\"\n  desc  \"Changes in the database objects (tables, views, procedures, functions)\n  that record and control permissions, privileges, and roles granted to users and\n  roles must be tracked. Without an audit trail, unauthorized changes to the\n  security subsystem could go undetected. The database could be severely\n  compromised or rendered inoperative.\n\n  To aid in diagnosis, it is necessary to keep track of failed attempts in\n  addition to the successful ones.\n  \"\n  desc  \"check\", \"\n  If the Couchbase architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its\n  built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s), this is not a finding.\n  If Couchbase is not capable of this, this is a finding.\n      \n  Review Couchbase security and audit configurations to verify that audit\n  records are produced when the system denies attempts to modify security objects.\n  If they are not produced, this is a finding.\n      \n  Review Couchbase security and audit configurations to verify that audit\n  records are produced when other errors prevent attempts to modify security\n  objects.\n  If they are not produced, this is a finding.\n  \"\n  desc  \"fix\", \"\n  Deploy a Couchbase database capable of producing the required audit records\n  when it denies or fails to complete attempts to modify security objects, such\n  as tables, views, procedures, and functions.\n      \n  Configure Couchbase to produce audit records when it denies attempts to\n  modify security objects, to include reads, creations, modifications, and\n  deletions.\n     \n  Configure Couchbase to produce audit records when other errors prevent\n  attempts to modify security objects, to include reads, creations,\n  modifications, and deletions.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000496-DB-000335\"\n  tag \"gid\": \"V-58089\"\n  tag \"rid\": \"SV-72519r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000496-DB-000335\"\n  tag \"fix_id\": \"F-63297r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\n\n  describe \"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s).\" do\n    skip \"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n    the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n    security objects in the database(s).\" \n  end\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58089.rb"},"waiver_data":{},"results":[{"status":"skipped","code_desc":"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n  the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n  security objects in the database(s).","run_time":2.0e-06,"start_time":"2020-09-28T22:09:10-04:00","resource":"","skip_message":"This test requires a Manual Review: Review Couchbase documentation to verify the architecture makes it impossible for any user, even with\n    the highest privileges, to directly view or directly modify the contents of its built-in security objects, and if there are no additional, locally-defined\n    security objects in the database(s)."}]},{"id":"V-58099","title":"Couchbase must generate audit records when categories of information\n(e.g., classification levels/security levels) are modified.","desc":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.","descriptions":[{"label":"default","data":"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems."},{"label":"check","data":"When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000498-DB-000346","gid":"V-58099","rid":"SV-72529r1_rule","stig_id":"SRG-APP-000498-DB-000346","fix_id":"F-63307r1_fix","cci":["CCI-000172"],"nist":["AU-12 c","Rev_4"]},"code":"control \"V-58099\" do\n  title \"Couchbase must generate audit records when categories of information\n(e.g., classification levels/security levels) are modified.\"\n  desc  \"Changes in categories of information must be tracked. Without an audit\ntrail, unauthorized access to protected data could go undetected.\n\n    For detailed information on categorizing information, refer to FIPS\nPublication 199, Standards for Security Categorization of Federal Information\nand Information Systems, and FIPS Publication 200, Minimum Security\nRequirements for Federal Information and Information Systems.\n  \"\n  desc  \"check\", \"\n    When enabled on the cluster, Couchbase auditing is capable of logging all\nreads, creations, modifications, and deletions.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <host>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000498-DB-000346\"\n  tag \"gid\": \"V-58099\"\n  tag \"rid\": \"SV-72529r1_rule\"\n  tag \"stig_id\": \"SRG-APP-000498-DB-000346\"\n  tag \"fix_id\": \"F-63307r1_fix\"\n  tag \"cci\": [\"CCI-000172\"]\n  tag \"nist\": [\"AU-12 c\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-58099.rb"},"waiver_data":{},"results":[]},{"id":"V-32157","title":"Couchbase must limit the number of concurrent sessions to an\norganization-defined number per user for all accounts and/or account types.","desc":"Database management includes the ability to control the number of\nusers and user sessions utilizing a Couchbase. Unlimited concurrent connections\nto Couchbase could allow a successful Denial of Service (DoS) attack by\nexhausting connection resources; and a system can also fail or be degraded by\nan overload of legitimate users. Limiting the number of concurrent sessions per\nuser is helpful in reducing these risks.\n\n    This requirement addresses concurrent session control for a single account.\nIt does not address concurrent sessions by a single user via multiple system\naccounts; and it does not deal with the total number of sessions across all\naccounts.\n\n    The capability to limit the number of concurrent sessions per user must be\nconfigured in or added to Couchbase (for example, by use of a logon trigger),\nwhen this is technically feasible. Note that it is not sufficient to limit\nsessions via a web server or application server alone, because legitimate users\nand adversaries can potentially connect to Couchbase by other means.\n\n    The organization will need to define the maximum number of concurrent\nsessions by account type, by account, or a combination thereof. In deciding on\nthe appropriate number, it is important to consider the work requirements of\nthe various types of users. For example, 2 might be an acceptable limit for\ngeneral users accessing the database via an application; but 10 might be too\nfew for a database administrator using a database management GUI tool, where\neach query tab and navigation pane may count as a separate session.\n\n    (Sessions may also be referred to as connections or logons, which for the\npurposes of this requirement are synonyms.)","descriptions":[{"label":"default","data":"Database management includes the ability to control the number of\nusers and user sessions utilizing a Couchbase. Unlimited concurrent connections\nto Couchbase could allow a successful Denial of Service (DoS) attack by\nexhausting connection resources; and a system can also fail or be degraded by\nan overload of legitimate users. Limiting the number of concurrent sessions per\nuser is helpful in reducing these risks.\n\n    This requirement addresses concurrent session control for a single account.\nIt does not address concurrent sessions by a single user via multiple system\naccounts; and it does not deal with the total number of sessions across all\naccounts.\n\n    The capability to limit the number of concurrent sessions per user must be\nconfigured in or added to Couchbase (for example, by use of a logon trigger),\nwhen this is technically feasible. Note that it is not sufficient to limit\nsessions via a web server or application server alone, because legitimate users\nand adversaries can potentially connect to Couchbase by other means.\n\n    The organization will need to define the maximum number of concurrent\nsessions by account type, by account, or a combination thereof. In deciding on\nthe appropriate number, it is important to consider the work requirements of\nthe various types of users. For example, 2 might be an acceptable limit for\ngeneral users accessing the database via an application; but 10 might be too\nfew for a database administrator using a database management GUI tool, where\neach query tab and navigation pane may count as a separate session.\n\n    (Sessions may also be referred to as connections or logons, which for the\npurposes of this requirement are synonyms.)"},{"label":"check","data":"Determine whether the system documentation specifies limits on the number\nof concurrent Couchbase sessions per account by type of user. If it does not,\nassume a limit of 10 for database administrators and 2 for all other users.\n    Review the concurrent-sessions settings in Couchbase and/or the\napplications using it, and/or the system software supporting it.\n    If Couchbase is capable of enforcing this restriction but is not configured\nto do so, this is a finding. This holds even if the restriction is enforced by\napplications or supporting software.\n    If it is not technically feasible for Couchbase to enforce this\nrestriction, but the application(s) or supporting software are configured to do\nso, this is not a finding.\n    If it is not technically feasible for Couchbase to enforce this\nrestriction, and applications and supporting software are not so configured,\nthis is a finding.\n    If the value for any type of user account is not set, this is a finding.\n    If a value is set but is not equal to the value specified in the\ndocumentation (or the default value defined in this check) for the type of\nuser, this is a finding."},{"label":"fix","data":"If Couchbase is capable of enforcing this restriction, but is not\nconfigured to do so, configure it to do so. (This may involve the development\nof one or more triggers.)\n    If it is not technically feasible for Couchbase to enforce this\nrestriction, and the application(s) and supporting software are not configured\nto do so, configure them to do so.\n    If the value for any type of user account is not set, determine the correct\nvalue and set it.\n    If a value is set but is not equal to the value specified for the type of\nuser, determine the correct value, set it, and update the documentation, as\nappropriate."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000001-DB-000031","gid":"V-32157","rid":"SV-42474r3_rule","stig_id":"SRG-APP-000001-DB-000031","fix_id":"F-36081r2_fix","cci":["CCI-000054"],"nist":["AC-10","Rev_4"]},"code":"control \"V-32157\" do\n  title \"Couchbase must limit the number of concurrent sessions to an\norganization-defined number per user for all accounts and/or account types.\"\n  desc  \"Database management includes the ability to control the number of\nusers and user sessions utilizing a Couchbase. Unlimited concurrent connections\nto Couchbase could allow a successful Denial of Service (DoS) attack by\nexhausting connection resources; and a system can also fail or be degraded by\nan overload of legitimate users. Limiting the number of concurrent sessions per\nuser is helpful in reducing these risks.\n\n    This requirement addresses concurrent session control for a single account.\nIt does not address concurrent sessions by a single user via multiple system\naccounts; and it does not deal with the total number of sessions across all\naccounts.\n\n    The capability to limit the number of concurrent sessions per user must be\nconfigured in or added to Couchbase (for example, by use of a logon trigger),\nwhen this is technically feasible. Note that it is not sufficient to limit\nsessions via a web server or application server alone, because legitimate users\nand adversaries can potentially connect to Couchbase by other means.\n\n    The organization will need to define the maximum number of concurrent\nsessions by account type, by account, or a combination thereof. In deciding on\nthe appropriate number, it is important to consider the work requirements of\nthe various types of users. For example, 2 might be an acceptable limit for\ngeneral users accessing the database via an application; but 10 might be too\nfew for a database administrator using a database management GUI tool, where\neach query tab and navigation pane may count as a separate session.\n\n    (Sessions may also be referred to as connections or logons, which for the\npurposes of this requirement are synonyms.)\n  \"\n  desc  \"check\", \"\n    Determine whether the system documentation specifies limits on the number\nof concurrent Couchbase sessions per account by type of user. If it does not,\nassume a limit of 10 for database administrators and 2 for all other users.\n    Review the concurrent-sessions settings in Couchbase and/or the\napplications using it, and/or the system software supporting it.\n    If Couchbase is capable of enforcing this restriction but is not configured\nto do so, this is a finding. This holds even if the restriction is enforced by\napplications or supporting software.\n    If it is not technically feasible for Couchbase to enforce this\nrestriction, but the application(s) or supporting software are configured to do\nso, this is not a finding.\n    If it is not technically feasible for Couchbase to enforce this\nrestriction, and applications and supporting software are not so configured,\nthis is a finding.\n    If the value for any type of user account is not set, this is a finding.\n    If a value is set but is not equal to the value specified in the\ndocumentation (or the default value defined in this check) for the type of\nuser, this is a finding.\n  \"\n  desc  \"fix\", \"\n    If Couchbase is capable of enforcing this restriction, but is not\nconfigured to do so, configure it to do so. (This may involve the development\nof one or more triggers.)\n    If it is not technically feasible for Couchbase to enforce this\nrestriction, and the application(s) and supporting software are not configured\nto do so, configure them to do so.\n    If the value for any type of user account is not set, determine the correct\nvalue and set it.\n    If a value is set but is not equal to the value specified for the type of\nuser, determine the correct value, set it, and update the documentation, as\nappropriate.\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000001-DB-000031\"\n  tag \"gid\": \"V-32157\"\n  tag \"rid\": \"SV-42474r3_rule\"\n  tag \"stig_id\": \"SRG-APP-000001-DB-000031\"\n  tag \"fix_id\": \"F-36081r2_fix\"\n  tag \"cci\": [\"CCI-000054\"]\n  tag \"nist\": [\"AC-10\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32157.rb"},"waiver_data":{},"results":[]},{"id":"V-32375","title":"Couchbase must include additional, more detailed, organization-defined\ninformation in the audit records for audit events identified by type, location,\nor subject.","desc":"Information system auditing capability is critical for accurate\nforensic analysis. Reconstruction of harmful events or forensic analysis is not\npossible if audit records do not contain enough information. To support\nanalysis, some types of events will need information to be logged that exceeds\nthe basic requirements of event type, time stamps, location, source, outcome,\nand user identity. If additional information is not available, it could\nnegatively impact forensic investigations into user actions or other malicious\nevents.\n\n    The organization must determine what additional information is required for\ncomplete analysis of the audited events. The additional information required is\ndependent on the type of information (e.g., sensitivity of the data and the\nenvironment within which it resides). At a minimum, the organization must\nemploy either full-text recording of privileged commands or the individual\nidentities of users of shared accounts, or both. The organization must maintain\naudit trails in sufficient detail to reconstruct events to determine the cause\nand impact of compromise.\n\n    Examples of detailed information the organization may require in audit\nrecords are full-text recording of privileged commands or the individual\nidentities of shared account users.","descriptions":[{"label":"default","data":"Information system auditing capability is critical for accurate\nforensic analysis. Reconstruction of harmful events or forensic analysis is not\npossible if audit records do not contain enough information. To support\nanalysis, some types of events will need information to be logged that exceeds\nthe basic requirements of event type, time stamps, location, source, outcome,\nand user identity. If additional information is not available, it could\nnegatively impact forensic investigations into user actions or other malicious\nevents.\n\n    The organization must determine what additional information is required for\ncomplete analysis of the audited events. The additional information required is\ndependent on the type of information (e.g., sensitivity of the data and the\nenvironment within which it resides). At a minimum, the organization must\nemploy either full-text recording of privileged commands or the individual\nidentities of users of shared accounts, or both. The organization must maintain\naudit trails in sufficient detail to reconstruct events to determine the cause\nand impact of compromise.\n\n    Examples of detailed information the organization may require in audit\nrecords are full-text recording of privileged commands or the individual\nidentities of shared account users."},{"label":"check","data":"Review the system documentation to identify what additional information the\norganization has determined to be necessary.\n    Check Couchbase settings and existing audit records to verify that all\norganization-defined additional, more detailed information is in the audit\nrecords for audit events identified by type, location, or subject.\n    If any additional information is defined and is not contained in the audit\nrecords, this is a finding."},{"label":"fix","data":"Configure Couchbase audit settings to include all\norganization-defined detailed information in the audit records for audit events\nidentified by type, location, or subject."}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000101-DB-000044","gid":"V-32375","rid":"SV-42712r4_rule","stig_id":"SRG-APP-000101-DB-000044","fix_id":"F-36289r3_fix","cci":["CCI-000135"],"nist":["AU-3 (1)","Rev_4"]},"code":"control \"V-32375\" do\n  title \"Couchbase must include additional, more detailed, organization-defined\ninformation in the audit records for audit events identified by type, location,\nor subject.\"\n  desc  \"Information system auditing capability is critical for accurate\nforensic analysis. Reconstruction of harmful events or forensic analysis is not\npossible if audit records do not contain enough information. To support\nanalysis, some types of events will need information to be logged that exceeds\nthe basic requirements of event type, time stamps, location, source, outcome,\nand user identity. If additional information is not available, it could\nnegatively impact forensic investigations into user actions or other malicious\nevents.\n\n    The organization must determine what additional information is required for\ncomplete analysis of the audited events. The additional information required is\ndependent on the type of information (e.g., sensitivity of the data and the\nenvironment within which it resides). At a minimum, the organization must\nemploy either full-text recording of privileged commands or the individual\nidentities of users of shared accounts, or both. The organization must maintain\naudit trails in sufficient detail to reconstruct events to determine the cause\nand impact of compromise.\n\n    Examples of detailed information the organization may require in audit\nrecords are full-text recording of privileged commands or the individual\nidentities of shared account users.\n  \"\n  desc  \"check\", \"\n    Review the system documentation to identify what additional information the\norganization has determined to be necessary.\n    Check Couchbase settings and existing audit records to verify that all\norganization-defined additional, more detailed information is in the audit\nrecords for audit events identified by type, location, or subject.\n    If any additional information is defined and is not contained in the audit\nrecords, this is a finding.\n  \"\n  desc  \"fix\", \"Configure Couchbase audit settings to include all\norganization-defined detailed information in the audit records for audit events\nidentified by type, location, or subject.\"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000101-DB-000044\"\n  tag \"gid\": \"V-32375\"\n  tag \"rid\": \"SV-42712r4_rule\"\n  tag \"stig_id\": \"SRG-APP-000101-DB-000044\"\n  tag \"fix_id\": \"F-36289r3_fix\"\n  tag \"cci\": [\"CCI-000135\"]\n  tag \"nist\": [\"AU-3 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32375.rb"},"waiver_data":{},"results":[]},{"id":"V-32365","title":"Couchbase must initiate session auditing upon startup.","desc":"Session auditing is for use when a user's activities are under\ninvestigation. To be sure of capturing all activity during those periods when\nsession auditing is in use, it needs to be in operation for the whole time\nCouchbase is running.","descriptions":[{"label":"default","data":"Session auditing is for use when a user's activities are under\ninvestigation. To be sure of capturing all activity during those periods when\nsession auditing is in use, it needs to be in operation for the whole time\nCouchbase is running."},{"label":"check","data":"Once enabled on the cluster, Couchbase will initiate session auditing upon\nstartup.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \"audit.log\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <localhost>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \"Audit enabled\" is not set to\n\"true\", this is finding."},{"label":"fix","data":"Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs"}],"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000092-DB-000208","gid":"V-32365","rid":"SV-42702r2_rule","stig_id":"SRG-APP-000092-DB-000208","fix_id":"F-36280r3_fix","cci":["CCI-001464"],"nist":["AU-14 (1)","Rev_4"]},"code":"control \"V-32365\" do\n  title \"Couchbase must initiate session auditing upon startup.\"\n  desc  \"Session auditing is for use when a user's activities are under\ninvestigation. To be sure of capturing all activity during those periods when\nsession auditing is in use, it needs to be in operation for the whole time\nCouchbase is running.\"\n  desc  \"check\", \"\n    Once enabled on the cluster, Couchbase will initiate session auditing upon\nstartup.\n    Couchbase Server 6.5.0 and earlier -\n      As root or a sudo user, verify that the \\\"audit.log\\\" file exists in the\nvar/lib/couchbase/logs directory of the Couchbase application home (example:\n/opt/couchbase/var/lib/couchbase/logs) and is populated with data captured.\n      Review the audit.log file. If it does not exist or not populated with\ndata captured, this is a finding.\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, verify that auditing is enabled by executing the\nfollowing command:\n       $ couchbase-cli setting-audit -c <localhost>:<port> -u <Full Admin> -p\n<Password> --get-settings\n      Review the output of the command. If \\\"Audit enabled\\\" is not set to\n\\\"true\\\", this is finding.\n  \"\n  desc  \"fix\", \"\n    Enable session auditing on the Couchbase cluster.\n    Couchbase Server 6.5.0 and earlier -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --audit-enabled 1 --audit-log-rotate-interval 604800\n--audit-log-path /opt/couchbase/var/lib/couchbase/logs\n    Couchbase Server Version 6.5.1 and later -\n      As the Full Admin, execute the following command to enable auditing:\n       $ couchbase-cli setting-audit --cluster <host>:<port> --u <Full Admin>\n--password <Password> --set  --audit-enabled 1 --audit-log-rotate-interval\n604800 --audit-log-path /opt/couchbase/var/lib/couchbase/logs\n  \"\n  impact 0.5\n  tag \"severity\": \"medium\"\n  tag \"gtitle\": \"SRG-APP-000092-DB-000208\"\n  tag \"gid\": \"V-32365\"\n  tag \"rid\": \"SV-42702r2_rule\"\n  tag \"stig_id\": \"SRG-APP-000092-DB-000208\"\n  tag \"fix_id\": \"F-36280r3_fix\"\n  tag \"cci\": [\"CCI-001464\"]\n  tag \"nist\": [\"AU-14 (1)\", \"Rev_4\"]\nend\n","source_location":{"line":3,"ref":"/Users/chassenfeldt/Documents/GitHub/couchbase-enterprise-srg-baseline/controls/V-32365.rb"},"waiver_data":{},"results":[]}],"status":"loaded","status_message":""}],"statistics":{"duration":3.478007},"version":"4.22.22"}